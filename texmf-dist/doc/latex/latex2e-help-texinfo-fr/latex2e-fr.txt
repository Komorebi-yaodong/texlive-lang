LaTeX2e : un manuel de référence officieux
1 À propos de ce document
2 Vue d’ensemble de LaTeX
3 Classes de documents
4 Polices de caractères
5 Mise en page
6 Rubricage
7 Des renvois
8 Environments
9 Saut à la ligne
10 Saut de page
11 Note en bas de page
12 Définitions
13 Compteurs
14 Longueurs
15 Faire des paragraphes
16 Formules mathématiques
17 Modes
18 Styles de page
19 Espaces
20 Boîtes
21 Couleur
22 Graphiques
23 Insertions spéciales
24 Partitionner le fichier d’entrée
25 Parties pré/post-liminaires
26 Des lettres
27 Entrée/sortie console
28 Interface ligne de commande
Annexe A Patrons de documents
Annexe B Traduction de la licence
Index des concepts
Index des commandes
LaTeX2e : un manuel de référence officieux
1 À propos de ce document
2 Vue d’ensemble de LaTeX
  2.1 Début et fin
  2.2 Fichiers de sortie
  2.3 Les moteurs TeX
  2.4 Syntaxe des commandes LaTeX
  2.5 Les environnements
  2.6 CTAN : The Comprehensive TeX Archive Network
3 Classes de documents
  3.1 Options de classe de document
  3.2 Ajout de paquetages
  3.3 Construction des extensions (classes et paquetages)
    3.3.1 Structure d’une extension (classe ou paquetage)
    3.3.2 Commande pour extension (classe ou paquetage)
4 Polices de caractères
  4.1 styles des polices
  4.2 tailles des polices
  4.3 commandes de fontes de bas niveau
5 Mise en page
  5.1 ‘\onecolumn’
  5.2 ‘\twocolumn’
  5.3 ‘\flushbottom’
  5.4 ‘\raggedbottom’
  5.5 Paramètres de mise en page
  5.6 Flottants
6 Rubricage
  6.1 ‘\part’
  6.2 ‘\chapter’
  6.3 ‘\section’
  6.4 ‘\subsection’
  6.5 ‘\subsubsection’, ‘\paragraph’, ‘\subparagraph’
  6.6 ‘\appendix’
  6.7 ‘\frontmatter’, ‘\mainmatter’, ‘\backmatter’
  6.8 ‘\@startsection’, composer les rubriques.
7 Des renvois
  7.1 ‘\label’
  7.2 ‘\pageref{CLEF}’
  7.3 ‘\ref{CLEF}’
8 Environments
  8.1 ‘abstract’
  8.2 ‘array’
  8.3 ‘center’
    8.3.1 ‘\centering’
  8.4 ‘description’
  8.5 ‘displaymath’
  8.6 ‘document’
  8.7 ‘enumerate’
  8.8 ‘eqnarray’
  8.9 ‘equation’
  8.10 ‘figure’
  8.11 ‘filecontents’: Écrire un fichier externe
  8.12 ‘flushleft’
    8.12.1 ‘\raggedright’
  8.13 ‘flushright’
    8.13.1 ‘\raggedleft’
  8.14 ‘itemize’
  8.15 environnement ‘letter’: écrire des lettres postales
  8.16 ‘list’
    8.16.1 ‘\item’: Une entrée dans une liste
    8.16.2 ‘trivlist’: Une forme restreinte de ‘list’
  8.17 ‘math’
  8.18 ‘minipage’
  8.19 ‘picture’
    8.19.1 ‘\put’
    8.19.2 ‘\multiput’
    8.19.3 ‘\qbezier’
    8.19.4 ‘\graphpaper’
    8.19.5 ‘\circle’
    8.19.6 ‘\line’
    8.19.7 ‘\linethickness’
    8.19.8 ‘\thicklines’
    8.19.9 ‘\thinlines’
    8.19.10 ‘\oval’
    8.19.11 ‘\shortstack’
    8.19.12 ‘\vector’
    8.19.13 ‘\makebox’
    8.19.14 ‘\framebox’
    8.19.15 ‘\frame’
    8.19.16 ‘\dashbox’
  8.20 ‘quotation’ et ‘quote’
  8.21 ‘tabbing’
  8.22 ‘table’
  8.23 ‘tabular’
    8.23.1 ‘\multicolumn’
    8.23.2 ‘\cline’
    8.23.3 ‘\hline’
    8.23.4 ‘\vline’
  8.24 ‘thebibliography’
    8.24.1 ‘\bibitem’
    8.24.2 ‘\cite’
    8.24.3 ‘\nocite’
    8.24.4 Utilisation de BibTeX
  8.25 ‘theorem’
  8.26 ‘titlepage’
  8.27 ‘verbatim’
    8.27.1 ‘\verb’
  8.28 ‘verse’
9 Saut à la ligne
  9.1 ‘\\’
  9.2 ‘\obeycr’ & ‘\restorecr’
  9.3 ‘\newline’
  9.4 ‘\-’ (césure à gré)
  9.5 ‘\discretionary’ (point de césure généralisé)
  9.6 ‘\fussy’
  9.7 ‘\sloppy’
  9.8 ‘\hyphenation’
  9.9 ‘\linebreak’ & ‘\nolinebreak’
10 Saut de page
  10.1 ‘\clearpage’ & ‘\cleardoublepage’
  10.2 ‘\newpage’
  10.3 ‘\enlargethispage’
  10.4 ‘\pagebreak’ & ‘\nopagebreak’
11 Note en bas de page
  11.1 ‘\footnote’
  11.2 ‘\footnotemark’
  11.3 ‘\footnotetext’
  11.4 Notes en bas de page dans un tableau
  11.5 Note en bas de page dont le renvoi est au sein d’un titre de rubrique
  11.6 Paramètres des notes en bas de page
12 Définitions
  12.1 ‘\newcommand’ & ‘\renewcommand’
  12.2 ‘\providecommand’
  12.3 ‘\makeatletter’ et ‘\makeatother’
  12.4 ‘\@ifstar’
  12.5 ‘\newcounter’ : allouer un compteur
  12.6 ‘\newlength’ : allouer une longueur
  12.7 ‘\newsavebox’ : allouer une boîte
  12.8 ‘\newenvironment’ & ‘\renewenvironment’
  12.9 ‘\newtheorem’
  12.10 ‘\newfont’: définit une nouvelle police (obsolète)
  12.11 ‘\protect’
13 Compteurs
  13.1 ‘\alph \Alph \arabic \roman \Roman \fnsymbol’: Taper des compteurs
  13.2 ‘\usecounter{COMPTEUR}’
  13.3 ‘\value{COMPTEUR}’
  13.4 ‘\setcounter{COMPTEUR}{VALUE}’
  13.5 ‘\addtocounter{COMPTEUR}{VALEUR}’
  13.6 ‘\refstepcounter{COMPTEUR}’
  13.7 ‘\stepcounter{COMPTEUR}’
  13.8 ‘\day \month \year’: Predefined compteurs
14 Longueurs
  14.1 Unités de longueur
  14.2 ‘\setlength’
  14.3 ‘\addtolength’
  14.4 ‘\settodepth’
  14.5 ‘\settoheight’
  14.6 ‘\settowidth’
  14.7 Longueurs prédéfinies
15 Faire des paragraphes
  15.1 ‘\indent’
  15.2 ‘\noindent’
  15.3 ‘\parindent’ & ‘\parskip’
  15.4 Notes en marge
16 Formules mathématiques
  16.1 Indices inférieurs & supérieurs
  16.2 Symboles mathématiques
  16.3 Fonctions mathématiques
  16.4 Accents mathématiques
  16.5 Espacement en mode mathématique
  16.6 Recueil de diverses commandes utiles en math
17 Modes
  17.1 ‘\ensuremath’
18 Styles de page
  18.1 ‘\maketitle’
  18.2 ‘\pagenumbering’
  18.3 ‘\pagestyle’
  18.4 ‘\thispagestyle{STYLE}’
19 Espaces
  19.1 ‘\hspace’
  19.2 ‘\hfill’
  19.3 ‘\<<espace>>’ et \@
  19.4 ‘\ ’ après une séquence de contrôle
  19.5 ‘\frenchspacing’, rendre égaux les espacements inter-phrase et inter-mot
  19.6 ‘\thinspace’
  19.7 ‘\/’ : insérer une correction italique
  19.8 ‘\hrulefill \dotfill’
  19.9 ‘\addvspace’
  19.10 ‘\bigskip \medskip \smallskip’
  19.11 ‘\vfill’
  19.12 ‘\vspace’
20 Boîtes
  20.1 ‘\mbox’ & ‘\makebox’
  20.2 ‘\fbox’ & ‘\framebox’
  20.3 ‘\parbox’
  20.4 ‘\raisebox’
  20.5 ‘\sbox’ & ‘\savebox’
  20.6 ‘lrbox’
  20.7 ‘\usebox’
21 Couleur
  21.1 Options du paquetage ‘color’
  21.2 Modèles de couleur
  21.3 Commandes pour ‘color’
    21.3.1 Definir des couleurs
    21.3.2 Mettre du texte en couleur
    21.3.3 Faire des boîtes en couleur
    21.3.4 Faire des pages en couleur
22 Graphiques
  22.1 Options du paquetage ‘graphics’
  22.2 Configuration du paquetage ‘graphics’
    22.2.1 ‘\graphicspath’
    22.2.2 ‘\DeclareGraphicsExtensions’
    22.2.3 ‘\DeclareGraphicsRule’
  22.3 Commandes du paquetage ‘graphics’
    22.3.1 ‘\includegraphics’
    22.3.2 ‘\rotatebox’
    22.3.3 ‘\scalebox’
    22.3.4 ‘\resizebox’
23 Insertions spéciales
  23.1 Caractères réservés
  23.2 Capitales et bas de casse
  23.3 Symboles appelés par leur position dans une police
  23.4 Symboles en texte
  23.5 Accents
  23.6 Lettres latines supplémentaires
  23.7 ‘\rule’
  23.8 ‘\today’
24 Partitionner le fichier d’entrée
  24.1 ‘\endinput’
  24.2 ‘\include’ & ‘\includeonly’
  24.3 \input
25 Parties pré/post-liminaires
  25.1 Table des matières etc.
    25.1.1 ‘\addcontentsline’
    25.1.2 ‘\addtocontents’
    25.1.3 ‘\nofiles’
  25.2 Glossaires
  25.3 Index
26 Des lettres
  26.1 ‘\address’
  26.2 ‘\cc’
  26.3 ‘\closing’
  26.4 ‘\encl’
  26.5 ‘\location’
  26.6 ‘\makelabels’
  26.7 ‘\name’
  26.8 ‘\opening{TEXTE}’
  26.9 ‘\ps’
  26.10 ‘\signature{TEXTE}’
  26.11 ‘\telephone’
27 Entrée/sortie console
  27.1 ‘\openin’ & ‘\openout’
  27.2 ‘\read’
  27.3 ‘\typein[CMD]{MSG}’
  27.4 ‘\typeout{MSG}’
  27.5 ‘\write’
    27.5.1 ‘\write’ et la sécurité
    27.5.2 ‘\message’
    27.5.3 ‘\wlog’
    27.5.4 ‘\write18’
28 Interface ligne de commande
  28.1 Options passées à la ligne de commande
  28.2 Spécifier du code LaTeX sur la ligne de commande
  28.3 Nom d’ouvrage de TeX
  28.4 Quand quelque chose se passe mal
Annexe A Patrons de documents
  A.1 Un patron ‘beamer’
  A.2 Patron ‘article’
  A.3 Un patron ‘book’
  A.4 Un patron ‘book’ plus élaboré
Annexe B Traduction de la licence
Index des concepts
Index des commandes
LaTeX2e : un manuel de référence officieux
******************************************

Ce document est un manuel de référence officieux pour LaTeX2e, un
système de préparation de document, dans sa version « Décembre 2020 ».

1 À propos de ce document
*************************

Ceci est un manuel de référence officieux pour le système LaTeX2e de
préparation de document.  Ce système est mis en œuvre sous forme d’un
paquet de macros pour le programme de composition TeX (*note
Overview::).  La page d’accueil de ce document est
<https://latexref.xyz>.  Cette page contient des liens vers différentes
versions de ce document, dans différents formats et langues, mais aussi
vers ses sources, vers les archives des listes de diffusion qui lui sont
consacrées ainsi que vers d’autres infrastructures.

   Dans ce document, on utilise principalement juste le terme « LaTeX »
plutôt que « LaTeX2e », étant donné que la version précédente de
LaTeX (2.09) est gelée depuis des dizaines d’années.

   LaTeX est désormais maintenu par un groupe de bénévoles
(<http://latex-project.org>).  La documentation officielle écrite par le
projet LaTeX est disponible à partir de leur site web.  Le présent
document est complètement officieux et n’a pas été examiné par les
mainteneurs de LaTeX.  Ne leur envoyez donc pas de rapports d’anomalie
ou quoi que ce soit d’autre.

   En revanche, n’hésitez pas à adresser vos commentaires à
<latexrefman@tug.org>.

   Ce document est un manuel de référence.  Il y a d’autres sources
d’information sur LaTeX : elles sont très nombreuses, et s’adressent à
des utilisateurs de tous niveaux.  Voici quelques introductions :

<http://ctan.org/pkg/latex-doc-ptr>
     Deux pages de références recommandées à LaTeX documentation.

<http://ctan.org/pkg/first-latex-doc>
     Rédaction de votre premier document, avec un peu de texte et de
     mathématiques.

<http://ctan.org/pkg/usrguide>
     Le guide pour les auteurs de documents maintenu par le projet
     LaTeX.  Bien d’autres guides écrits par bien d’autres gens sont
     aussi disponibles, indépendamment du projet LaTeX ; l’article
     suivant en est un.

<http://ctan.org/pkg/lshort>
     Une courte (?)  indoduction à LaTeX, traduite en de nombreuses
     langues (traduction française :
     <http://ctan.org/pkg/lshort-french>).

<http://tug.org/begin.html>
     Introduction au système TeX, y compris LaTeX, et plus amples
     références.

2 Vue d’ensemble de LaTeX
*************************

Qu’est-ce que LaTeX?

   LaTeX est un système de composition de documents.  Il fut à l’origine
créé par Leslie Lamport ; il est désormais maintenu par un groupe de
volontaires (<http://latex-project.org>).  Il est largement utilisé, en
particulier pour les documents complexes et techniques, tels que ceux
impliquant des mathématiques.

   À l’aide d’un simple éditeur de texte, un utilisateur LaTeX écrit un
fichier, dit _fichier d’entrée_, qui contient son texte ; des
_commandes_ y sont intercalées : ce sont des instructions servant à
décrire la manière dont le texte doit être formaté.  En effet, LaTeX est
mis en œuvre comme un ensemble de commandes liées s’interfaçant avec le
programme de composition TeX de Donald E. Knuth (le terme technique est
que LaTeX est un “paquet de macros” pour le moteur TeX).  En donnant le
fichier d’entrée au moteur TeX, l’utilisateur produit le _document de
sortie_ qui contient son texte mis en page.

   Le terme LaTeX est aussi parfois utilisé pour signifier le langage à
balises dans lequel le code source du document est écrit, c’est-à-dire
pour signifier l’ensemble des commandes à la disposition d’un
utilisateur de LaTeX.

   Le nom LaTeX est l’abréviation de “Lamport TeX”.  On le prononce
LA-TÈQUE. Au sein du document, on produit le logo avec ‘\LaTeX’.  Là où
l’utilisation du logo n’est pas raisonnable, comme dans du texte brut,
écrivez-le ‘LaTeX’.

2.1 Début et fin
================

Les fichiers LaTeX ont une structure globale simple, avec un début et
une fin standards.  Voici un exemple : il s’agit d’obtenir un document
contenant la phrase « Bonjour le monde ».

     \documentclass{article}
     \begin{document}
     Bonjour le monde \LaTeX.
     \end{document}

Ici ‘article’ est ce que l’on appelle la “classe de document” ; elle est
implémentée dans une fichier ‘article.cls’.  N’importe quelle classe de
document peut être utilisée.  Quelques classes de document sont définies
par LaTeX lui-même, et un grand nombre d’autres sont largement
disponibles.  *Note Document classes::.

   Vous pouvez inclure d’autres commandes LaTeX entre les commandes
‘\documentclass’ et ‘\begin{document}’ (cette zone est appelée le
“préambule”).

   Le code ‘\begin{document} ... \end{document}’ est ce qu’on appelle un
“environnement” ; l’environnement ‘document’ (et aucun autre) est
obligatoire dans tous les documents LaTeX (*note document::).  LaTeX
fournit lui-même beaucoup d’environnements, et bien plus encore sont
définis séparément.  *Note Environments::.

   Les rubriques suivantes sont consacrées aux façons de produire, à
partir d’un fichier d’entrée LaTeX, des documents PDF ou d’autres
formats.

2.2 Fichiers de sortie
======================

LaTeX produit un fichier de sortie principal et au moins deux fichiers
auxiliaires.  Le nom du fichier de sortie principal se termine soit en
‘.dvi’ soit en ‘.pdf’.

‘.dvi’
     S’il est invoqué avec la commande système ‘latex’, alors il produit
     un fichier « DeVice Independent(1) » (‘.dvi’).  Vous pouvez
     visualiser ce fichier avec une commande comme ‘xdvi’, ou le
     convertir en fichier PostScript ‘.ps’ avec ‘dvips’ ou en fichier
     « Portable Document Format(2) » ‘.pdf’ avec ‘dvipdfmx’.  Un grand
     nombre d’autres progammes utilitaires pour fichiers DVI sont
     disponibles (<http://mirror.ctan.org/dviware>).

‘.pdf’
     Si LaTeX est invoqué avec la commande système ‘pdflatex’, alors la
     sortie principale est un fichier “Portable Document Format”
     (‘.pdf’).  Typiquement, il s’agit d’un fichier autonome, avec
     toutes les polices et images incorporées.  D’autres commandes
     (*note TeX engines::) produisent des fichiers PDF.

   LaTeX produit toujours au moins deux fichier supplémentaires.

‘.log’
     Ce fichier de transcription, ou “fichier journal”, contient des
     informations sommaires telles que la liste des paquetages chargés.
     Il contient aussi des messages de diagnostic et, possiblement, des
     informations supplémentaires concernant toutes erreurs.

‘.aux’
     De l’information auxiliaire est utilisée par LaTeX pour des choses
     telles que les doubles renvois.  Par exemple, la première fois que
     LaTeX trouve un renvoi en aval — une double référence à quelque
     chose qui n’est pas encore apparu dans le code source — il
     apparaîtra dans la sortie comme un double point d’interrogation
     ‘??’.  Quand l’endroit auquel le renvoi fait référence finit par
     apparaître dans le code source, alors LaTeX écrit son information
     de localisation dans ce fichier ‘.aux’.  À l’invocation suivante,
     LaTeX lit l’information de localisation à partir de ce fichier et
     l’utilise pour résoudre le renvoi, en remplaçant le double point
     d’interrogation avec la localisation mémorisée.

   LaTeX peut produire encore d’autres fichiers, caractérisés par la
terminaison du nom de fichier.  Ceux-ci incluent un fichier ‘.lof’ qui
est utilisé pour fabriquer la liste des figures, un fichier ‘.lot’
utilisé pour fabriquer une liste des tableaux, et un fichier ‘.toc’
utilisé pour fabriquer une table des matières (*note Table of contents
etc.::).  Une classe de document particulière peut en créer d’autres ;
cette liste n’a pas de fin définie.

   ---------- Footnotes ----------

   (1) Indépendant du périphérique de sortie, ce n’est toutefois pas un
format portable de document

   (2) Format portable de document

2.3 Les moteurs TeX
===================

LaTeX est un vaste ensemble de commandes qui sont exécuté par un
programme TeX (*note Overview::).  Un tel ensemble de commande est
appelé un “format”, et peut être matérialisé dans un fichier binaire
‘.fmt’, ce qui permet qu’il soit lu bien plus rapidement que le source
TeX correspondant.

   Cette rubrique donne une brève vue d’ensemble des programmes TeX les
plus répandus (voir aussi *note Command line interface::).

‘latex’
‘pdflatex’
     Dans TeX Live (<http://tug.org/texlive>, si LaTeX est invoqué avec
     les commandes système ‘latex’ ou ‘pdflatex’, alors le moteur pdfTeX
     est exécuté (<http://ctan.org/pkg/pdftex>).  Selon qu’on invoque
     ‘latex’ ou ‘pdflatex’, la sortie principale est respectivement un
     fichier ‘.dvi’ ou un fichier ‘.pdf’.

     pdfTeX incorpore les extensions qu’e-TeX apporte au programme
     original de Knuth (<http://ctan.org/pkg/etex>), ce qui inclut des
     caractéristiques supplémentaires de programmation et la composition
     bi-directionnelle, et a lui-même de nombreuses extentions.  e-TeX
     est lui-même disponible par la commande système ‘etex’, mais le
     langage du fichier d’entrée est du TeX de base (et le fichier
     produit est un ‘.dvi’).

     Dans d’autres distributions TeX, ‘latex’ peut invoquer e-TeX plutôt
     que pdfTeX.  Dans tous les cas, on peut faire l’hyptohèse que les
     extension e-TeX sont disponibles en LaTeX.

‘lualatex’
     Si LaTeX est invoqué avec la commandes systèmes ‘lualatex’, alors
     le moteur LuaTeX est exécuté (<http://ctan.org/pkg/luatex>).  Ce
     programme permet que du code écrit dans le langage script Lua
     (<http://luatex.org>) interagisse avec la compostion faite par TeX.
     LuaTeX traite nativement l’entrée en codage Unicode UTF-8, peut
     traiter les polices OpenType et TrueType, et produit un fichier
     ‘.pdf’ par défaut.  Il y a aussi ‘dvilualatex’ pour produire un
     fichier ‘.dvi’.

‘xelatex’
     Si LaTeX est invoqué avec la commandes système ‘xelatex’, le moteur
     XeTeX est exécuté (<http://tug.org/xetex>).  Comme LuaTeX, XeTeX
     prend en charge nativement le codage Unicode UTF-8 et les polices
     TrueType et OpenType, bien que leur implémentation soit
     complètement différente, en utilisant principalement des
     bibliothèques externes plutôt que du code interne.  XeTeX produit
     un fichier ‘.pdf’ en sortie ; il ne prend pas en charge la sortie
     DVI.

     En interne, XeTeX crée un fichier ‘.xdv’ file, une variante de DVI,
     et traduit cela en PDF en utilisant le programme (‘x’)‘dvipdfmx’,
     mais ce processus est automatique.  Le fichier ‘.xdv’ n’est utile
     que pour le débogage.

‘platex’
‘uplatex’
     Ces commandes fournissent une prise en charge significativement
     plus riche du Japanese et d’autres langues ; la variant en ‘u’
     prend en charge l’Unicode.  Voir <https://ctan.org/pkg/ptex> et
     <https://ctan.org/pkg/uptex>.

   Depuis 2019, il y a une commande companion en ‘-dev’ et un format
pour tous les moteur cités plus hauts :

‘dvilualatex-dev’
‘latex-dev’
‘lualatex-dev’
‘pdflatex-dev’
‘platex-dev’
‘uplatex-dev’
‘xelatex-dev’
     Ce sont les candidats pour une parution de LaTeX à venir.  L’usage
     principal est de découvrir et traiter les problèmes de
     compatibilité avant la parution officielle.

     Ces format en ‘-dev’ rendent facile pour quiconque d’aider à
     l’essai des documents et du code : vous pouvez exécutez, dison,
     ‘pdflatex-dev’ au lieu de ‘pdflatex’, sans changer quoi que ce soit
     d’autre dans votre environnement.  En réalité, le plus facile et
     utile est de toujours exécuter les versions en ‘-dev’ au lieu de
     s’embêter à basculer entre les deux.  Pendant les périodes calmes
     après une parution, ces commandes seront équivalentes.

     Ce ne sont pas des échantillons quotidiens de code de développement
     non testé.  L’équipe LaTeX fait subir à ces commandes les mêmes
     essais étendus de non régression avant leur parution.

     Pour plus ample information, voir “The LaTeX release workflow and
     the LaTeX ‘dev’ formats” par Frank Mittelbach, ‘TUGboat’ 40:2,
     <https://tug.org/TUGboat/tb40-2/tb125mitt-dev.pdf>.

2.4 Syntaxe des commandes LaTeX
===============================

Dans le fichier d’entrée LaTeX, un nom de commande commence avec une
contre-oblique, ‘\’.  Le nom lui-même consiste soit en (a) une chaîne de
lettres ou (b) un unique caractère, qui dans ce cas n’est pas une
lettre.

   Les noms de commandes LaTeX sont sensibles à la casse de sorte que
‘\pagebreak’ diffère de ‘\Pagebreak’ (ce dernier n’est pas une commande
standarde).  La plupart des noms de commandes sont en bas de casse, mais
quoi qu’il en soit vous devez saisir toute commande en respectant la
casse dans laquelle elle est définie.

   Une commande peut être suivie de zéro, un ou plus d’arguments.  Ces
arguments peuvent être soit obligatoires, soit optionnels.  Les
arguments obligatoires sont entre accolades, ‘{...}’.  Les arguments
optionnels sont entre crochets, ‘[...]’.  En général, mais ce n’est pas
universel, si la commande prend un argument optionnel, il vient en
premier, avant tout argument obligatoire.

   Au sein d’un argument optionnel, pour utiliser le crochet
fermant (‘]’) cachez-le au sein d’accolades, comme dans ‘\item[crochet
fermant {]}]’.  De même, si un argument optionnel vient en dernier, sans
argument obligatoire à sa suite, alors pour que le premier caractère
dans le texte suivant soit un crochet ouvrant, cachez-le entre
accolades.

   LaTeX obéit à la convention selon laquelle certaines commandes ont
une forme étoilée (‘*’) qui est en relation avec la forme sans le ‘*’,
telles que ‘\chapter’ et ‘\chapter*’.  La différence exacte de
comportement dépend de la commande.

   Ce manuel décrit toutes les options acceptées et les formes en ‘*’
pour les commandes dont il traite (à l’exception des omissions
involontaires ou bogues de ce manuel).

2.5 Les environnements
======================

Synopsis :

     \begin{NOM-ENVIRONNEMENT}
       ...
     \end{NOM-ENVIRONNEMENT}

   Une zone du code source LaTeX, au sein de laquelle il y a un
comportement différent.  Par exemple, pour la poésie en LaTeX mettez les
lignes entre ‘\begin{verse}’ et ‘\end{verse}’.

     \begin{verse}
         Plus ne suis ce que j'ai été \\
          ...
     \end{verse}

   *Note Environments::, pour une liste d’environnements.  En
particulier, il est à noter que tout document LaTeX doit avoir un
environnement ‘document’ : une paire ‘\begin{document} ...
\end{document}’.

   Le NOM-ENVIRONNEMENT du début doit s’accorder exactement avec celui
de la fin.  Cela vaut aussi dans le cas où NOM-ENVIRONNEMENT se termine
par une étoile (‘*’) ; l’argument à la fois de ‘\begin’ et ‘\end’ doit
comprendre l’étoile.

   Les environnements peuvent avoir des arguments, y compris des
arguments optionnels.  L’exemple ci-dessous produit un tableau.  Le
premier argument est optionnel (il aligne verticalement le tableau sur
sa première ligne) alors que le second argument est obligatoire (il
spécifie le format des colonnes du tableau).

     \begin{tabular}[t]{r|l}
       ... lignes du tableau ...
     \end{tabular}

2.6 CTAN : The Comprehensive TeX Archive Network
================================================

Le «Comprehensive TeX Archive Network», ou CTAN, est le dépôt de
matériel libre de la communauté TeX et LaTeX.  C’est un ensemble de
sites Internet réparti dans le monde qui offre de télécharger du
matériel en relation avec LaTeX.  Visitez CTAN sur la Toile à l’adresse
<https://ctan.org>.

   Ce matériel est organisé en paquetages, des paquets discrets qui
offrent typiquement une fonctionalité cohérente et sont maintenus par
une personne ou un petit nombre de personnes.  Par exemple, beaucoup
d’organismes d’édition on un paquetage qui permet aux auteurs de
formater leurs articles conformément aux spécification de cet organisme.

   En plus des resources massives, le site ‘ctan.org’ offre des
fonctions telles que la recherche par nom ou par fonctionalité.

   CTAN n’est pas un site unique, mais au lieu de cela un ensemble de
sites.  L’un des ces sites est le cœur.  Ce site gère activement le
matériel, par exemple en acceptant les téléversements de matériel
nouveau ou mis à jour.  Il est hébergé par le groupe TeX allemand DANTE
e.V.

   D’autres sites autour du monde apportent leur aide en miroitant,
c’est à dire en synchronisant automatiquement leurs collections sur le
site maître et en rendant à leur tour leurs copies publiquement
disponibles.  Ceci donne aux utilisateurs géographiquement proches un
meilleur accès et allège la charge sur le site maître.  La liste des
miroirs se trouve à <https://ctan.org/mirrors>.

3 Classes de documents
**********************

La classe globale d’un document est définie avec cette commande, c’est
normalement la première commande dans une fichier source LaTeX.

     \documentclass[OPTIONS]{CLASSE}

La commande ‘\documentclass’ doit être la première commande dans un
fichier source LaTeX.

   Les noms de CLASSE de document incorporés à LaTeX.  (Beaucoup de
classes de document sont disponibles dans des paquetages séparés ; *note
Overview::.)

‘article’
     Pour un article de journal, une présentation, et diverses
     utilisations générales.

‘book’

     Des livres complets, y compris des chapitres et possiblement
     incluant des pièces préliminaires telles qu’une préface, et
     postliminaires telles qu’un appendice (*note Front/back matter::).

‘letter’
     Courrier, incluant optionnellement des étiquettes pour enveloppes
     (*note Letters::).

‘report’
     Pour des documents de longueur entre celle d’un ‘article’ et celle
     d’un ‘book’, tels que des rapports techniques ou des thèses, et qui
     peuvent contenir plusieurs chapitres.

‘slides’
     Pour des présentations de diapositive — rarement utilisé de nos
     jours.  À sa place la classe ‘beamer’ est sans doute celle dont
     l’usage est le plus répendu (<https://ctan.org/pkg/beamer>).  *Note
     beamer template::, pour un petit partron de document beamer.

   Les OPTIONS standardes sont décrites dans les rubriques suivantes.

3.1 Options de classe de document
=================================

Vous pouvez spécifier ce qu’on appelle des “d’options globales” ou des
“des options de classe” en les passant entre crochet à la commande
‘\documentclass’, comme d’habitude.  Pour spécifier plus d’une OPTION,
séparez les par une virgule :

     \documentclass [OPTION1, OPTION2, ...]{CLASSE}

   Voici la liste des options standardes de classe.

   Toutes les classes standardes, sauf ‘slides’ acceptent les options
suivantes pour sélectionner la taille de police de caractères (l’option
par défaut est ‘10pt’):

     12pt 11pt 10pt

   Toutes les classes standardes acceptent ces options de sélection de
la taille du papier (ci-après hauteur sur largeur) :

‘a4paper’
     210 sur 297mm (environ 8,25 sur 11,75 pouces)

‘a5paper’
     148 sur 210mm (environ 5,8 sur 8,3 pouces)

‘b5paper’
     176 sur 250mm (environ 6,9 sur 9,8 pouces)

‘executivepaper’
     7,25 sur 10,5 pouces

‘legalpaper’
     8,5 sur 14 pouces

‘letterpaper’
     8,5 sur 11 pouces (l’option par défaut)

   Lorsque on utilise l’un des moteurs pdfLaTeX, LuaLaTeX, ou XeLaTeX
(*note TeX engines::), les options autres que ‘letterpaper’ règlent la
zone d’impression mais vous devez également régler la taille du papier
physique.  Un méthode pour faire cela est de placer
‘\pdfpagewidth=\paperwidth’ et ‘\pdfpageheight=\paperheight’ dans le
préambule de votre document.

   Le paquetage ‘geometry’ fournit des méthodes flexibles pour régler la
zone d’impression et la taille du papier physique.

   Diverses autres options:

‘draft, final’
     Pour marquer/ne marquer pas les boîtes trop pleines avec une grande
     boîte noire ; l’option par défaut est ‘final’.
‘fleqn’
     Pour aligner à gauches les formules hors texte ; par défaut elles
     sont centrées.
‘landscape’
     Pour sélectionner le format de page à l’italienne ; l’option par
     défaut est à la française.
‘leqno’
     Pour Mettre les numéros d’équation sur le côté gauche des
     équations ; par défaut ils sont sur le côté droit.
‘openbib’
     Pour utiliser le format bibliographie “openbib”.
‘titlepage, notitlepage’
     Indique si la page de titre est séparée ; l’option par défaut
     dépend de la classe.

   Ces options ne sont pas disponibles avec la classe ‘slides’ :

‘onecolumn’
‘twocolumn’
     Composer en une ou deux colonnes ; le défaut est ‘onecolumn’.

‘oneside’
‘twoside’
     Sélectionne la disposition en recto simple ou recto-verso ; le
     défaut est ‘oneside’ pour recto simple, sauf pour la classe ‘book’.

     Le paramètre ‘\evensidemargin’ (‘\oddsidemargin’) détermine la
     distance sur les pages de numéro pair (impair) entre le côté gauche
     de la page et la marge gauche du texte.  Voir *note page layout
     parameters oddsidemargin::.

‘openright’
‘openany’
     Détermine si un chapitre doit commencer sur une page de droite ;
     défaut est ‘openright’ pour la classe ‘book’.

   La classe ‘slide’ offre l’option ‘clock’ pour l’impression du temps
au bas de chaque note.

3.2 Ajout de paquetages
=======================

Les paquetages ajoutés PAQUO sont chargés comme ceci :

     \usepackage[OPTIONS]{PAQUO}

   Pour spécifier plus d’un paquetage, vous pouvez les séparer par une
virgule comme dans ‘\usepackage{PAQUO1,PAQUO2,...}’, ou utiliser
plusieurs commandes ‘\usepackage’.

   Toutes les options indiquées dans la commande ‘\documentclass’ qui
sont inconnues de la classe de document sélectionnée sont transmises aux
paquetages chargés par ‘\usepackage’.

3.3 Construction des extensions (classes et paquetages)
=======================================================

Vous pouvez créer de nouvelles classes de document, et de nouveaux
paquetages.  Par exemple, si vos notes doivent répondre à des exigences
locales, telles qu’une en-tête standarde pour chaque page, alors vous
pourriez créer une nouvelle classe ‘cmsnote.cls’ et commencer vos
documents par ‘\documentclass{cmsnote}’.

   Ce qui distingue un paquetage d’une classe de document c’est que les
commandes d’une paquetage sont utilisables pour différentes classes
alors que celles dans une classes de document sont spécifiques à cette
classes.  Ainsi, une commande qui permet de régler les en-têtes de pages
irait dans un paquetage alors qu’une commande intitulant en-têtes de
pages par ‘Note du service de mathématique de la CMS’ irait dans une
classe.

   Au sein d’un fichier classe ou paquetage on peut utiliser l’arobe ‘@’
comme un caractère dans les noms de commande sans avoir à entourer le
code contenant la commande en question par ‘\makeatletter’ et
‘\makeatother’.  *Note \makeatletter & \makeatother::.  Ceci permet de
créer des commandes que les utilisateurs ne risquent pas de redéfinir
accidentellement.  Une autre technique est de préfixer les commandes
spécifiques à une classe ou paquetage avec une chaîne particulière, de
sorte à empêcher votre classe ou paquetage d’interférer avec d’autres.
Par exemple, la classe ‘notecms’ pourrait avoir des commandes
‘\cms@tolist’, ‘\cms@fromlist’, etc.

3.3.1 Structure d’une extension (classe ou paquetage)
-----------------------------------------------------

Un fichier de classe pour paquetage comprend typiquement quatre parties.
  1. Dans la “partie d’identification” le fichier dit s’il s’agit d’un
     paquetage ou d’une classe LaTeX et s’auto-décrit, en utilisant les
     commandes ‘\NeedsTeXFormat’ et ‘\ProvidesClass’ ou
     ‘\ProvidesPackage’.
  2. La partie des “déclarations préliminaires” déclare des commandes et
     peut aussi charger d’autres fichiers.  D’ordinaire ces commandes
     sont celles nécessaires au code utilisé dans la partie suivante.
     Par exemple, une classe ‘notecms’ pourrait être appelée avec une
     option pour lire un fichier où est défini une liste de personnes
     désignées comme destinataires de la note, comme
     ‘\documentclass[destinataires-math]{notecms}’, et donc on a besoin
     de définir une commande
     ‘\newcommand{\defdestinataires}[1]{\def\@liste@destinataires{#1}}’
     à utiliser dans ce fichier.
  3. Dans la partie de “gestion des options” la classes ou le paquetage
     déclare et traite ses options.  Les options de classes permette à
     l’utilisateur de commencer leur document comme dans
     ‘\documentclass[LISTE D'OPTIONS]{NOM DE LA CLASSE}’, pour modifier
     le comportement de la classe.  Un exemple est lorsque on déclare
     ‘\documentclass[11pt]{article}’ pour régler la taille par défaut de
     la police du document.
  4. Finalement, dans la partie des “déclarations supplémentaires” la
     classe ou le paquetage effectue la plus grosse partie de son
     travail : déclarant de nouvelles variables, commandes ou polices,
     et chargeant d’autres fichiers.

   Voici le commencement d’un fichier de classe, ce qui doit être
sauvegardé comme ‘souche.cls’ à un emplacement où LaTeX peut le trouver,
par exemple dans le même répertoire que le fichier ‘.tex’.

     \NeedsTeXFormat{LaTeX2e}
     \ProvidesClass{souche}[2017/07/06 souche à partir de laquelle contruire des classes]
     \DeclareOption*{\PassOptionsToClass{\CurrentOption}{article}}
     \ProcessOptions\relax
     \LoadClass{article}

   Elle s’auto-identifie, traite les options de classe par défaut en les
passant toutes à la classe ‘article’, et puis charge la classe ‘article’
de sorte à fournir la base du code de cette classe.

   Pour plus d’information, voir le guide officiel pour les auteurs de
classes et de paquetage, le « Class Guide »,
<http://www.latex-project.org/help/documentation/clsguide.pdf> (la
plupart des descriptions faites ici s’inspirent de ce document), ou
l’article suivant <https://www.tug.org/TUGboat/tb26-3/tb84heff.pdf>
illutrant la construction d’une nouvelle classe.

3.3.2 Commande pour extension (classe ou paquetage)
---------------------------------------------------

Voici les commandes conçues pour aider les auteurs d’extension (classes
ou paquetages).

‘\AtBeginDvi{specials}’
     Sauvegarde dans une registre de boîte des choses qui sont à écrire
     dans le fichier ‘.dvi’ au début de l’achèvement de la première page
     du

     document.

‘\AtEndOfClass{CODE}’
‘\AtEndOfPackage{CODE}’
     Crochet pour inséer le CODE à exécuter lorsque LaTeX termine le
     traiement de la classe ou du paquetage courants.  On peut utiliser
     ces crochet plusieurs fois ; le ‘code’ sera exécuté dans l’ordre
     d’appel.  Voir aussi *note \AtBeginDocument::.

‘\CheckCommand{CMD}[NUM][DÉFAUT]{DÉFINITION}’
‘\CheckCommand*{CMD}[NUM][DÉFAUT]{DÉFINITION}’
     Similaire à ‘\newcommand’ (*note \newcommand & \renewcommand::)
     mais ne définit pas CMD ; à la place vérifie que la définition
     actuelle de CMD est exactement celle donnée par DÉFINITION et est
     ou n’est pas “longue” selon ce que l’on attend.  Une commande est
     dite longue lorsque elle accepte ‘\par’ au sein d’un argument.  On
     attend que la commande CMD soit longue avec la version non-étoilée
     de ‘\CheckCommand’.  Lève une erreur en cas d’échec de la
     vérification.  Ceci vous permet de vérifier avant de redéfinir
     vous-même CMD qu’aucun paquetage ne l’a pas déjà fait.

‘\ClassError{NOM DE LA CLASSE}{TEXTE DE L'ERREUR}{TEXTE D'AIDE}’
‘\PackageError{NOM DU PAQUETAGE}{TEXTE DE L'ERREUR}{TEXTE D'AIDE}’
‘\ClassWarning{NOM DE LA CLASSE}{WARNING TEXT}’
‘\PackageWarning{NOM DU PAQUETAGE}{WARNING TEXT}’
‘\ClassWarningNoLine{NOM DE LA CLASSE}{WARNING TEXT}’
‘\PackageWarningNoLine{NOM DU PAQUETAGE}{WARNING TEXT}’
‘\ClassInfo{NOM DE LA CLASSE}{INFO TEXT}’
‘\PackageInfo{NOM DU PAQUETAGE}{INFO TEXT}’
‘\ClassInfoNoLine{NOM DE LA CLASSE}{INFO TEXT}’
‘\PackageInfoNoLine{NOM DU PAQUETAGE}{INFO TEXT}’
     Porduit un message d’erreur, ou des messages d’avertissement ou
     d’information.

     Pour ‘\ClassError’ et ‘\PackageError’ le message est TEXTE DE
     L’ERREUR, suivi de l’invite d’erreur ‘?’ de TeX.  Si l’utilisateur
     demande de l’aide en tapant ‘h’, il voit le TEXTE D’AIDE.

     The four warning commands are similar except that they write
     WARNING TEXT on the screen with no error prompt.  The four info
     commands write INFO TEXT only in the transcript file.  The ‘NoLine’
     versions do not show the number of the line generating the message,
     while the other versions do show that number.

     Pour formatter les messages, y compris le TEXTE D’AIDE : utilisez
     ‘\protect’ pour empêcher une commande de se sévelopper, obtenez un
     saut de ligne avec ‘\MessageBreak’, et obtenez une espace avec
     ‘\space’ lorsque l’utilisation d’un caractère espace ne le permet
     pas, comme après une commande.  Notez que LaTeX ajoute un point
     final à chaque message.

‘\CurrentOption’
     Se développe au contenu de l’option en cours de traitement.  Peut
     uniquement être utilisé au sein de l’argument CODE soit de
     ‘\DeclareOption’, soit de ‘\DeclareOption*’.

‘\DeclareOption{OPTION}{CODE}’
‘\DeclareOption*{OPTION}{CODE}’
     Rend un option OPTION disponible pour l’utilisateur, de sorte à ce
     qu’il puisse la passer à leur commande ‘\documentclass’.  Par
     exemple, la classe ‘notecms’ pourrait avoir une option ‘logo’ pour
     mettre le logo de leur organisation sur la première page avec
     ‘\documentclass[logo]{notcms}’.  Le fichier de classe doit contenir
     ‘\DeclareOption{logo}{CODE}’ (et plus loin, ‘\ProcessOptions’).

     Si vous invoquez une option qui n’a pas été déclarée, par défaut
     cela produit une avertissement semblable à ‘Unused global
     option(s): [badoption].’ Vous pouvez changer ce comportement avec
     la version étoilée ‘\DeclareOption*{CODE}’.  Par exemple, beaucoup
     de classeq étendent une classe existante en utilisant une commande
     du genre ‘\LoadClass{article}’, et pour passer les options
     suppémentaires à la classe sous-jascente utilisent un code tel que
     celui-ci :

          \DeclareOption*{%
          \PassOptionsToClass{\CurrentOption}{article}%
          }

     Un autre exemple est que la classes ‘notecms’ permette aux
     utilisateur de tenir des listes de destinataire des notes dans des
     fichier externes.  Par exemple l’utilisateur invoque
     ‘\documentclass[math]{notecms}’ et la classe lit le fichier
     ‘math.memo’.  Ce code gère le fichier s’il existe et sinon passe
     l’option à la classe ‘article’.

          \DeclareOption*{\InputIfFileExists{\CurrentOption.memo}{}{%
              \PassOptionsToClass{\CurrentOption}{article}}}

‘\DeclareRobustCommand{CMD}[NUM][DÉFAUT]{DÉFINITION}’
‘\DeclareRobustCommand*{CMD}[NUM][DÉFAUT]{DÉFINITION}’
     Similaire à ‘\newcommand’ et ‘\newcommand*’ (*note \newcommand &
     \renewcommand::) mais déclare une commande robuste, même si
     DÉFINITION comprend du code fragile.  (Pour une discussion sur les
     commandes robustes et fragiles *note \protect::).  Utilisez ces
     commande pour définir de nouvelles commandes robustes, ou redéfinir
     des commandes existantes en les rendant robustes.  Contrairement à
     ‘\newcommand’ elle ne produisent pas d’ereru si la macro CMD existe
     déjà ; au lieu de cela un message est écrit dans le fichier journal
     pour indiquer la redéfinition de la commande.

     Les commandes définies de cette manière sont légèrement moins
     efficace que celle définies avec ‘\newcommand’, c’est pourquoi, à
     moins que le contenu de la commande soit fragile et que la commande
     soit utilisée au sein d’un argument mouvant, utilisez
     ‘\newcommand’.

     Le paquetage ‘etoolbox’ offre les commandes ‘\newrobustcmd’,
     ‘\newrobustcmd*’, ‘\renewrobustcmd’, ‘\renewrobustcmd*’,
     ‘\providerobustcmd’, et ‘\providrobustcmd*’ qui sont similaire aux
     commandes standardes ‘\newcommand’, ‘\newcommand*’,
     ‘\renewcommand’, ‘\renewcommand*’, ‘\providecommand’, et
     ‘\providecommand*’, mais définissent une commande CMD robuste avec
     deux advanges par rapport à ‘\DeclareRobustCommand’ :
       1. Elle utilisent un mécanisme de protection de bas niveau
          d’e-TeX au lieu du mécanisme de plus au niveau de LaTeX
          utilisant ‘\protect’, ainsi elles ne subissent pas la légère
          perte de performance mentionnée plus haut, et
       2. Elles font la même distinction entre ‘\new...’, ‘\renew...’,
          et ‘\provide...’ que les commandes standardes, ainsi elle ne
          font pas qu’envoyer un message dans le journal lorsque vous
          redéfinissez CMD déjà existantes, dans ce cas vous devez
          utiliser soit ‘\renew...’ soit ‘\provide...’ ou il y a une
          erreur.

‘\IfFileExists{NOM FICHIER}{SI VRAI}{SI FAUX}’
‘\InputIfFileExists{NOM FICHIER}{SI VRAI}{SI FAUX}’
     Exécute SI VRAI sf LaTeX peut trouver le fichier ‘NOM FICHIER’ et
     SI FAUX sinon.  Dans le second cas, le fichier est lu immédiatement
     aprus exécuter SI VRAI.  Ainsi
     ‘\IfFileExists{img.pdf}{\includegraphics{img.pdf}}{\typeout{AVERSTISSEMENT
     : img.pdf introuvable}}’ n’inclut le graphique ‘img.pdf’ que s’il
     est trouvé, mais autrement produit seulement un avertissement.

     Cette commande cherche le fichier dans tous les chemin de recherche
     que that LaTeX utilise, et non pas seulement dans le répertoire
     courant.  Pour chercher uniquement dans le répertoire courant
     faites quelque-chose du genre de ‘\IfFileExists{./NOM FICHIER}{SI
     VRAI}{SI FAUX}’.  Si vous demandez un fichier dont le nom n’a pas
     d’extension ‘.tex’ alors LaTeX commencera par chercher le fichier
     en apposant ‘.tex’ à son nom ; pour plus ample information sur la
     façon dont LaTeX gère les extensions de nom de fichier voir *note
     \input::.

‘\LoadClass[LISTE D'OPTIONS]{NOM DE LA CLASSE}[DATE DE PARUTION]’
‘\LoadClassWithOptions{NOM DE LA CLASSE}[DATE DE PARUTION]’
     Charge une classe, comme avec ‘\documentclass[OPTIONS LIST]{NOM DE
     LA CLASSE}[RELEASE INFO]’.  Voici un exemple :
     ‘\LoadClass[twoside]{article}’.

     La LISTE D’OPTIONS, si présente, est une liste ponctuée par des
     virgules.  La DATE DE PARUTION est optionnel.  Si elle est
     présente, elle doit avoir le format AAA/MM/JJ.  Si vous demandez
     une DATE DE PARUTION et que la date du paquetage installée sur
     votre sysème est antérieure, alors vous obtiendrez un avertissement
     à l’écrant et dans le journal de compilation du genre de ‘You have
     requested, on input line 4, version `2038/01/19' of document class
     article, but only version `2014/09/29 v1.4h Standard LaTeX document
     class' is available.’

     La variante de la commande ‘\LoadClassWithOptions’ utilise la liste
     des options de la classe courante.  Cela veut dire qu’elle ignore
     toute options passée via ‘\PassOptionsToClass’.  Ceci est une
     commande de commodité qui vous permet de construire une nouvelle
     classe en l’héritant d’une classe existante, telle que la classe
     standarde ‘article’, sans avoir à gérer les options qui furent
     passée.

‘\ExecuteOptions{LISTE D'OPTIONS}’
     Pour chaque option OPTION de la LISTE D’OPTIONS, dans l’ordre
     d’apparition, cette commande exécute la commande ‘\ds@OPTION’.  Si
     cette commande n’est pas définie, alors l’option OPTION est
     ignorée.

     Ceci peut être utilisé pour fournir d’un liste d’option par défaut
     avant le ‘\ProcessOptions’.  Par exemple, si dans un fichier de
     classe vous désirez utiliser par défaut la taille de police 11pt
     alors vous devriez spécifier
     ‘\ExecuteOptions{11pt}\ProcessOptions\relax’.

‘\NeedsTeXFormat{FORMAT}[DATE DU FORMAT]’
     Spécifie le format sous lequelle cette classe doit être utilisée.
     Cette directive est souvent donnée à la première ligne du fichier
     de classe, et le plus souvent elle est utilisée de cette façon :
     ‘\NeedsTeXFormat{LaTeX2e}’.  Lorsque un document utilisant cette
     classe est traité, le nom du format donné ici doit s’accorder avec
     le format qui est en cours d’exécution (y compris le fait que la
     chaîne FORMAT est sensible à la casse).  Si il ne s’y accorde pas
     alors l’exécution est interrompue par une erreur du genre de ‘This
     file needs format `LaTeX2e' but this is `xxx'.’

     Pour spécifier une version du format dont vous savez qu’elle prend
     en charge certaines fonctions, incluez l’argument optionnel DATE DU
     FORMAT correspondant au format où ces fonction furent implémentés.
     Si cette argument est présent il doit être de la forme
     ‘AAAA/MM/JJ’.  Si la version de format installée sur votre système
     est antérieur à la DATE DU FORMAT alors vous obtiendrez un
     avertissement du genre de ‘You have requested release `2038/01/20'
     of LaTeX, but only release `2016/02/01' is available.’

‘\OptionNotUsed’
     Ajoute l’option courante à la liste des options non utilisées.  Ne
     peut être utilisé qu’au sein de l’argument CODE de ‘\DeclareOption’
     ou ‘\DeclareOption*’.

‘\PassOptionsToClass{LISTE D'OPTIONS}{NOM DE LA CLASSE}’
‘\PassOptionsToPackage{LISTE D'OPTIONS}{NOM DU PAQUETAGE}’
     Ajoute les options de la liste ponctuée par des virgules OPTION
     LIST aux options utilisée par toute commande ultérieure
     ‘\RequirePackage’ ou ‘\usepackage’ pour le paquetage NOM DU
     PAQUETAGE ou la classe NOM DE LA CLASSE.

     La raison d’être de ces commande est que vous pouvez charger un
     paquetage autant de fois que vous le voulez sans options, mais que
     si voulez passer des options alors vous ne pouvez les fournir qu’au
     premier chargement.  Charger un paquetage avec des options plus
     d’une fois produit une erreur du genre de ‘Option clash for package
     toto.’ (LaTeX lance l’erreur même s’il n’y a pas de conflit entre
     les options.)

     Si votre propre code introduit un paquetage deux fois alors vous
     pouvez réduire cela en une fois, par exemple en remplaçant les deux
     ‘\RequirePackage[landscape]{geometry}\RequirePackage[margins=1in]{geometry}’
     par un seul ‘\RequirePackage[landscape,margins=1in]{geometry}’.
     Mais si vous chargez un paquetage qui à son tour en charge un autre
     alors vous devez mettre en queue les options que vous désirez pour
     cet autre paquetage.  Par exemple, supposons que le paquetage
     ‘toto’ charge le paquetage ‘geometry’.  Au lieu de
     ‘\RequirePackage{toto}\RequirePackage[draft]{graphics}’ vous devez
     écrire ‘\PassOptionsToPackage{draft}{graphics}
     \RequirePackage{toto}’.  (Si ‘toto.sty’ charge une option en
     conflit avec ce que vous désirez alors vous devrez considérer une
     modification de son code source.)

     Ces commandes sont également utiles aux utilisateurs de base et pas
     seulement aux auteurs de classes et paquetage.  Par exemple,
     supposons qu’un utilisateur veuille cherge le paquetage ‘graphicx’
     avec l’option ‘draft’ et veuille également utiliser une classe
     ‘toto’ qui charge le paquetage ‘graphicx’, mais sans cette option.
     L’utilisateur peut commencer son fichier LaTeX avec
     ‘\PassOptionsToPackage{draft}{graphicx}\documentclass{toto}’.

‘\ProcessOptions’
‘\ProcessOptions*\@OPTIONS’
     Exécute le code pour chaque option que l’utilisateur a invoquée.  À
     inclure dans le fichier classe sous la forme
     ‘\ProcessOptions\relax’ (à cause de l’existence de la variante
     étoilée de la commande).

     Les options tombent dans deux catégories.  Les “options locales”
     sont spécifiées pour un paquetage particulier au sein de l’argument
     OPTIONS dans ‘\PassOptionsToPackage{OPTIONS}’,
     ‘\usepackage[OPTIONS]’, ou ‘\RequirePackage[OPTIONS]’.  Les
     “options globales” sont celles données par l’utilisateur de la
     classe dans ‘\documentclass[OPTIONS]’.  (Si une option est
     spécifiée à la fois localement et globalement, alors elle est
     locale).

     Lorsque ‘\ProcessOptions’ est appelé pour un paquetage ‘pkg.sty’,
     il se produit ce qui suit :
       1. Pour chaque option OPTION déclarée jusqu’à ce point avec
          ‘\DeclareOption’, LaTeX examine si cette option est soit
          globale soit locale pour ‘pkg’.  Si c’est le cas, il exécute
          le code déclaré.  Ceci est fait dans l’ordre de passage de ces
          options à ‘pkg.sty’.
       2. Pour chaque option locale restante, il exécute la commande
          ‘\ds@OPTION’ si elle a été défini quelque-part (autrement que
          par un ‘\DeclareOption’) ; sinon, il exécute le code de
          traitement par défaut des options donné dans
          ‘\DeclareOption*’.  Si aucun code de traitement par défaut n’a
          été déclaré, il produit un message d’erreur.  Ceci est fait
          dans l’ordre dans lequel ces options ont été spécifiées.

     Lorsque ‘\ProcessOptions’ est appelé pour une classe il fonctionne
     de la même manière à ceci près que toutes les options sont locales,
     et que le code par défaut pour ‘\DeclareOption*’ et
     ‘\OptionNotUsed’ plutôt qu’une erreur.

     La version étoilée ‘\ProcessOptions*’ exécute le traitement des
     options dans l’ordre spécifié par les commandes appelante, plutôt
     que dans l’ordre de déclaration de la classe ou du paquetage.  Pour
     un paquetage, ceci signifie que les options globales sont traitées
     en premier.

‘\ProvidesClass{NOM DE LA CLASSE}[DATE DE PARUTION BRÈVE INFORMATION SUPPLÉMENTAIRE]’
‘\ProvidesClass{NOM DE LA CLASSE}[DATE DE PARUTION]’
‘\ProvidesPackage{NOM DU PAQUETAGE}[DATE DE PARUTION BRÈVE INFORMATION SUPPLÉMENTAIRE]’
‘\ProvidesPackage{NOM DU PAQUETAGE}[DATE DE PARUTION]’
     Indentifie la classe ou le paquetage, en tapant un message sur la
     console et dans le fichier journal.

     Lorsqu’un utilisateur écrit ‘\documentclass{notecms}’ alors LaTeX
     charge le fichier ‘notecms.cls’.  De même, un utilisateur écrivant
     ‘\usepackage{essai}’ invite LaTeX à charger le fichier ‘essai.sty’.
     Si le nom du fichier ne s’accorde pas à l’argument NOM DE LA CLASSE
     ou NOM DU PAQUETAGE alors un avertissement est produit.  Ainsi, si
     vous invoquez ‘\documentclass{notecms}’, et que le fichier the file
     ‘notecms.cls’ comprend la déclaration statement
     ‘\ProvidesClass{xxx}’ alors vous obtiendrez un avertissement du
     genre de like ‘You have requested document class `notecms', but the
     document class provides 'xxx'.’ Cet avertissement n’empèche pas
     LaTeX de traiter le reste du fichier de la classe normalement.

     Si vous incluez l’argument optionnel, alors vous devez inclure la
     date, avant le premier espace s’il y en a, et elle doit avoir le
     format ‘AAAA/MM/JJ’.  Le reste de l’argument est en format libre,
     toutefois il identifie traditionnellement la classe, et est écrit
     pendant la compilation à l’écran et dans le journal.  Ainsi, si
     votre fichier ‘notecms.cls’ contient la ligne
     ‘\ProvidesClass{smcmem}[2008/06/01 v1.0 Classe note CMS]’ la
     première ligne de votre docment est ‘\documentclass{notecms}’ alors
     vous pourrez voir ‘Document Class: notecms 2008/06/01 v1.0 Classe
     note CMS’.

     La date dans l’argument optionnel permet aux utilisateurs de classe
     et de paquetage de demander à être avertis si la version de la
     classe ou du paquetage installé sur leur système est antérieur à
     DATE DE PARUTION, en utilisant les arguments optionnels comme dans
     ‘\documentclass{smcmem}[2018/10/12]’ ou
     ‘\usepackage{toto}[[2017/07/07]]’.  (Notez que les utilisateurs de
     paquetages incluent seulement rarement une date, et les
     utilisateurs de classe presque jamais).

‘\ProvidesFile{NOM FICHIER}[INFORMATION SUPPLÉMENTAIRE]’
     Déclare un fihcier autre que les fichiers principaux de classe ou
     de paquetage, tel qu’un fichier de configuration ou un fichier de
     définition de police.  Mettez la commande dans ce fichier et vous
     obtiendrez dans le journal une information du genre de ‘File:
     essai.config 2017/10/12 fichier de configuration pour essai.cls’
     lorsque NOM FICHIER vaut ‘essai.config’ et que INFORMATION
     SUPPLÉMENTAIRE vaut ‘2017/10/12 fichier de configuration pour
     essai.cls’.

‘\RequirePackage[LISTE D'OPTIONS]{NOM DU PAQUETAGE}[DATE DE PARUTION]’
‘\RequirePackageWithOptions{NOM DU PAQUETAGE}[DATE DE PARUTION]’
     Charge un paquetage, comme la commande ‘\usepackage’ pour les
     auteurs de documents.  *Note Additional packages::.  Voici un
     exemple : ‘\RequirePackage[landscape,margin=1in]{geometry}’.  Notez
     que l’équipe de développement de LaTeX recommande fortement
     l’utilisation de ces commandes de préférence à l’‘\input’ de TeX de
     base ; voir le « Class Guide ».

     La LISTE D’OPTIONS, si présente, est une liste ponctuée de
     virgules.  La DATE DE PARUTION, si présente, doit avoir le format
     AAAA/MM/JJ.  Si la date de parution du paquetzge tel qu’il est
     installé sur votre systèlme est antérieur à DATE DE PARUTION alors
     vous obtiendrez un avertissement du genre de ‘You have requested,
     on input line 9, version `2017/07/03' of package jhtest, but only
     version `2000/01/01' is available’.

     La variante ‘\RequirePackageWithOptions’ utilise la liste d’options
     de la classe courtante.  Ceci implique qu’elle ignore toute option
     passée à la classe via ‘\PassOptionsToClass’.  C’est une commande
     de commodité pour permettre facilement de construire des classes
     sur des classes existantes sans avoir à gérer les options qui sont
     passées.

     La différence entre ‘\usepackage’ et ‘\RequirePackage’ est mince.
     La commande ‘\usepackage’ est à l’intention du fichier document
     alors que ‘\RequirePackage’ l’est à celle des fichiers paquetage ou
     classe.  Ansi, utiliser ‘\usepackage’ avant la commande
     ‘\documentclass’ amène LaTeX à produire une erreur du genre de
     ‘\usepackage before \documentclass’, là où vous pouvez utiliser
     ‘\RequirePackage’.

4 Polices de caractères
***********************

Deux aspects importants de la sélection d’une “police” sont la
spécification d’une taille et celle d’un style.  Les commandes LaTeX
pour ce faire sont décrites ci-après.

4.1 styles des polices
======================

Les commandes de styles suivantes sont prises en charge par LaTeX.

   Dans le tableau ci-dessous listant des commandes, les commandes en
‘\text…’ sont utilisées avec un argument, comme dans ‘\textit{texte}’.
C’est la forme préférée.  Mais affichée à sa suite, entre parenthèses,
est la “forme déclarative” correspondante, qui est souvant utile.  Cette
forme ne prend pas arguments comme dans ‘{\itshape TEXTE}’.  La portée
la forme déclarative s’étend jusqu’à la prochaine commande de type style
ou jusqu’à la fin du groupe actuel.  De plus, chacun a une forme par
environnement comme ‘\begin{itshape}…\end{itshape}’, que l’ont décrit
plus amplement à la fin de cette rubrique.

   Ces commandes, dans n’importe laquelle des trois formes, sont
cumulatives ; par exemple, vous pouvez dire aussi bien
‘\sffamily\bfseries’ que ‘\bfseries\sffamily’ pour obtenir du gras sans
serif.

   Vous pouvez également utiliser une forme de déclaration par
environnement ; par exemple, ‘\begin{ttfamily} ... \end{ttfamily}’.

   Ces commandes fournissent automatiquement une correction d’italique
si nécessaire.

‘\textrm (\rmfamily)’
     Romain.

‘\textit (\itshape)’
     Italique.

‘\emph’
     Accent (commute entre ‘\textit’ et ‘\textrm’ selon le contexte).

‘\textmd (\mdseries)’
     Poids moyen (par défaut).

‘\textbf (\bfseries)’
     Gras.

‘\textup (\upshape)’
     Droit (par défaut).  Le contraire d’incliné.

‘\textsl (\slshape)’
     Inclinée.

‘\textsf (\sffamily)’
     Sans serif.

‘\textsc (\scshape)’
     Petites capitales.

‘\texttt (\ttfamily)’
     Tapuscrit, encore appelé « machine à écrire ».

‘\textnormal (\normalfont)’
     Police principale du document.

‘\mathrm’
     Roman, pour une utilisation en mode mathématique.

‘\mathbf’
     Gras, pour une utilisation en mode mathématique.

‘\mathsf’
     Sans serif, pour une utilisation en mode mathématique.

‘\mathtt’
     Tapuscrit, pour une utilisation en mode mathématique.

‘\mathit’
‘(\mit)’
     Italique, pour une utilisation en mode mathématique.

‘\mathnormal’
     Pour une utilisation en mode mathématique, par exemple dans un
     autre déclaration de type style.

‘\mathcal’
     Lettres « calligraphiques », pour une utilisation en mode
     mathématique.

   En outre, la commande ‘\mathversion{bold}’ peut être utilisée pour
commuter en caractères gras les lettres et les symboles dans les
formules.  ‘\mathversion{normal}’ restaure la valeur par défaut.

   Enfin, la commande ‘\oldstylenums{CHIFFRES}’ sert à composer des
chiffres dits de “à l’ancienne”, qui ont des hauteurs et profondeurs (et
parfois largeurs) distincts de l’alignement standard des chiffres qui
ont tous la même hauteur que les lettres capitales.  Les polices LaTeX
par défaut prennent en charge cela, et respecteront ‘\textbf’ (mais pas
les autres styles, il n’y a pas de style à l’ancienne italique pour les
chiffres en Computer Modern).  Beaucoup d’autres polices ont des chiffre
à l’ancienne aussi ; parfois le paquetage ‘textcomp’ doit être chargé,
et parfois des options de paquet sont mises à disposition pour en faire
le style par défaut.  Entrée de FAQ : <https://www.texfaq.org/FAQ-osf>.

   LaTeX fournit également les commandes suivantes, qui font passer
inconditionnellement à un style donné, c.-à-d. _ne_ sont _pas_
cumulatives.  De plus, elles sont utilisées différemment des commandes
ci-dessus : ‘{\CMD ... }’ au lieu de ‘\CMD{...}’.  Ce sont deux
constructions sans relation l’une avec l’autre.

‘\bf’
     Passage en gras.

‘\cal’
     Passage en lettres calligraphiques pour les mathématiques.

‘\em’
     Accent (italique dans romain, romain dans italiques).

‘\il’
     Italique.

‘\rm’
     Romain.

‘\sc’
     Les petites capitales.

‘\sf’
     Sans serif.

‘\sl’
     Incliné (oblique).

‘\tt’
     Tapuscrit, encore appelé « Machine à écrire » (largeur fixe).

   Certaines personnes considèrent que les commandes commutation
inconditionnelles de polices, comme ‘\tt’, sont obsolètes et que
_seulement_ les commandes cumulatives (‘\texttt’) doivent être
utilisées.  Je (Karl) ne suis pas d’accord.  il y a situations tout à
fait raisonnables quand un commutateur inconditionnel de police est
précisément ce dont vous avez besoin pour obtenir le résultat souhaité ;
pour un exemple, *note ‘description’: description.  Les deux ensembles
de commandes ont leur place.

4.2 tailles des polices
=======================

Les commandes de type de taille standardes suivantes sont pris en charge
par LaTeX.  Le tableau indique le nom de la commande et taille utilisée
(en points) correspondant réellement pour la police avec les options
‘10pt’, ‘11pt’, et ‘12pt’ de classe de document, respectivement (*note
Document class options::).

commande                     ‘10pt’  ‘11pt’  ‘12pt’
-----------------------------------------------------
‘\tiny’                      5       6       6
‘\scriptsize’                7       8       8
‘\footnotesize’              8       9       10
‘\small’                     9       10      10,95
‘\normalsize’ (par défaut)   10      10.95   12
‘\large’                     12      12      14,4
‘\Large’                     14.4    14.4    17,28
‘\LARGE’                     17.28   17.28   20,74
‘\huge’                      20,74   20,74   24,88
‘\Huge’                      24.88   24.88   24.88

   Les commandes énumérées ici sont des formes déclaratives (non des
formes par environnement), vu que c’est ainsi qu’on les utilise
typiquement.  Comme dans l’exemple qui suit :

     \begin{quotation} \small
       Le Tao que l'on peut nommer n'est pas le Tao.
     \end{quotation}

Dans ce qui précède, la portée de ‘\small’ s’étend jusqu’à la fin de
l’environnement ‘quotation’.  Elle s’arrêterait également à la prochaine
commande de style ou à la fin du groupe courant, de sorte qu’on aurait
pu la mettre entre accolades ‘{\small Ce texte est en petits
caractères.}’.

   Une “forme par environnement” de chacune de ces commandes est
également définie ; par exemple, ‘\begin{tiny}...\end{tiny}’.
Toutefois, en pratique cette forme peut aisément mener à des espaces
indésirables au début et/ou à la fin de d’environnement si on n’y prête
pas attention, ainsi on risque en général moins de faire d’erreur si on
s’en tient à la forme déclarative.

   (Digression : techniquement, vu la façon dont LaTeX définit ‘\begin’
et ‘\end’, presque toutes les commandes qui ne prennent pas d’argument
on une forme par environnement.  Mais dans presque tous les cas ce
serait juste une source de confusion de l’utiliser.  La raison pour
mentionner spécifiquement la forme par environnement des déclarations de
taille de police est que cet usage particulier n’est pas rare).

4.3 commandes de fontes de bas niveau
=====================================

Ces commandes sont principalement destinés aux auteurs de macros et
paquetages.  Les commandes indiquées ici sont seulement un sous-ensemble
de celles disponibles.

‘\fontencoding{codage}’
     Sélectionne le codage de police, le codage de la police utilisée en
     sortie.  Il y a un grand nombre de codages valides.  Les plus
     usuels sont ‘OT1’, le codage original de D. Knuth pour la police
     Computer Modern (la police par défaut), et ‘T1’, également désigné
     par codage Cork, qui prend en charage les caractères accentués
     utilisés par les langues européennes les plus parlées (allemand,
     français, italien, polonais et d’autres encore), ce qui permet à
     TeX de faire la césure des mots contenant des lettres accentuées.
     Pour plus d’information, voir <https://ctan.org/pkg/encguide>.

‘\fontfamily{FAMILLE}’
     Sélectionne la famille de polices.  La page web
     <https://www.tug.dk/FontCatalogue/> donne un moyen de naviguer
     facilement à travers un grand nombre des polices utilisées avec
     LaTeX.  Voici des exemples de quelques-unes des familles les plus
     usuelles :

     ‘pag’  Avant Garde
     ‘fvs’  Bitstream Vera Sans
     ‘pbk’  Bookman
     ‘bch’  Charter
     ‘ccr’  Computer Concrete
     ‘cmr’  Computer Modern
     ‘cmss’ Computer Modern Sans Serif
     ‘cmtt’ Computer Modern Typewriter
     ‘pcr’  Courier
     ‘phv’  Helvetica
     ‘fi4’  Inconsolata
     ‘lmr’  Latin Modern
     ‘lmss’ Latin Modern Sans
     ‘lmtt’ Latin Modern Typewriter
     ‘pnc’  New Century Schoolbook
     ‘ppl’  Palatino
     ‘ptm’  Times
     ‘uncl’ Uncial
     ‘put’  Utopia
     ‘pzc’  Zapf Chancery

‘\fontseries{SÉRIE}’
     Sélectionne une série de police.  Une “série” combine une “graisse”
     et une “largeur”.  Typiquement, une police prend en charge
     seulement quelques-unes des combinaisons possibles.  Les
     combinaisons de valeurs de séries comprennent notamment :

     ‘m’  Moyen (normal)
     ‘b’  Gras
     ‘c’  Condensé
     ‘bc’ Condensé Gras
     ‘bx’ Gras étendu

     Les valeurs possibles de graisses, considérées individuellement,
     sont :

     ‘ul’ Ultra maigre
     ‘el’ Extra maigre
     ‘l’  Maigre (Light)
     ‘sl’ Semi maigre
     ‘m’  Demi-gras (Medium, normal)
     ‘sb’ Semi gras
     ‘b’  Gras (Bold)
     ‘eb’ Extra gras
     ‘ub’ Ultra gras

     La valeurs possibles de largeur, considérées individuellement
     sont :

     ‘uc’ Ultra condensé
     ‘ec’ Extra condensé
     ‘c’  Condensé
     ‘sc’ Semi condensé
     ‘m’  Moyen
     ‘sx’ Semi étendu
     ‘x’  étendu
     ‘ex’ Extra étendu
     ‘ux’ Ultra étendu

     Quand Lorsqu’on forme la chaîne de caractères SÉRIE à partir de la
     graisse et de la largeur, on laisse tomber le ‘m’ qui signifie
     medium concernant la graisse ou la largeur, auquel cas on en
     utilise juste un (‘‘m’’).

‘\fontshape{ALLURE}’
     Sélectionne l’allure de police.  Les allures valides sont :

     ‘n’  Droit (normal)
     ‘it’ Italique
     ‘sl’ Incliné (oblique)
     ‘sc’ Petites capitales
     ‘ui’ Italique droit
     ‘ol’ Plan

     Les deux dernières allures ne sont pas disponibles pour la plupart
     des familles de polices, et les petites capitales sont aussi
     souvent absentes.

‘\fontsize{TAILLE}{INTERLIGNE}’
     Réglage de la taille de police et de l’espacement d’interligne.
     L’unité des deux paramètres est par défaut le point (‘pt’).
     L’espaceement d’interligne est l’espace vertiical nominal entre
     ligne, de ligne de base à ligne de base.  Il est stocké dans le
     paramètre ‘\baselineskip’.  La valeur par défaut de ‘\baselineskip’
     pour la police Computer Modern est 1,2 fois le ‘\fontsize’.
     Changer directement ‘\baselineskip’ est déconseillé dans la mesuure
     où sa valeur est réinitialisée à chaque fois qu’un changement de
     taille se produit ; voir ensuite ‘\baselinestretch’.

‘\baselinestretch’
     L’espacement des lignes est également multiplié par la valeur du
     paramètre ‘\baselinestretch’ ; la valeur par défaut est 1.  Tout
     changement prend effet losque ‘\selectfont’ (voir plus bas) est
     appelé.  Vous pouvez modifier l’interligne pour tout le document en
     faisant, par ex. pour le doubler,
     ‘\renewcommand{\baselinestretch}{2.0}’ dans le préambule,

     Cependant, la meilleure façon de mettre un document en « espacement
     double » est d’utiliser le paquetage ‘setspace’.  En plus de
     proposer une pluralité d’options d’espacement, ce paquetage
     conserve un interligne simple là où c’est typiquement désirable,
     comme dans les notes de bas de page et dans les légendes de figure.
     Voir la documentation du paquetage.

‘\linespread{FACTEUR}’
     Est équivalent à ‘\renewcommand{\baselinestretch}{FACTEUR}’, et
     doit donc être suivie par ‘\selectfont’ pour avoir un effet.  Il
     vaut mieux que ce soit dans le préambule, ou utiliser le paquetage
     ‘setspace’, comme on vient de le décrire.

‘\selectfont’
     Les modifications apportées en appelant les commandes de polices
     décrites ci-dessus n’entrent en vigueur qu’après que ‘\selectfont’
     est appelé, comme dans ‘\fontfamily{NOMFAMILLE}\selectfont’.  La
     plupart du temps il est plus pratique de mettre cela dans une
     macro :
     ‘\newcommand*{\mapolice}{\fontfamily{NOMFAMILLE}\selectfont}’
     (*note \newcommand & \renewcommand::).

‘\usefont{CODAGE}{FAMILLE}{SÉRIE}{ALLURE}’
     Revient à la même chose que d’invoquer ‘\fontencoding’,
     ‘\fontfamily’, ‘\fontseries’ et ‘\fontshape’ avec les paramètres
     donnés, suivi par ‘\selectfont’.  Par exemple :

          \usefont{ot1}{cmr}{m}{n}

5 Mise en page
**************

Commandes pour contrôler la disposition générale de la page.

5.1 ‘\onecolumn’
================

La déclaration ‘\onecolumn’ commence une nouvelle page et produit une
sortie à colonne unique.  C’est la valeur par défaut.

5.2 ‘\twocolumn’
================

Synopsis :

     \twocolumn [TEXTE1COL PRÉLIMINAIRE]

   Commence une nouvelle page et produit une sortie en deux colonnes.
Si on a passé l’option de classe ‘twocolumn’ au document alors c’est le
comportement par défaut (*note Document class options::).  Cette
commande est fragile (*note \protect::).

   Si l’argument optionnel TEXTE1COL PRÉLIMINAIRE est présent, il est
composé dans le mode à une colonne avant que la composition à deux
colonnes ne commence.

   Les paramètres ci-après contrôlent la composition de la sortie en
deux colonnes :

‘\columnsep’
     La distance entre les colonnes.  Vaut 35pt par défaut.  Changer la
     valeur avec une commande telle que ‘\setlength{\columnsep}{40pt}’.
     Vous devez faire le changement avant que le mode en deux colonnes
     ne commence ; le préambule est une bonne place pour le faire.

‘\columnseprule’
     La largeur du filet entre les colonnes.  La valeur par défaut est
     0pt, de sorte qu’il n’y a pas de filet.  Autrement, le filet
     apparaît à mi-chemin entre les deux colonnes.  Changez la valeur
     avec une commande telle que ‘\setlength{\columnseprule}{0.4pt}’,
     avant que le mode en deux colonnes ne commence.

‘\columnwidth’
     La largeur d’une colonnne.  En mode à une colonne ceci vaut
     ‘\textwidth’.  En mode à deux colonnes par défaut LaTeX règle la
     largeur de chacune des deux colonnes, ‘\columnwidth’, à la moitié
     de ‘\textwidth’ moins ‘\columnsep’.

   Dans un document en deux colonnes, les environnements étoilés
‘table*’ et ‘figure*’ s’étendent en largeur sur deux colonnes, alors que
les environnements non étoilés ‘table’ et ‘figure’ n’occupe qu’une
colonne (*note figure:: et *note table::).  LaTeX place les flottants
étoilés au somme d’une page.  Les paramètres ci-après contrôlent le
comportement des flottants en cas de sortie à deux colonnes :

‘\dbltopfraction’
     Fraction maximale au sommet d’une page sur deux colonnes qui peut
     être occupée par des flottants s’étendant sur deux colonnes en
     largeur.  Par défaut vaut 0,7, ce qui signifie que la hauteur d’un
     environnement ‘table*’ ou ‘figure*’ ne doit pas excéder
     ‘0.7\textheight’.  Si la hauteur de vos environnement flottant
     excède cela alors vous pouvez prendre l’une des actions suivante
     pour l’empêcher de flotter jusqu’à la fin du document :

        – Utiliser le spécificateur de localisation ‘[tp]’ pour dire à
          LaTeX d’essayer de placer le flottant volumineux sur une page
          dédiée, ou de même au sommet d’une page.

        – Utiliser le spécificateur de localisation ‘[t!]’ pour
          l’emporter sur l’effet de ‘\dbltopfraction’ pour ce flottant
          en particulier.

        – Augmenter la valeur de ‘\dbltopfraction’ à un nombre de
          grandeur adéquate, pour éviter de faire flotter les pages si
          tôt.

     Vous pouvez le redéfinir, comme dans
     ‘\renewcommand{\dbltopfraction}{0.9}’.

‘\dblfloatpagefraction’
     Pour une page de flottants s’étendant sur deux colonnes en largeur,
     c’est la fraction minimum de la page qui doit être occupée par les
     flottants.  La valeur par défaut de LaTeX est ‘0.5’.  Se change
     avec ‘\renewcommand’.

‘\dblfloatsep’
     Sur une page de flottants s’étendant sur deux colonnes en largeur,
     cette longueur est la distance entre les flottants à la fois en
     haut et en bas de la page.  Par défaut vaut ‘12pt plus2pt minus2pt’
     pour des documents en ‘10pt’ ou ‘11pt’, et ‘14pt plus2pt minus4pt’
     pour ‘12pt’.

‘\dbltextfloatsep’
     Cette longueur est la distance entre un flottant multi-colonnes en
     haut ou en bas d’une page et le texte principal.  Par défaut vaut
     ‘20pt plus2pt minus4pt’.

‘\dbltopnumber’
     Sur une page de flottant avec des flottants large de deux colonnes,
     ce compteur donne le nombre maximal de flottants autorisé au sommet
     de la page.  La valeur par défaut de LaTeX est ‘2’.

   L’exemple suivant utilise l’argument optionnel de ‘\twocolumn’ pour
crée un titre s’étendant sur les deux colonnes du document article :

     \documentclass[twocolumn]{article}
     \newcommand{\authormark}[1]{\textsuperscript{#1}}
     \begin{document}
     \twocolumn[{% au sein de cet argument optionnel, du texte en une colonne
       \centering
       \LARGE Le titre \\[1.5em]
       \large Auteur Un\authormark{1},
              Auteur Deux\authormark{2},
              Auteur Trois\authormark{1} \\[1em]
       \normalsize
       \begin{tabular}{p{.2\textwidth}@{\hspace{2em}}p{.2\textwidth}}
         \authormark{1}Departement Un  &\authormark{2}Department Deux \\
          École Un                   &École Deux
       \end{tabular}\\[3em] % espace sous la partie titre
       }]

     Le texte en deux colonnes est ici.

5.3 ‘\flushbottom’
==================

La déclaration ‘\flushbottom’ rend toutes les pages de texte de la même
hauteur, en ajoutant de k’espace vertical supplémentaire si nécessaire
pour remplir le page.

   C’est la valeur par défaut si le mode ‘twocolumn’ est sélectionné
(*note Document class options::).  Cette command est fragile (*note
\protect::).

5.4 ‘\raggedbottom’
===================

La déclaration ‘\raggedbottom’ rend toutes les pages de la hauteur
naturelle de la matière sur cette page.  Aucune des longueurs
d’élastique ne seront étirée.

5.5 Paramètres de mise en page
==============================

‘\columnsep’
‘\columnseprule’
‘\columnwidth’
     La distance entre les deux colonnes, la largeur d’un filet entre
     les colonnes, et la largeur des colonnes, lorsque l’option de
     classe de document ‘twocolumn’ est en vigueur (*note Document class
     options::).  *Note \twocolumn::.

‘\headheight’
     Hauteur de la boîte qui contient l’en-tête de page en cours.  La
     valeur par défaut pour les classes ‘article’, ‘report’, et ‘book’
     est ‘12pt’ quelle que soit la taille de la police.

‘\headsep’
     La distance verticale entre le bas de la ligne d’en-tête et le haut
     du texte principal.  La valeur par défaut est ‘25pt’.  Dans la
     classe ‘book’ la valeur par défaut est ‘0.25in’ pour un document
     réglé en 10pt, et ‘0.275in’ pour un document en 11pt ou 12pt.

‘\footskip’
     Distance de la ligne de base de la dernière ligne de texte à la
     ligne de base du pied de page.  La valeur par défaut dans les
     classe ‘article’ et ‘report’ est ‘30pt’.  Dans la classe ‘book’ la
     valeur par défaut est ‘0.35in’ pour les documents réglés en 10pt,
     ‘0.38in’ en 11pt, et ‘30pt’ en 12pt.

‘\linewidth’
     Largeur de la ligne actuelle, diminuée pour chaque ‘list’ imbriquée
     (*note list::).  C-à-d. que la valeur nominale ‘\linewidth’ vaut
     ‘\textwidth’ mais que pour chaque liste imbriquée la largeur
     ‘\linewidth’ est diminuée de la somme de ‘\leftmargin’ et
     ‘\rightmargin’ pour cette liste (*note itemize::).

‘\marginparpush’
‘\marginsep’
‘\marginparwidth’
     L’espace vertical miniminal entre deux notes marginales, l’espace
     horizontal entre le corps du texte et les notes marginales, et la
     largeur horizontale des notes.

     Normalement les notes en marginales apparaissent à l’extérieur de
     la page, mais la déclaration ‘\reversemarginpar’ change cela (et
     ‘\normalmarginpar’ le rétablit).

     La valeur par défaut pour ‘\marginparpush’ à la fois dans un
     document de classe ‘book’ ou ‘article’ est : ‘7pt’ si le document
     est réglé à 12pt, et ‘5pt’ s’il l’est à 11pt ou 10pt.

     Pour ‘\marginsep’, dans la classe ‘article’ la valeur par défaut
     est ‘10pt’ sauf si le document est réglé à 10pt et en mode en deux
     colonne où la valeur par défaut est ‘11pt’.

     Pour ‘\marginsep’ dans la classe ‘book’ la valeur par défaut est
     ‘10pt’ en mode deux colonnes, et ‘7pt’ en mode mono-colonne.

     Pour ‘\marginparwidth’ aussi bien dans les classes ‘book’ que
     ‘article’, en mode à deux colonnes la valeur par défaut est 60% ou
     ‘\paperwidth − \textwidth’, alors qu’en mode monocolonne c’est 50%
     de cette distance.

‘\oddsidemargin’
‘\evensidemargin’
     La “marge gauche” est la bande entre le bord gauche de la page et
     le corps du texte.

     La “marge gauche nominale” est la marge gauche lorsque les
     paramètres ‘\oddsidemargin’ et ‘\eventsidemargin’ sont à ‘0pt’.  Sa
     frontière est une ligne verticale imaginaire située à une distance
     de ‘1in + \hoffset’ du bord gauche de la page en allant vers le
     côté droit.  La longueur ‘\hoffset’ vaut ‘0pt’, ce paramètre est
     obsolète il servait dans les années 1980, quand le système TeX a
     été conçu, à rattraper les défauts des imprimantes de l’époque dont
     le placement horizontal de la page par rapport à la feuille de
     papier pouvait se dérégler.

     La longueur ‘\oddsidemargin’ est la distance entre le bord gauche
     du texte et la frontière de la marge gauche nominale pour les pages
     de numéro impair dans les documents en recto-verso, et pour toutes
     les pages sinon pour les document en recto simple.  La longueur
     ‘\evensidemargin’ est la distance entre le bord gauche du texte et
     la frontière de la marge gauche nominale pour les pages de numéro
     pair dans les documents en recto-verso.

     En d’autres termes ‘\oddsidemargin’ ou ‘\evensidemargin’ donnent la
     différence entre la largeur de la marge gauche réel et la marge
     gauche nominale.  Ces distances ‘\oddsidemargin’ et
     ‘\evensidemargin’ sont donc signées vers le coté droit, c’est à
     dire qu’une valeur positive indique que la marge gauche réelle est
     plus large que la marge gauche nominale, alors qu’une valeur
     négative indique qu’au contraire elle est plus étroite.

     Dans une document en recto-verso le “côté intérieur” de la page est
     le côté gauche pour les pages de numéro impair, et le côté droit
     pour les page de numéro pair.  Le “côté extérieur” est le côté
     opposé au côté intérieur : la longueur ‘\oddsidemargin’ règle donc
     la position de la marge intérieure des pages de numéro impair,
     alors que ‘\evensidemargin’ règle la position la marge extérieur
     des pages de numéro pair.

     Pour une marge intérieure de 4cm dans un document en recto-verso,
     mettre le code suivant dans le préambule :

          \evensidemargin\dimexpr\paperwidth-\textwidth-1in-4cm
          \oddsidemargin\dimexpr4cm-1in

     Vice-versa, pour une marge extérieure de 5cm dans un document en
     recto-verso, mettre le code suivant dans le préambule :

          \evensidemargin\dimexpr5cm-1in
          \oddsidemargin\dimexpr\paperwidth-\textwidth-1in-5cm

‘\paperheight’
     La hauteur du papier, à ne pas confondre avec la hauteur de la zone
     d’impression.  Elle est normalement réglée avec une option de
     classe de document, comme dans ‘\documentclass[a4paper]{article}’
     (*note Options de classe de document: Document class options.).

‘\paperwidth’
     La largeur du papier, à ne pas confondre avec la largeur de la zone
     d’impression.  Elle est normalement réglée avec une option de
     classe de document, comme dans ‘\documentclass[a4paper]{article}’
     (*note Options de classe de document: Document class options.).

‘\textheight’
     La hauteur verticale normale du corps de la page.  Si le document
     réglé à une taille de police nominale de 10pt, alors pour un
     document de classe ‘article’ ou ‘report’, elle vaut
     ‘43\baselineskip’ ; pour une classe ‘book’, elle vaut
     ‘41\baselineskip’.  Pour 11pt, c’est ‘38\baselineskip’ pour toutes
     les classes de document.  Pour ‘12pt’ c’est ‘36\baselineskip’ pour
     toutes les classes aussi.

‘\textwidth’
     La largeur horizontale totale de l’ensemble du corps de la page.
     Pour un document de classe ‘article’ ou ‘report’, elle vaut ‘345pt’
     à 10pt de taille de police, ‘360pt’ à 11pt, et ‘390pt’ à 12pt.
     Pour un document ‘book’, elle veut ‘4.5in’ à 10pt et ‘5in’ à 11pt
     ou 12pt.

     En sortie multi-colonne, ‘\textwidth’ reste de la largeur de tout
     le corps de la page, tandis que ‘\columnwidth’ est la largeur d’une
     colonne (*note \twocolumn::).

     Dans les listes (*note list::), ‘\textwidth’ demeure la largeur du
     corps de la page entière (et ‘\columnwidth’ est la largeur d’une
     colonne entière), alors que ‘\linewidth’ peut diminuer au sein de
     listes imbriquées.

     À l’intérieur d’une minipage (*note minipage:: ) ou ‘\parbox’
     (*note \parbox::), tous les paramètres liés à la largeur sont mis à
     la largeur spécifiée, et de reviennent à leurs valeurs normales à
     la fin du ‘minipage’ ou ‘\parbox’.

‘\hsize’
     Par souci d’exhaustivité : ‘\hsize’ est le paramètre TeX primitif
     utilisé lorsque le texte est divisé en lignes.  Il ne devrait pas
     être utilisé dans des documents LaTeX en conditions normales.

‘\topmargin’
     La “marge supérieure” est la bande entre le bord supérieur de la
     page et le bord supérieure de l’en-tête de page.

     La “marge supérieure nominale” est la marge supérieur lorsque
     ‘\topmargin’ vaut ‘0pt’.  Sa frontière est une ligne horizontale
     imaginaire située à une distance de ‘1in + \voffset’ du bord
     supérieur de la page en allant vers le bas.  La longueur ‘\voffset’
     vaut ‘0pt’, ce paramètre est obsolète il servait dans les années
     1980, quand le système TeX a été conçu, à rattraper les défauts des
     imprimantes de l’époque dont le placement vertical de la page par
     rapport à la feuille de papier pouvait se dérégler.

     La distance ‘\topmargin’ sépare le haut de l’en-tête de page de la
     frontière de la marge supérieure nominale.  Elle est signée vers le
     bas, c’est à dire que quand ‘\topmargin’ est positif la marge
     supérieure est plus large que la marge supérieure nominale, et que
     s’il est négatif elle est au contraire plus étroite.  En d’autres
     termes ‘\topmargin’ est la différence entre la largeur de la marge
     supérieure réelle et la marge supérieure nominale.

     L’espace le haut de la page TeX et le haut du corps de texte est
     ‘1in + \voffset + \topmargin + \headheight + \headsep’.  La marge
     inférieure vaut donc ‘\paperheight -\textheight -\footskip - 1in -
     \voffset - \topmargin - \headheight - \headsep’.

‘\topskip’
     La distance minimale entre le sommet du corps de la page et la
     ligne de base de la première ligne de texte.  Pour les classes
     standard, la valeur par défaut est la même que la taille de la
     police, par exemple, ‘10pt’ à ‘10pt’.

5.6 Flottants
=============

Certains éléments typographiques, tels que les figures et les tableaux,
ne peuvent pas être à cheval sur plusieurs pages.  Ils doivent être
composés en dehors du flux normal du texte, par exemple flottant au
sommet d’une page ultérieure

   LaTeX sait gérer plusieurs classes de matériel flottant.  Il y a deux
classes définies par défaut, ‘figure’ (*note figure::) et ‘table’ (*note
table::), mais vous pouvez créer une nouvelle classes avec le paquetage
‘float’.

   Au sein d’une même classe flottante LaTeX respecte l’ordre, de sorte
que la première figure dans le code source d’un document est toujours
composée avant la deuxième figure.  Cependant, LaTeX peut mélanger les
classes, ainsi il peut se produire qu’alors que le premier tableau
apparaît dans le code source avant la première figure, il apparaîsse
après elle dans le fichier de sortie.

   Le placement des flottant est l’objet de paramètres, donnés
ci-dessous, qui limittent le nombre de flottants pouvant apparaître au
sommet d’une page, et au bas de page, etc.  Si à cause d’un nombre trop
important de flottants mis en queue ces limites les empèchent de tenir
tous dans une seule page, alors LaTeX place ce qu’il peut et diffère le
reste à la page suivante.  De la sorte, les flottants peuvent être
composés loin de leur place d’origine dans le code source.  En
particulioer, un flottant qui prend beaucoup de place peut migrer
jusqu’à la fin du document.  Mais alors, parce que tous les flottant
dans une classe doivent appraître dans le même ordre séquentiel, tous
les flottants suivant dans cette classe appraîssent aussi à la fin.

   En plus de changer les paramètres, pour chaque flottant vous pouvez
peaufiner l’endroit où l’algorithme de placement des flottants essaie de
le placer en utilisant sont argument PLACEMENT.  Les valeurs possibles
sont une séquence des lettres ci-dessous.  La valeur par défault pour à
la fois ‘figure’ et ‘table’, dans les deux classes de document ‘article’
et ‘book’, est ‘tbp’.

‘t’
     (pour Top) — au sommet d’une page de texte.

‘b’
     (pour Bottom) — au bas d’une page de texte.  (Cependant, ‘b’ n’est
     pas autorisé avec des flottants en pleine-largeur (‘figure*’) en
     cas de sortie à double-colonne.  Pour améliorer cela, on peut
     utiliser les paquetages ‘stfloats’ ou ‘dblfloatfix’, mais voyez la
     discussion sur les avertissements dans la FAQ :
     <http://www.tex.ac.uk/cgi-bin/texfaq2html?label=2colfloat>.

‘h’
     (pour « Here », c.-à-d.« Ici » en anglais) — à la position du texte
     où l’environnement ‘figure’ apparaît.  Cependant, ‘h’ n’est pas
     autorisé en soi-même ; ‘t’ est ajouté automatiquement.

     Pour forcer à tout prix un flottant à apparaître « ici », vous
     pouvez charger le paquetage ‘float’ et le spécificateur ‘H’ qui y
     est défini.  Pour plus ample discussion, voir l’entrée de FAQ à
     <http://www.tex.ac.uk/cgi-bin/texfaq2html?label=figurehere>.

‘p’
     (pour Page de flottants) — sur une “page de flottants” séparée, qui
     est une page ne contenant pas de texte, seulement des flottants.

‘!’
     Utilisé en plus de l’un des spécificateur précédents ; pour ce
     flottant seulement, LaTeX ignore les restrictions à la fois sur le
     nombre de flottants qui peuvent apparaître et les quantité
     relatives de texte flottant et non-flottant sur la page.  Le
     spécificateur ‘!’ _ne_ signifie _pas_ « mets le flottant ici » ;
     voir plus haut.

   Note : l’ordre dans lequel les lettres apparaîssent au sein du
paramètre PLACEMENT ne change pas l’ordre dans lequel LaTeX essaie de
placer le flottant ; par exemple ‘btp’ a le même effet que ‘tbp’.  Tout
ce que PLACEMENT fait c’est que si une lettre n’est pas présente alors
l’algorithme n’essaie pas cet endroit.  Ainsi, la valeur par défault de
LaTeX étant ‘tbp’ consiste à essayer toutes les localisations sauf celle
de placer le flottant là où il apparaît dans le code source.

   Pour empêcher LaTeX de rejeter tous les flottants à la fin du
document ou d’un chapitre, vous pouvez utiliser la commande ‘\clearpage’
pour commencer une nouvelle page et insérer tous les flottants pendants.
Si un saut de page est indésirable alors vous pouvez charger le
paquetage ‘afterpage’ et commettre le code ‘\afterpage{\clearpage}’.
Ceci aura l’effet d’attendre la fin de la page courante et ensuite de
faire passer tous les flottants encore non placés.

   LaTeX peut composer un flottant avant l’endroit où il apparaît dans
le code source (quoique sur la même page de sortie) s’il y a un
spécificateur ‘t’ au sein du paramètre PLACEMENT.  Si ceci n’est pas
désiré, et que supprimer ‘t’ n’est acceptable car ce spécificateur
empèche le flottant d’être placé au sommet de la page suivante, alors
vous pouvez empêcher cela soit en utilisant le paquetage ‘flafter’ ou en
utilisant ou en utilisant la commande ‘\suppressfloats[t]’, ce qui
entraîne le déplacement vers la page suivante des flottants qui auraient
du être placés au sommet de la page courante.

   Voici les paramètre en relation aux fractions de pages occupées par
du texte flottant et non flottant (on peut les changer avec
‘\renewcommand{PARAMETER}{DECIMAL BETWEEN 0 AND 1}’) :

     La fraction maximal de page autorisée à être occupées par des
     flottants au bas de la page ; la valeur par défaut est ‘.3’.

‘\floatpagefraction’
     La fraction minimale d’une page de flottants qui doit être occupée
     par des flottants ; la valeur par défaut ‘.5’.

‘\textfraction’
     La fraction minimale d’une page qui doit être du texte ; si des
     flottants prennent trop d’espace pour préserver une telle quantité
     de texte, alors les flottants sont déplacés vers une autre page.
     La valeur par défaut est ‘.2’.

‘\topfraction’
     Fraction maximale au sommet d’une page page que peut être occupée
     avant des flottants ; la valeur par défaut est ‘.7’.

   Les paramètres en relation à l’espace vertical autour des flottants
(on peut les changer avec ‘\setlength{PARAMETER}{LENGTH EXPRESSION}’) :

‘\floatsep’
     Espace entre les floattants au sommet ou au bas d’une page ; par
     défaut vaut ‘12pt plus2pt minus2pt’.

‘\intextsep’
     Espace au dessus et au dessous d’un flottant situé au milieu du
     texte principal ; vaut par défaut ‘12pt plus2pt minus2pt’ pour les
     styles à ‘10pt’ et à ‘11pt’, et ‘14pt plus4pt minus4pt’ pour
     ‘12pt’.

‘\textfloatsep’
     Espace entre le dernier (premier) flottant au sommet (bas) d’une
     page ; par défaut vaut ‘20pt plus2pt minus4pt’.

   Paramètres en relation avec le nombre de flottant sur une page (on
peut les changer avec ‘\setcounter{CTRNAME}{NATURAL NUMBER}’) :

‘\bottomnumber’
     Nombre maximal de flottants pouvant apparaître au bas d’une page de
     texte ; par défaut 1.

‘\topnumber’
     Nombre maximal de flottants pouvant apparaître au sommet d’une page
     de texte ; par défaut 2.

‘\totalnumber’
     Nombre maximal de flottants pouvant apparaître sur une page de
     texte ; par défaut 3.

   L’article principal de FAQ TeX en rapport avec les flottants
<http://www.tex.ac.uk/cgi-bin/texfaq2html?label=floats> contient des
suggestions pour relâcher les paramètres par défaut de LaTeX de sorte à
réduire les problèmes de flottants rejetés à la fin.  Une explication
complète de l’algorithme de placement des flottant se trouve dans
l’article de Frank Mittelbach « How to infuence the position of float
environments like figure and table in LaTeX? »
(<http://latex-project.org/papers/tb111mitt-float.pdf>).

6 Rubricage
***********

Structure votre texte en rubriques : parties, chapitres, sections, etc.
Toutes les commandes de rubricage ont la même forme, l’une parmi :

     CMD-DE-RUBRICAGE{TITRE}
     CMD-DE-RUBRICAGE*{TITRE}
     CMD-DE-RUBRICAGE[TITRE-TDM]{TITRE}

Par exemple, déclarez le début d’une sous-section comme dans
‘\subsection{Motivation}’.

   Le tableau suivant comprend chacune des commandes CMD-DE-RUBRICAGE de
LaTeX.  Toutes sont disponibles dans toutes les classes de document
standardes de LaTeX ‘book’, ‘report’, et ‘article’, à ceci près que
‘\chapter’ n’est pas disponible dans ‘article’.

Type de rubrique   Commande           Niveau
--------------------------------------------------------------------
Part               ‘\part’            -1 (‘book’, ‘report’), 0
                                      (‘article’)
Chapter            ‘\chapter’         0
Section            ‘\section’         1
Subsection         ‘\subsection’      2
Subsubsection      ‘\subsubsection’   3
Paragraph          ‘\paragraph’       4
Subparagraph       ‘\subparagraph’    5

   Toutes ces commandes ont une forme en ‘*’, aussi appelée étoilée, qui
imprime TITRE comme d’habitude mais sans le numéroter et sans fabriquer
une entrée dans la table des matières.  Un exemple d’utilisation est
pour un appendice dans un ‘article’.  Entrer le code
‘\appendix\section{Appendice}’ donne en sortie ‘A Appendix’ (*note
\appendix::).  Vous pouvez ôter le numéro ‘A’ en entrant à la place
‘\section*{Appendice}’ (les articles omettent couramment d’avoir une
table des matières et ont des en-têtes de pages simples alors les autres
différences de la commande ‘\section’ peuvent être négligées).

   Le titre TITRE fournit la rubrique en tant que titre dans le texte
principal, mais il peut également apparaître dans la table des matières
et le haut et le bas de bage (*note Page styles::).  Vous pourriez
désirer un texte différent à ces endroits que dans le texte principal.
Toute ces commandes ont un argument optionnel TDM-TITRE destiné à ces
autres endroits.

   Le numéro dans la colonne «Niveau» de la table ci-dessus détermine
quelles rubriques sont numérotées, et lesquelles apparaissent dans la
table des matières.  Si le NIVEAU de la commande de rubricage est
inférieur ou égal à la valeur du compteur ‘secnumdepth’ alors les
rubriques correspondant à ces commandes de rubricage sont numérotées
(*note Sectioning/secnumdepth::).  Et, si NIVEAU est inférieur ou égal à
la valeur du compteur ‘tocdepth’ alors la table des matières comprend
une entrée pour cette rubrique (*note Sectioning/tocdepth::).

   LaTeX s’attend que avant d’avoir une ‘\subsection’ vous ayez une
‘\section’ et, dans un document de classe ‘book’, qu’avant une
‘\section’ vous ayez un ‘\chapter’.  Autrement vous pourriez obtenir
quelque-chose comme une sous-sesction numérotée ‘3.0.1’.

   LaTeX vous permet de changer l’apparence des rubriques.  Un exemple
simple de ceci est que vous pouvez mettre le numéro de rubrique de type
section en lettres majuscules avec
‘\renewcommand\thesection{\Alph{section}}’ dans le préambule (*note
\alph \Alph \arabic \roman \Roman \fnsymbol::).  Le CTAN a beaucoup de
paquetages rendant ce genre d’ajustement plus facile, notamment
‘titlesec’.

   Deux compteurs sont en relation avec l’apparence des rubriques
fabriquées par les commandes de rubricage.

‘secnumdepth’
     Le compteur ‘secnumdepth’ contrôle quels titres de rubriques sont
     numérotés.  Régler le compteur avec
     ‘\setcounter{secnumdepth}{NIVEAU}’ supprime la numérotation des
     rubriques à toute profondeur supérieure à NIVEAU (*note
     \setcounter::).  Voir la table plus haut pour la valeur des
     niveaux.  Par exemple, si le ‘secnumdepth’ vaut 1 dans un ‘article’
     alors la commande ‘\section{Introduction}’ produit en sortie
     quelque-chose comme ‘1 Introduction’ alors que
     ‘\subsection{Discussion}’ produit quelque-chose comme ‘Discussion’,
     sans numéro.  La valeur par défaut de LaTeX pour ‘secnumdepth’
     vaut 3 dans la classe ‘article’ et 2 dans les classes ‘book’ et
     ‘report’.

‘tocdepth’
     Contrôle quelles rubriques sont listées dans la table des matières.
     Régler ‘\setcounter{tocdepth}{NIVEAU}’ a pour effet que les
     rubriques au niveau NIVEAU sont celles de plus petit niveau à être
     listées (*note \setcounter::).  Voir la table ci-dessus pour les
     numéros de niveau.  Par exemple, if ‘tocdepth’ vaut 1 alors la
     table des matières contiendra les rubriques issues de ‘\section’,
     mais pas celles de ‘\subsection’.  La valeur par défaut de LaTeX
     pour ‘tocdepth’ vaut 3 dans la classe ‘article’ et 2 dans les
     classes ‘book’ et ‘report’.

6.1 ‘\part’
===========

Synopsis, l’un parmi :

     \part{TITRE}
     \part*{TITRE}
     \part[TDM-TITRE]{TITRE}

   Début une partie de document.  Les classes standarde LaTeX ‘book’,
‘report’, et ‘article’ offrent toutes cette commande.

   L’exemple suivant produit une partie de document dans un livre :

     \part{VOLUME I \\
            PERSONAL MEMOIRS OF  U.\ S.\ GRANT}
     \chapter{ANCESTRY--BIRTH--BOYHOOD.}
     My family is American, and has been for generations,
     in all its branches, direct and collateral.

   Dans chaque classe standarde la commande ‘\part’ produit en sortie un
numéro de partie tel que ‘Première partie’, seul sur sa ligne, en
caractère gras, et en gros caractères.  Ensuite LaTeX produit en sortie
TITRE, également seule sur sa ligne, en caractère gras et en caractères
encore plus gros.  Dans la classe ‘book’, le comportement par défaut de
LaTeX est de mettre chaque titre de partie seule sur sa propre page.  Si
le livre est en recto-verso alors LaTeX saute une page si nécessaire
pour que la nouvelle partie commence sur une page à numéro impair.  Dans
un ‘report’ il est également seul sur une page, mais LaTeX ne force pas
qu’elle soit de numéro impair.  Dans un ‘article’ LaTeX ne le place pas
sur une nouvelle page, mais au lieu de cela produit en sortie le numéro
de partie et le titre de partie sur la même page que le document
principal.

   La forme en ‘*’ imprime TITRE mais n’imprime pas le numéro de partie,
et n’incrémente pas le compteur ‘part’, et ne produit aucune entrée dans
la table des matières.

   L’argument optionnel TDM-TITRE apparaît comme le titre de la partie
dans la table des matières (*note Table of contents etc.::) et dans les
hauts de pages (*note Page styles::).  S’il n’est pas présent alors
TITRE est utilisé à sa place.  Dans l’exemple suivante on met un saut de
ligne dans TITRE mais on l’enlève dans la table des matière.

     \part[Up from the bottom; my life]{Up from the bottom\\ my life}

   Pour déterminer quelles rubrique sont numéroté et lesquelles
apparaissent dans la table des matières, le numéro de niveau d’une
partie vaut -1 (*note Sectioning/secnumdepth:: et *note
Sectioning/tocdepth::).

   Dans la classe ‘article’, si un paragraphe suit immédiatement le
titre de partie alors il n’est pas renfoncé.  Pour obtenir un
renfoncement vous pouvez utiliser le paquetage ‘indentfirst’.

   Un paquetage pour changer le comportement de ‘\part’ est ‘titlesec’.
Voir sa documentation sur le CTAN.

6.2 ‘\chapter’
==============

Synopsis, l’un parmi :

     \chapter{TITRE}
     \chapter*{TITRE}
     \chapter[TDM-TITRE]{TITRE}

   Commence un chapitre.  Les classes standardes LaTeX ‘book’ et
‘report’ ont cette commande, mais ‘article’ non.

   L’exemple suivant produit un chapitre.

     \chapter{Mirages}
     Appelez moi Ismaël.
     Voici quelques années --- peu importe combien --- le porte-monnaie vide
     ou presque, rien ne me retenant à terre, je songeai à naviguer un peu et
     à voir l'étendue liquide du globe.

   Le comportement par défaut de LaTeX est de commence chaque chapitre
sur une page neuve, une page à numéro impair si le document est en
recto-verso.  Il produit un numéro de chapitre tel que ‘Chapitre 1’ en
gros caractère gras (la taille est ‘\huge’).  Ensuite il place le TITRE
sur une nouvelle ligne, en caractère gras encore plus gros (taille
‘\Huge’).  Il incrémente également le compteur ‘chapter’, ajoute une
entrée à la table des matières (*note Table of contents etc.::), et
règle l’information de haut de page (*note Page styles::).

   La forme étoilée, ou forme en ‘*’, affiche TITRE sur une nouvelle
ligne, en caractère gras.  Mais elle n’affiche pas le numéro de
chapitre, ni n’incrément le compteur ‘chapter’, et ne produit aucune
entrée dans la table des matières, et n’affecte pas le haut de page.
(Si vous utilise le style de page ‘headings’ dans un document
recto-version alors le haut de page sera dérivé du chapitre précédent).
Voici un exemple illustrant cela :

     \chapter*{Préambule}

   L’argument optionnel TDM-TITRE apparaît comme titre de chapitre dans
la tabvle des matières (*note Table of contents etc.::) et dans les
hauts de page (*note Page styles::).  Si il n’est pas présent alors
TITRE sera à la place.  L’exemple suivant montre le nom complet dans le
titre de chapitre,

     \chapter[Weyl]{Hermann Klaus Hugo (Peter) Weyl (1885--1955)}

mais seulement ‘Weyl’ sur la page de table des matières.  L’exemple
suivant place un saut de ligne dans le titre, mais ceci ne fonctionne
pas bien avec les haut de page, alors il omet le saut dans la table des
matières

     \chapter[J'ai tout donné ; mon histoire]{J'ai tout donné\\ mon histoire}

   Pour déterminer quelles rubriques sont numérotées et lesquelles
apparaissent dans la table des matières, le numéro de niveau d’un
chapitre est 0 (*note Sectioning/secnumdepth:: et *note
Sectioning/tocdepth::).

   Lorsque chargez un paquetage d’internationalisation tel que ‘babel’,
‘mlp’ ou ‘polyglossia’, et que la langue sélectionnée est le français,
alors le premier paragraphe après le titre est normalement renfoncé,
comme c’est la convention en typographie française.  Par contre, si vous
restez en langue par défaut, c-à-d. en anglo-américain, le paragraphe
qui suit le titre de chapitre n’est pas renfoncé, étant donné que c’est
pour l’anglo-américain une pratique typographique standarde.  Pour
obtenir un renfoncement dans ce cas utilisez le paquetage ‘indentfirst’.

   Vous pouvez changer ce qui est affiché pour le numéro de chapitre.
Pour le changer en quelque-chose du genre de ‘Cours 1’, placez dans le
préambule soit ‘\renewcommand{\chaptername}{Cours}’, soit cela (*note
\makeatletter & \makeatother::) :

     \makeatletter
     \renewcommand{\@chapapp}{Cours}
     \makeatother

Pour que cela soit fonction de la langue principale du document, voir le
paquetage ‘babel’.

   Dans un document recto-verso LaTeX commence les chapitres sur des
pages de numéro impair, en laissant si nécessaire une page de numéro
pair blanche à l’exception d’un éventuel haut de page.  Pour que cette
page soit complètement blanche, voir *note \clearpage &
\cleardoublepage::.

   Pour changer le comportement de la commande ‘\chapter’, vous pouvez
copier sa définition depuis le fichier de format LaTeX et faire des
ajustements.  Mais il y a aussi beaucoup de paquetage sur le CTAN qui
traitent de cela.  L’un d’eux est ‘titlesec’.  Voir sa documentation,
mais l’exemple ci-dessous donne un aperçu de ce qu’il peut faire.

     \usepackage{titlesec}   % dans le préambule
     \titleformat{\chapter}
       {\Huge\bfseries}  % format du titre
       {}                % étiquette, tel que 1.2 pour une sous-section
       {0pt}             % longueur de séparation entre l'étiquette et le titre
       {}                % code crochet exécuté avant

Ceci omet le numéro de chapitre ‘Chapitre 1’ de la page, mais
contrairement à ‘\chapter*’ cela conserve le chapitre dans la table des
matière et dans les hauts de page.

6.3 ‘\section’
==============

Synopsis, l’un parmi :

     \section{TITRE}
     \section*{TITRE}
     \section[TDM-TITRE]{TITRE}

   Commence une section.  Les classes LaTeX standardes ‘article’,
‘book’, et ‘report’ ont toutes cette commande.

   L’exemple suivant produit une section :

     Dans cette partie nous nous intéressons plutôt à la fonction, au
     comportement d'entrée-sortie, qu'aux détails de la réalisation de ce
     comportement.

     \section{Machines de Turing}
     En dépit de ce désir de rester évasif sur l'implémentation, nous suivons
     l'approche d'A.~Turing selon laquelle la première étape pour définir
     l'ensemble des fonctions calculables est de réflechir au détails de ce
     que des mécanismes peuvent faire.

   Pour les classes standardes LaTeX ‘book’ et ‘report’ la sortie par
défaut est du genre de ‘1.2 TITRE’ (pour chapitre 1, section 2), seul
sur sa ligne et fer à gauche, en caractères gras et plus gros (la taille
de police est ‘\Large’).  La même chose vaut pour ‘article’ à ceci près
qu’il n’y a pas de chapitre dans cette classe, et donc cela ressemble à
‘2 TITRE’.

   La forme en ‘*’ affiche TITRE.  Mais elle n’affiche pas le numéro de
section, ni n’incrémente le compteur ‘section’, ne produit aucune entrée
dans la table des matière, et n’affecte pas le haut de page.  (Si vous
utilisez le style de page ‘headings’ dans un document recto-verso, alors
le titre de haut de page sera celui de la rubrique précédente).

   L’argument optionnel TDM-TITRE apparaît comme titre de section dans
la table des matières (*note Table of contents etc.::) et dans les
titres de haut de page (*note Page styles::).  S’il n’est pas présent
alors TITRE est à la place.  L’exemple suivant montre le nom complet
dans le titre de la section,

     \section[Elisabeth~II]{Elisabeth deux,
       Reine par la grâce de Dieu du Royaume Uni,
       du Canada et de ses autres Royaumes et Territoires,
       Chef du Commonwealth, Défenseur de la Foi.}

mais seulement ‘Elisabeth II’ dans la table de matière et sur les hauts
de page.  Dans l’exemple suivant il y a un saut de ligne dans TITRE mais
ça ne fonctionne pas pour la table des matières alors il est omis de la
table des matières et des titres de hauts de page.

     \section[La vérité c'est que j'ai menti ; histoire de ma vie]{La vérité
     c'est que j'ai menti\\ histoire de ma vie}

   Pour déterminer quelles rubriques sont numérotées et lesquelles
apparaissent dans la table des matières, le numéro de niveau d’une
section est 1 (*note Sectioning/secnumdepth:: et *note
Sectioning/tocdepth::).

   Lorsque chargez un paquetage d’internationalisation tel que ‘babel’,
‘mlp’ ou ‘polyglossia’, et que la langue sélectionnée est le français,
alors le premier paragraphe après le titre est normalement renfoncé,
comme c’est la convention en typographie française.  Par contre, si vous
restez en langue par défaut, c-à-d. en anglo-américain, le paragraphe
qui suit le titre de section n’est pas renfoncé, étant donné que c’est
pour l’anglo-américain une pratique typographique standarde.  Pour
obtenir un renfoncement dans ce cas utilisez le paquetage ‘indentfirst’.

   En général, pour changer le comportement de la commande ‘\section’,
il y a diverses options.  L’une d’elles et la commande ‘\@startsection’
(*note \@startsection::).  Il y a aussi un grand nombre de paquetages
sur le CTAN traitant de cela, dont ‘titlesec’.  Voir sa documentation,
mais l’exemple ci-dessous donne un aperçu de ce qu’il peut faire.

     \usepackage{titlesec}   % dans le préambule
     \titleformat{\section}
       {\normalfont\Large\bfseries}  % format du titre
       {\makebox[1pc][r]{\thesection\hspace{1pc}}} % étiquette
       {0pt}                   % longueur de séparation entre l'étiquette et le titre
       {}                      % code crochet exécuté avant
     \titlespacing*{\section}
       {-1pc}{18pt}{10pt}[10pc]

Cela met le numéro de section dans la marge.

6.4 ‘\subsection’
=================

Synopsis, l’un parmi :

     \subsection{TITRE}
     \subsection*{TITRE}
     \subsection[TDM-TITRE]{TITRE}

   Commence une sous-section.  Les classes LaTeX standardes ‘article’,
‘book’, et ‘report’ ont toutes cette commande.

   L’exemple suivant produit une sous-section :

     Nous allons montrer qu'il y a plus de fonction que de machines de Turing
     et donc que certaines fonctions n'ont pas de machine associée.

     \subsection{Cardinal} Nous allons commencer par deux paradoxes qui
     mettent en scène le défi que pose à notre intuition la comparaison des
     tailles d'ensembles infinis.

   Pour les classes LaTeX standardes ‘book’ et ‘report’ la sortie par
défaut est du genre de ‘1.2.3 TITRE’ (pour chapitre 1, section 2,
sous-section 3), seul sur sa ligne et fer à gauche, en caractère gras et
un peu plus gros (la taille de police est ‘\large’).  La même chose vaut
dans ‘article’ à ceci près qu’il n’y a pas de chapitre dans cette
classe, alors cela ressemble à ‘2.3 TITRE’.

   La forme en ‘*’ affiche TITRE.  Mais elle n’affiche pas le numéro de
sous-section, ni n’incrémente le compteur ‘subsection’, et ne produit
aucune entrée dans la table des matières.

   L’argument optionnel TDM-TITRE apparaît comme le titre de
sous-section dans la table des matières (*note Table of contents
etc.::).  S’il n’est pas présent alors TITRE est à la place.  L’exemple
suivant montre le texte complet dans le titre de sous-section,

     \subsection[$\alpha,\beta,\gamma$ paper]{\textit{The Origin of
       Chemical Elements} by R.A.~Alpher, H.~Bethe, and G.~Gamow}

mais seulement ‘03B1,03B2,03B3 paper’ dans la table des matières.

   Pour déterminer quelles rubriques sont numérotées et lesquelles
apparaissent dans la table des matières, le numéro de niveau d’une
sous-section est 2 (*note Sectioning/secnumdepth:: et *note
Sectioning/tocdepth::).

   Lorsque chargez un paquetage d’internationalisation tel que ‘babel’,
‘mlp’ ou ‘polyglossia’, et que la langue sélectionnée est le français,
alors le premier paragraphe après le titre est normalement renfoncé,
comme c’est la convention en typographie française.  Par contre, si vous
restez en langue par défaut, c-à-d. en anglo-américain, le paragraphe
qui suit le titre de sous-section n’est pas renfoncé, étant donné que
c’est pour l’anglo-américain une pratique typographique standarde.  Pour
obtenir un renfoncement dans ce cas utilisez le paquetage ‘indentfirst’.

   Il y a diverses façon de changer le comportement de la commande
‘\subsection’.  L’une d’elles et la commande ‘\@startsection’ (*note
\@startsection::).  Il y a aussi divers paquetages sur le CTAN traitant
de cela, dont ‘titlesec’.  Voir sa documentation, mais l’exemple
ci-dessous donne un aperçu de ce qu’il peut faire.

     \usepackage{titlesec}   % dans le préambule
     \titleformat{\subsection}[runin]
       {\normalfont\normalsize\bfseries}  % format du titre
       {\thesubsection}                   % étiquette
       {0.6em}                            % espacement entre l'étiquette et le titre
       {}                                 % code crochet exécuté avant

Cela place le numéro de sous-section et TITRE sur la première ligne de
texte.

6.5 ‘\subsubsection’, ‘\paragraph’, ‘\subparagraph’
===================================================

Synopsis, l’un parmi les suivant :

     \subsubsection{TITRE}
     \subsubsection*{TITRE}
     \subsubsection[TITRE-TDM]{TITRE}

ou l’un parmi :

     \paragraph{TITRE}
     \paragraph*{TITRE}
     \paragraph[TITRE-TDM]{TITRE}

ou l’un parmi :

     \subparagraph{TITRE}
     \subparagraph*{TITRE}
     \subparagraph[TITRE-TDM]{TITRE}

   Débute une rubrique de type sous-sous-section, paragraphe, ou
sous-paragraphe.  Les classes LaTeX standardes ‘article’, ‘book’, et
‘report’ disposent toutes de ces commandes, bien que leur utilisation
n’est pas courante.

   L’exemple suivant produit une sous-sous-section :

     \subsubsection{Piston ring compressors: structural performance}
     Provide exterior/interior wall cladding assemblies
     capable of withstanding the effects of load and stresses from
     consumer-grade gasoline engine piston rings.

   La sortie produite par défaut de chacune de ces trois commande est la
même pour les classes LaTeX standarde ‘article’, ‘book’, et ‘report’.
Pour ‘\subsubsection’ le TITRE est seul sur sa ligne, en caractères gras
avec la taille normale de police.  Pour ‘\paragraph’ le TITRE est sur la
même ligne que le texte qui suit, sans renfoncement, en caractères gras
avec la taille normale de police.  Pour ‘\subparagraph’ le TITRE est sur
la même ligne que la texte qui suit, avec un renfoncement de paragraphe,
en caractère gras et avec la taille normale de police (comme les
documents de classe ‘article’ n’ont pas de chapitre, leurs
sous-sous-sections sont numérotées et donc cela ressemble à ‘1.2.3
TITRE’, pour section 1, sous-section 2, et sous-sous-section 3.  Les
deux autres subdivisions ne sont pas numérotées).

   La forme en ‘*’ affiche TITRE.  Mais elle n’incrémente pas le
compteur associé et ne produit pas d’entrée dans la table des matières
(et le titre produit pas ‘\subsubsection’ n’a pas de numéro).

   L’argument optionnel TITRE-TDM apparaît comme le titre de la rubrique
dans la table des matières (*note Table of contents etc.::).  S’il est
omis, alors TITRE est utilisé à la place.

   Pour déterminer quelles rubriques sont numérotées et lesquelles
apparaissent dans la table des matières, le numéro de nuveau d’une
sous-sous-section est 3, celui d’un paragraphe est 4, et celui d’un
sous-paragraphe est 5 (*note Sectioning/secnumdepth:: et *note
Sectioning/tocdepth::).

   Lorsque chargez un paquetage d’internationalisation tel que ‘babel’,
‘mlp’ ou ‘polyglossia’, et que la langue sélectionnée est le français,
alors le premier paragraphe après le titre est normalement renfoncé,
comme c’est la convention en typographie française.  Par contre, si vous
restez en langue par défaut, c-à-d. en anglo-américain, le paragraphe
qui suit le titre de chapitre n’est pas renfoncé, étant donné que c’est
pour l’anglo-américain une pratique typographique standarde.  Une façon
d’obtenir un renfoncement dans ce cas est d’utiliser le paquetage
‘indentfirst’.

   Il y a de nombreuses manières de changer le comportement de ces
commandes.  L’une est la commande ‘\@startsection’ (*note
\@startsection::).  Il y a aussi un grand nombre de paquetages sur le
CTAN traitant de cela, dont ‘titlesec’.  Voir sa documentation sur le
CTAN.

6.6 ‘\appendix’
===============

Synopsis :

     \appendix

   Ne produit pas directement quelque chose en sortie.  Mais dans un
document ‘book’ ou ‘report’ cela déclare que toute commande ‘\chapter’
qui suit commence une annexe.  Pour les documents ‘article’ cela fait la
même chose mais avec les commandes ‘\section’.  Remet également à zéro
les compteurs ‘chapter’ et ‘section’ dans un document ‘book’ ou
‘report’, et dans un ‘article’ les compteurs ‘section’ et ‘subsection’.

   Dans ce document de classe ‘book’ :

     \chapter{Un}  ...
     \chapter{Deux}  ...
      ...
     \appendix
     \chapter{Trois}  ...
     \chapter{Quatre}  ...

les deux premières commandes produisent en sortie ‘Chapitre 1’ and
‘Chapitre 2’.  Après la commande ‘\appendix’ la numérotation devient
‘Annexe A’ et ‘Annexe B’.  *Note Larger book template:: pour un autre
exemple.

   Le paquetage ‘appendix’ ajoute la commande ‘\appendixpage’ pour créer
une page de titre de partie intitulée ‘Appendices’ dans le corps du
document avant la première annexe, ainsi que la commande
‘\addappheadtotoc’ pour créer l’entrée correspondante dans la table des
matières.  On peut régler le nom ‘Appendices’ avec une commande comme
‘\renewcommand{\appendixname}{Annexes}’, et il y a plusieurs autres
fonctions.  Voir la documentation sur le CTAN.

6.7 ‘\frontmatter’, ‘\mainmatter’, ‘\backmatter’
================================================

Synopsis, l’un ou plus parmi :

     \frontmatter
     …
     \mainmatter
     …
     \backmatter
     …

   Formate un document de classe ‘book’ différemment selon la partie du
document en cours de production.  Les trois commandes sont toutes
optionnelles.

   Traditionnellement, les pièces préliminaires (‘\frontmatter’) d’un
livre comprennent des choses telles que la page de titre, un abrégé, une
table des matières, une préface, une liste des notations, une liste des
figures et une liste des tableaux.  (Certaines des pages des pièces
préliminaires, telles que la page de titres, traditionnellement ne sont
pas numérotée).  Les pièces postliminaires (‘\backmatter’) peuvent
contenir des choses telles qu’un glossaire, une bibliographie, et un
index.

   La commande ‘\frontmatter’ rend les numéros de page en chiffres
romains bas de casse, et rend les chapitres non numérotés, bien que les
titres de chaque chapitre apparaissent dans la table des matières ; si
vous utilisez là aussi d’autres commandes de rubricage, alors utilisez
la version en ‘*’ (*note Sectioning::).

   La commande ‘\mainmatter’ permet de revenir au comportement attendu,
et réinitialise le numéro de page.

   La commande ‘\backmatter’ n’affecte pas la numérotation des pages,
mais commute de nouveau les chapitres en mode sans numéros.

   *Note Larger book template::, pour un exemple d’usage de ces trois
commandes.

6.8 ‘\@startsection’, composer les rubriques.
=============================================

Synopsis :

     \@startsection{NOM}{NIVEAU}{RETRAIT}{AVANT}{APRÈS}{STYLE}

   Utilisé pour aider à redéfinir le comportement des commandes de
rubricage telles que ‘\section’ ou ‘\subsection’.

   Notez que le paquetage ‘titlesec’ rend la manipulation du rubricage
plus facile.  De plus, bien que la plupart des exigences concernant les
commandes de rubricage peuvent être remplies avec ‘\@startsection’, ce
n’est pas le cas de certaines d’entre elles.  Par exemple, dans les
classes LaTeX standardes ‘book’ et ‘report’, les commandes ‘\chapter’ et
‘\report’ ne sont pas construites de cette manière.  Pour fabriquer une
telle commande, il est possible d’utiliser la commande ‘\secdef’.

   Techniquement, cette commande a la forme suivante :
     \@startsection{NOM}
       {NIVEAU}
       {RETRAIT}
       {AVANT}
       {APRÈS}
       {STYLE}*[TITRETDM]{TITRE}
de sorte que faire :
     \renewcommand{\section}{\@startsection{NOM}
       {NIVEAU}
       {RETRAIT}
       {AVANT}
       {APRÈS}
       {STYLE}}
redéfinit ‘\section’ en gardant sa forme standarde d’appel
‘\section*[TITRETDM]{TITRE}’ (dans laquelle on rappelle que l’étoile ‘*’
est optionnelle).  *Note Sectioning::.  Ceci implique que quand vous
écrivez une commande comme ‘\renewcommand{\section}{...}’, le
‘\@startsection{...}’ doit venir en dernier dans la définition.  Voir
les exemples ci-dessous.

NOM
     Nom du compteur utilisé pour numéroter les titres de rubrique.  Ce
     compteur doit être défini séparément.  Ceux qui sont utilisés le
     plus communément sont ‘section’, ‘subsection’, ou ‘paragraph’.
     Bien que dans ces cas-là le nom du compteur soit identique à celui
     de la commande elle-même, utiliser le même nom n’est pas
     obligatoire.

     Alors ‘\the’NAME affiche le numéro de titre, et ‘\’NAME‘mark’ sert
     aux en-têtes de page.  Voir le troisième exemple plus bas.

NIVEAU
     Entier donnant la profondeur de la commande de rubricage.  *Note
     Sectioning:: pour une liste des numéros standards de niveaux.

     Si NIVEAU est inférieur ou égal à la valeur du compteur
     ‘secnumdepth’, alors les titres pour cette commande de rubricage
     sont numérotés (*note Sectioning/secnumdepth::).  Par exemple :
     dans un ‘article’, si ‘secnumdepth’ vaut 1, alors une commande
     ‘\section{Introduction}’ produira en sortie une chaîne du type « ‘1
     Introduction’ », alors que ‘\subsection{Historique}’ produira en
     sortie une chaîne sans numéro de préfixe : « ‘Historique’ ».

     Si NIVEAU est inférieur ou égal à la valeur du compteur ‘tocdepth’,
     alors la table des matières aura un article pour cette rubrique.
     Par exemple, dans un ‘article’, si ‘tocdepth’ vaut 1, la table des
     matières listera les ‘section’s, mais pas les ‘subsection’s.

RETRAIT

     Une longueur donnant le renfoncement de toutes les lignes du titre
     par rapport à la marge de gauche.  Pour un renfoncement nul,
     utilisez ‘0pt’.  Une valeur négative telle que ‘-1em’ cause un
     débord du titre dans la marge de gauche.

AVANT
     Longueur dont la valeur absolue est la longueur de l’espace
     vertical inséré avant le titre de la rubrique.  Cet espacement est
     ignoré si la rubrique commence au début d’une page.  Si ce nombre
     est négatif, alors le premier paragraphe suivant le titre n’est pas
     renfoncé, s’il est positif ou nul il l’est.  (Notez que l’opposé de
     ‘1pt plus 2pt minus 3pt’ est ‘-1pt plus -2pt minus -3pt’).

     Par exemple si AVANT vaut ‘-3.5ex plus -1ex minus -0.2ex’ alors
     pour commencer la nouvelle rubrique, LaTeX ajoute environ 3,5 fois
     la hauteur d’une lettre x en espace vertical, et le premier
     paragraphe de la rubrique n’est pas renfoncé.  Utiliser une
     longueur élastique, c.-à-d. comprenant ‘plus’ et ‘minus’, est une
     bonne pratique ici car cela donne à LaTeX plus de latitude lors de
     la fabrication de la page (*note Lengths::).

     La quantité totale d’espace vertical entre la ligne de base de la
     ligne précédant cette rubrique et la ligne de base du titre de la
     rubrique est la somme du ‘\parskip’ dans la police du corps de
     texte, du ‘\baselineskip’ de la police du titre, et de la valeur
     absolue de l’argument AVANT.  Cet espace est typiquement élastique
     de sorte à pouvoir se dilater ou se contracter.  (Si la rubrique
     commence en début d’une page de sorte que cet espace soit ignoré,
     alors la ligne de base du titre correspond à la ligne de base
     qu’aurait la première ligne de texte sur cette page si celle-ci
     commençait par du texte).

APRÈS
     Longueur.  Lorsque APRÈS est positif ou nul, il s’agit de l’espace
     vertical à insérer après le titre de la rubrique.  Lorsque elle est
     négative, alors le titre fait corps avec le paragraphe le suivant
     immédiatement.  Dans ce cas la valeur absolue de la longueur donne
     l’espace horizontal entre la fin du titre et le début du paragraphe
     suivant.  (Notez que l’opposé de ‘1pt plus 2pt minus 3pt’ est ‘-1pt
     plus -2pt minus -3pt’).

     Comme c’est le cas avec AVANT, utiliser une longueur élastique avec
     des composantes ‘plus’ et ‘minus’ est une bonne pratique ici
     puisque elle donne à LaTeX plus de latitude pour assembler la page.

     Si APRÈS est positif ou nul, la quantité totale d’espace vertical
     entre la ligne de base du titre de la rubrique et la ligne de base
     de la première ligne du paragraphe suivant est la somme du
     ‘\parskip’ de la police du titre, de ‘\baselineskip’ de la police
     du corps de texte, et de la valeur de APRÈS.  Cet espace est
     typiquement élastique de sorte qu’il puisse se dilater ou se
     contracter.  (Notez que, du fait que le signe d’APRÈS contrôle que
     le titre soit indépendant du texte qui le suit ou faisant corps
     avec lui, vous ne pouvez pas utiliser un APRÈS négatif pour annuler
     une partie du ‘\parskip’).

STYLE
     Contrôle le style du titre : voir les exemples plus bas.  Les
     commandes typiquement utilisées ici sont ‘\centering’,
     ‘\raggedright’, ‘\normalfont’, ‘\hrule’, ou ‘\newpage’.  La
     dernière commande au sein de STYLE peut être une commande prenant
     un argument, telle que ‘\MakeUppercase’ ou ‘\fbox’.  Le titre de la
     rubrique est passé en argument à cette commande.  Par exemple
     régler STYLE à ‘\bfseries\MakeUppercase’ a pour effet de produire
     des titres gras et en capitales.

   Voici les réglages par défaut de LaTeX pour les trois premiers
niveaux de rubricage qui sont définis par ‘\@startsection’, pour les
classes ‘article’, ‘book’, et ‘report’.

   • Pour ‘section’ : le NIVEAU vaut 1, le RETRAIT vaut 0pt, le AVANT
     vaut ‘-3.5ex plus -1ex minus -0.2ex’, le APRÈS vaut ‘2.3ex plus
     0.2ex’, et le STYLE vaut ‘\normalfont\Large\bfseries’.

   • Pour ‘subsection’ : le NIVEAU vaut 2, le RETRAIT vaut 0pt, le AVANT
     vaut ‘-3.25ex plus -1ex minus -0.2ex’, le APRÈS vaut ‘1.5ex plus
     0.2ex’, et le STYLE vaut ‘\normalfont\large\bfseries’.

   • Pour ‘subsubsection’ : le NIVEAU vaut 3, le RETRAIT vaut 0pt, le
     AVANT vaut ‘-3.25ex plus -1ex minus -0.2ex’, le APRÈS vaut ‘1.5ex
     plus 0.2ex’, et le STYLE vaut ‘\normalfont\normalsize\bfseries’.

   Quelques exemples suivent.  Ils vont soit au sein d’un fichier de
paquetage ou de classe, soit dans le préambule d’un document LaTeX.  Si
vous les mettez dans le préambule, elle doivent être entre une commande
‘\makeatletter’ et une commande ‘\makeatother’.  (Le message d’erreur
‘You can't use `\spacefactor' in vertical mode.’ est le plus probable
lorsque on oublie de faire cela).  *Note \makeatletter & \makeatother::.

   L’exemple ci-dessous centre les titres de section et les met en gros
caractères gras.  Il le fait avec ‘\renewcommand’ parce que les classes
standardes de LaTeX ont déjà une commande ‘\section’ de définie.  Pour
la même raison il ne définit ni un compteur ‘section’, ni les commandes
‘\thesection’ et ‘\l@section’.

     \renewcommand\section{%
       \@startsection{section}% *note NOM: \@startsection/name.
       {1}% *note NIVEAU: \@startsection/level.
       {0pt}% *note RETRAIT: \@startsection/indent.
       {-3.5ex plus -1ex minus -.2ex}% *note AVANT: \@startsection/beforeskip.
       {2.3ex plus.2ex}% *note APRÈS: \@startsection/afterskip.
       {\centering\normalfont\Large\bfseries}}% *note STYLE: \@startsection/style.

   L’exemple ci-dessous met les titres de ‘subsection’ en petites
capitales, et leur fait faire corps avec le paragraphe suivant.

     \renewcommand\subsection{%
       \@startsection{subsection}%  *note NOM: \@startsection/name.
         {2}% *note NIVEAU: \@startsection/level.
         {0em}% *note RETRAIT: \@startsection/indent.
         {-1ex plus 0.1ex minus -0.05ex}% *note AVANT: \@startsection/beforeskip.
         {-1em plus 0.2em}% *note APRÈS: \@startsection/afterskip.
         {\scshape}% *note STYLE: \@startsection/style.
       }

   Les exemples précédents redéfinissaient les commandes de titre de
rubriques existantes.  L’exemple suivant définit une nouvelle commande,
illustrant la nécessité d’un compteur et de macros pour son affichage.

     \setcounter{secnumdepth}{6}% affiche les compteurs justqu'à ce niveau
     \newcounter{subsubparagraph}[subparagraph]% compteur pour la
                                               % numérotation
     \renewcommand{\thesubsubparagraph}%
        {\thesubparagraph.\@arabic\c@subsubparagraph}% comment afficher
                                                     % la numérotation
     \newcommand{\subsubparagraph}{\@startsection
                              {subsubparagraph}%
                              {6}%
                              {0em}%
                              {\baselineskip}%
                              {0.5\baselineskip}%
                              {\normalfont\normalsize}}
     \newcommand*\l@subsubparagraph%
       {\@dottedtocline{6}{10em}{5em}}% pour la table des matières
     \newcommand{\subsubparagraphmark}[1]{}% pour les en-têtes de page

7 Des renvois
*************

Une des raisons pour numéroter des choses telles que les figures ou les
équations est d’indiquer au lecteur une référence vers elles, comme dans
« Voir la figure 3 pour plus de détails. »

   Souvent on désire écrire quelque chose du genre de ‘Voir
théorème~31’.  Mais Inclure manuellement le numéro est une mauvaise
pratique.  Au lieu de cela, il vaut mieux écrire une “étiquette” du
genre ‘\label{eq:ThmGreens}’ puis lui “faire référence” avec ‘Voir
l'équation~\ref{eq:ThmGreens}’.  LaTeX se charge de déterminer
automatiquement le numéro, de le produire en sortie, et de le changer
par la suite si besoin est.

     Cela apparaîtra avec le théorème~\ref{th:ThmGreens}. % référence déclarée en aval
     ...
     \begin{theorem} \label{th:ThmGreens}
       ...
     \end{theorem}
     ...
     Voir le théorème~\ref{th:ThmGreens} page~\pageref{th:ThmGreens}.

   LaTeX garde trace de l’information de renvoi dans un fichier avec le
même nom de base que le fichier contenant le ‘\label{...}’ mais avec une
extension ‘.aux’.  Ainsi si ‘\label’ est dans ‘calcul.tex’ alors cette
information est dans ‘calcul.aux’.  LaTeX met cette information dans ce
fichier à chaque fois qu’il rencontre un ‘\label’.

   L’effet secondaire le plus courant du paragraphe précédent se produit
lorsque votre document a une “référence déclarée en aval”, c.-à-d. un
‘\ref’ qui apparaît avant le ‘\label’ associé.  Si c’est la première
fois que vous compilez le document alors vous obtiendrez un message
‘LaTeX Warning: Label(s) may have changed. Rerun to get cross references
right.’ et dans la sortie la référence apparaîtra comme deux points
d’interrogration ‘??’ en caractères gras.  Ou, si vous modifiez le
document de telle façon que les références changent alors vous
obtiendrez le même avertissement et la sortie contiendra l’information
de référence de la fois précédente.  La solution dans les deux cas est
juste de re-compiler le document encore une fois.

   Le paquetage ‘cleveref’ élargit les possibilités de faire des renvois
de LaTeX.  Vous pouvez faire en sorte que si vous saisissez
‘\begin{thm}\label{th:Nerode}...\end{thm}’ alors ‘\cref{th:Nerode}’
produit en sortie ‘théorème 3.21’, sans que vous ayez à saisir le mot
« théorème ».

7.1 ‘\label’
============

Synopsis :

     \label{CLEF}

   Attribut un numéro de référence à CLEF.  Au sein de texte ordinaire,
‘\label{CLEF}’ attribut à CLEF le numéro de la rubrique courante.  Au
sein d’un environnement numéroté, tel que l’environnement ‘table’ ou
‘theorem’, ‘\label{CLEF}’ attribue le numéro de cet environnement à
CLEF.  On retire le numéro attribué avec la commande ‘\ref{CLEF}’ (*note
\ref::).

   Le nom CLEF peut se composer de n’importe quelle séquence de lettres,
chiffres, ou caractères de ponctuation ordinaires.  Il est sensible à la
casse — lettres capitales ou bas-de-casse.

   Pour éviter de créer accidentellement deux étiquettes avec le même
nom, l’usage est d’utiliser des étiquettes composées d’un préfixe et
d’un suffixe séparés par un caractère ‘:’ ou ‘.’.  Certains préfixes
classiquement utilisés :

‘ch’
     pour les chapitres
‘sec’
     les commandes de rubricage de niveau inférieur
‘fig’
     pour les figures
‘tab’
     pour les tables
‘eq’
     pour les équations

   Ansi, ‘\label{fig:Euler}’ est une étiquette pour une figure avec un
portrait de ce grand homme.

   Dans l’exemple ci-dessous la clef ‘sec:test’ se verra attribué le
numéro de la section courante et la clef ‘fig:test’ se verra attribué le
numéro de la figure.  Soit dit en passant, mettez les étiquettes
(‘\label’) après les légendes (‘\caption’) au sein des environnements
‘figure’ ou ‘table’.

     \section{Titre de la rubrique}
     \label{sec:test}
     Dans cette rubrique~\ref{sec:test}.
     \begin{figure}
       ...
       \caption{Texte de la légende}
       \label{fig:test}
     \end{figure}
     Voir Figure~\ref{fig:test}.

7.2 ‘\pageref{CLEF}’
====================

Synopsis :

     \pageref{CLEF}

   Produit le numéro de page de l’endroit du texte où la commande
correspondante ‘\label’{CLEF} apparaît.

   Dans cet exemple le ‘\label{eq:principale}’ est utilisé à la fois
pour le numéro de la formule et pour le numéro de page.  (Notez que les
deux références sont des référénces déclarées en aval, ainsi ce document
that the a besoin d’être compilé deux fois pour les résoudre.)

     Le résultat principal est la formule~\ref{eq:principale} de la
     page~\pageref{eq:principale}.
       ...
     \begin{equation} \label{eq:principale}
        \mathbf{P}=\mathbf{NP}
     \end{equation}

7.3 ‘\ref{CLEF}’
================

Synopsis :

     \ref{CLEF}

   Produit le numéro de la rubrique, équation, note en bas de page,
figure, ..., de la commande correspondante ‘\label’ (*note \label::).
Elle ne produit aucun texte, tel que le mot ‘Section’ ou ‘Figure’, juste
le numéro lui-même sans plus.

   Dans cet exemple, le ‘\ref{populaire}’ produit ‘2’.  Notez que ceci
est une référence déclarée en aval puisque elle est faite avant
‘\label{populaire}’.

     Le format utilisé le plus largement est à l'item numéro~\ref{populaire}.
     \begin{enumerate}
     \item Plain \TeX
     \item \label{populaire} \LaTeX
     \item Con\TeX t
     \end{enumerate}

8 Environments
**************

LaTeX fournit beaucoup d’environnements pour baliser un certain texte.
Chaque environnement commence et se termine de la même manière :

     \begin{NOMENV}
     ...
     \end{NOMENV}

8.1 ‘abstract’
==============

Synopsis :
     \begin{abstract}
     ...
     \end{abstract}

   Produit un résumé, potentiellement contenant plusieurs paragraphes.
Cet environnement n’est défini que dans les classes de document
‘article’ et ‘report’ (*note Document classes::).

   Utiliser l’exemple ci-dessous au sein de la classe ‘article’ produit
un paragraphe détaché.  L’option ‘titlepage’ de la classe de document a
pour effet que le résumé soit sur une page séparée (*note Document class
options::) ; ceci est le comportement par défaut selement dans la classe
‘report’.

     \begin{abstract}
       Nous comparons tous les récits de la proposition faits par Porter
       Alexander à Robert E Lee en lieu de l'Appomattox Court House que
       l'armée continue à combattre dans une guerre de guerilla, ce que Lee
       refusa.
     \end{abstract}

   L’exemple suivant produit un résumé en une-colonne au sein d’un
document en deux-colonne (pour plus solution plus flexible, utilisez le
paquetage ‘abstract’).

     \documentclass[twocolumn]{article}
       ...
     \begin{document}
     \title{Babe Ruth comme ancêtre culturel : une approche atavique}
     \author{Smith \\ Jones \\ Robinson\thanks{Bourse des chemins de fer.}}
     \twocolumn[
       \begin{@twocolumnfalse}
          \maketitle
          \begin{abstract}
            Ruth n'était pas seulement le Sultan du Swat, il était à lui tout
            seul l'équipe du swat.
          \end{abstract}
        \end{@twocolumnfalse}
        ]
     {   % by-hand insert a footnote at page bottom
      \renewcommand{\thefootnote}{\fnsymbol{footnote}}
      \footnotetext[1]{Merci pour tout le poisson.}
     }

8.2 ‘array’
===========

Synopsis :

     \begin{array}{PATRON}
     ENTRÉE-COL-1&ENTRÉE-COL-2 ... &ENTRÉE-COL-N}\\
     ...
     \end{array}

ou

     \begin{array}[POS]{PATRON}
     ENTRÉE-COL-1&ENTRÉE-COL-2 ... &ENTRÉE-COL-N}\\
     ...
     \end{array}

   Les tableaux mathématiques sont produits avec l’environnement
‘array’, normalement au sein d’un environnement ‘equation’ (*note
equation::).  Les entrées dans chaque colonne sont séparées avec une
esperluette (‘&’).  Les lignes sont terminées par une double
contr’oblique (*note \\::).

   L’exemple suivant affiche un tableau trois par trois.

     \begin{equation*}
       \chi(x) =
       \left|              % barre verticale en bordure
         \begin{array}{ccc}
           x-a  &-b  &-c  \\
           -d   &x-e &-f  \\
           -g   &-h  &x-i
         \end{array}
      \right|
     \end{equation*}

   L’argument obligatoire PATRON décrit le nombre de colonnes,
l’alignement en leur sein, et le formatage des régions inter-colonne.
Par exemple, ‘\begin{array}{rcl}...\end{array}’ produit trois colonnes :
la première fer à droite, la deuxième centrée, et la troisière fer à
gauche.  Voir *note tabular:: pour une description complète de PATRON,
et des autres caractéristiques communes aux deux environnements, y
compris l’argument optionnel ‘pos’.

   L’environnement ‘array’ diverge de ‘tabular’ par deux aspect.  Le
premier est que les entrée de ‘array’ sont composées en mode
mathématique, dans le texte(sauf si le PATRON spécifie la colonne avec
‘@p{...}’, ce qui a pour effet que l’entrée est composée en mode texte).
Le second est que au lieu du paramètre ‘\tablcolsep’ de ‘tabular’,
l’espace inter-colonne que LaTeX met dans un ‘array’ est contrôlé par
‘\arraycolsep’, qui spécifie la moitié de la largueur entre les
colonnes.  La valeur par défaut est ‘5pt’.

   Pour otenir des tableaux entre accolades la méthode standarde est
d’utiliser le paquetage ‘amsmath’.  Il comprend les environnements
‘pmatrix’ pour un tableau entre parenthèses ‘(...)’, ‘bmatrix’ pour un
tableau entre crochets ‘[...]’, ‘Bmatrix’ pour un tableau entre
accolades ‘{...}’, ‘vmatrix’ pour un tableau entre barres
verticales ‘|...|’, et ‘Vmatrix’ pour un tableau entre doubles barres
verticales ‘||...||’, ainsi que diverses autres contructions de
tableaux.

   Voici un exemple d’un tableau :

     \begin{equation}
       \begin{array}{cr}
         \sqrt{y}  &12.3 \\
         x^2       &3.4
       \end{array}
     \end{equation}

   L’exemple suivante nécessite ‘\usepackage{amsmath}’ dans le
preambule :

     \begin{equation}
       \begin{vmatrix}{cc}
         a  &b \\
         c  &d
       \end{vmatrix}=ad-bc
     \end{equation}

8.3 ‘center’
============

Synopsis :

     \begin{center}
     LINE1 \\
     LINE2 \\
     \end{center}

   L’environnement ‘center’ vous permet de créer un paragraphe
consistant de lignes qui sont centrées entre les marges de gauche et de
droite de la page courante.  On utilise une double contr’oblique, ‘\\’,
pour obtenir un saut de ligne (*note \\::).  Si du texte est trop long
pour entrer dans une ligne, alors LaTeX insère des sauts de ligne en
évitant de faire des césures ou de dilater ou contracter tout espace
inter-mot.

   Cet environnement insert de l’espace au-dessus et en-dessou le corps
du texte.  Voir *note \centering:: pour ne pas avoir cet espace, par
exemple au sein d’un environnement ‘figure’.

   L’exemple suivant produit trois ligne centrées.  Il y a un espace
vertical supplementaire entre les deux dernière lignes.

     \begin{center}
       Une thèse soumise en remplissant partiellement \\
       les exigences de \\[0.5ex]
       l'École pour l'Ingénierie Environnementale
     \end{center}

   Dans l’exemple suivant, selon la largeur de la ligne de la page,
LaTeX pourrait faire un saut de ligne pour la partie avant la double
contr’oblique.  SIf so, it will center each of the two lines and if not
it will center the single line.  Then LaTeX will break at the double
backslash, and will center the ending.

     \begin{center}
       Mon père considérait comme intolérable quiconque fréquentait l'église mais ne buvait pas d'alcool.\\
       J'ai grandi dans cette croyance.  --- Richard Burton
     \end{center}

   Ajouter une double contr’oblique à la fin de la ligne finale est
optionnel.  Lorsque elle est présente, cela n’ajoute pas d’espace
vertical.

   Dans un document en double-colonne le texte est centré dans une
colonne, et non sur la page entière.

8.3.1 ‘\centering’
------------------

La déclaration ‘\centering’ correspond à l’environnement ‘center’.
Cette déclaration peut être utilisée à l’intérieur d’un environnement
tel que ‘quote’ ou d’une ‘parbox’.  Ainsi, le texte d’une figure ou
d’une table peut être centré sur la page en mettant une commande
‘\centering’ au début de l’environnement de la figure ou table.

   Contrairement à l’environnement ‘center’, la commande ‘\centering’ ne
commence pas un nouveau paragraphe ; elle change simplement la façon
dont LaTeX formate les unités paragraphe.  Pour affecter le format d’une
unité paragraphe, la porté de la déclaration doit contenir une ligne à
blanc ou la commande ‘\end’ (d’un environnement tel que quote) qui finit
l’unité de paragraphe.

   Voici un exemple :

     \begin{quote}
     \centering
     first line \\
     second line \\
     \end{quote}

8.4 ‘description’
=================

Synopsis :

     \begin{description}
     \item [ÉTIQUETTE DU 1ER ARTICLE] TEXTE DU 1ER ARTICLE
     \item [ÉTIQUETTE DU 2E ARTICLE] TEXTE DU 2E ARTICLE
     ...
     \end{description}

   L’environnement ‘description’ est utilisé pour fabriquer des listes
d’articles étiquetés.  Chaque ÉTIQUETTE d’article est composée en gras,
alignée à gauche de sorte que les étiquettes longues continuent sur la
première ligne du texte de l’article.  Il doit y avoir au moins un
article ; sans cela on provoque l’erreur LaTeX ‘Something's
wrong--perhaps a missing \item’.

   Cet exemple montre l’environnement utilisé pour une séquence de
définitions.

     \begin{definition}
       \item[lama] Un prêtre.
       \item[lame] Une pièce coupante.

Les étiquettes ‘lama’ et ‘llama’ ressortent en gras avec leur bords
gauches alignés sur la marge de gauche.

   Faites démarrer la liste d’articles avec la commande ‘\item’ (*note
\item::).  Utilisez l’étiquette optionnelle, comme dans ‘\item[Point
principal]’, en effet il n’y a pas de valeur par défaut sensée.  Après
le ‘\item’ se trouve du texte optionnel pouvant contenir plusieurs
paragraphes.

   Comme les étiquettes sont en gras, si le texte de l’étiquette appelle
un changement de police effectué dans la forme à argument (voir *note
styles des polices: Font styles.) alors il ressortira en gras.  Par
exemple, si le texte de l’étiquette est en police machine à écrire comme
dans ‘\item[\texttt{texte étiquette}]’ alors il apparaîtra en tapuscrit
gras, si cela est disponible.  La méthode la plus simple pour obtenir la
police tapuscrit non grasse est d’utiliser la forme déclarative :
‘\item[{\tt texte étiquette}]’.  De la même façon, obtenez la police
romaine standarde avec ‘\item[{\rm texte étiquette}]’.

   En ce qui concerne les autres principaux environnements de liste à
étiquettes de LaTeX, voir *note itemize:: et *note enumerate::.
Contrairement à ces environnements, imbriquer les environnement
‘description’ ne change pas l’étiquette par défaut ; elle est en gras et
alignée à gauche à tous les niveaux.

   Pour plus d’information sur les paramètres de disposition de liste, y
compris les valeurs par défaut, et sur la personnalisation de la
disposition de liste, voir *note list::.  Le paquetage ‘enumitem’ est
utile pour personnaliser les listes.

   Cet exemple met les étiquettes de description en petites capitales.

     \renewcommand{\descriptionlabel}[1]{%
       {\hspace{\labelsep}\textsc{#1}}}

8.5 ‘displaymath’
=================

Synopsis :

     \begin{displaymath}
     DES MATHS
     \end{displaymath}

   L’environnement ‘displaymath’ compose le texte DES MATHS sur sa
propre ligne, centré par défaut.  L’option globale ‘fleqn’ justifie les
équations à gauche ; voir *note Document class options::.

   Aucun numéro d’équation n’est ajouté au texte de texte
‘displaymath’ ; pour obtenir un numéro d’équation, vous pouvez utiliser
l’environnement ‘equation’ (*note equation::).

   LaTeX ne fait pas de saut de ligne au sein de DES MATHS.

   Notez que le paquetage ‘amsmath’ comprend des possibilités beaucoup
plus vastes en matière d’affichage d’équations.  Par exemple, il offre
plusieurs altenatives pour effectuer des sauts de lignes au sein de
texte en mode mathématique.

   La construction ‘\[DES MATHS\]’ est un synonyme de l’environnement
‘\begin{displaymath}DES MATHS\end{displaymath}’, mais ce dernier est
plus pratique à manipuler dans le fichier source ; par exemple la
recherche d’un caractère crochet ‘]’ peut donner des faux positifs,
alors qu’il est plus probable que le mot ‘displaymath’ soit unique.

   (Digression : la construction ‘$$DES MATHS$$’ tirée du language TeX
de base est souvent utilisée à tort comme un synonyme de ‘displaymath’.
Elle n’en est pas un, et n’est pas du tout officiellement prise en
charge par LaTeX ; ‘$$’ ne prend pas en charge ‘fleqn’ (*note Document
class options::), gère l’espacement verticial environment différemment,
et n’effectue pas de vérification de cohérence).

   Le texte composé par cet exemple est centré et seul sur sa ligne.
     \begin{displaymath}
       \int_1^2 x^2\,dx=7/3
     \end{displaymath}
   De plus, le signe intégrale est plus grand que ce que la version en
ligne ‘\( \int_1^2 x^2\,dx=7/3 \)’ produit.

8.6 ‘document’
==============

L’environnement ‘document’ entoure le corps entier d’un document.  Il
est obligatoire dans tout document LaTeX.  *Note Starting and ending::.

Synopsis :

     \AtBeginDocument{CODE}

   Sauvegarde CODE et exécute le quand ‘\begin{document}’ est exécuté, à
la toute fin du préambule.  Le code est exécuté après que les tables de
sélection de police ont été réglées, ainsi la police normale du document
est la police courante.  Toutefois, le code est exécuté en tant que
faisant partie du préambule, c’est pourquoi on ne peut pas composer du
texte avec.

   On peut utiliser cette commande plus d’une fois ; les lignes de code
successives sont exécutée dans l’ordre de passage à la commande.

Synopsis :

     \AtEndDocument{CODE}

   Sauvegarde CODE et l’exécute vers la fin du document.  Plus
précisément, il est exécuté lorsque ‘\end{document}’ est exécuté, avant
que la dernière page ne soit terminée et avant que tous environnements
flottant restants soient traités.  Si on désire d’une partie du code
soit exécuté après ces deux traitements, alors il suffit d’inclure un
‘\clearpage’ à l’endroit approprié du CODE.

   On peut utiliser cette commande plus d’une fois ; les lignes de code
successives sont exécutée dans l’ordre de passage à la commande.

8.7 ‘enumerate’
===============

Synopsis :

     \begin{enumerate}
     \item ARTICLE1
     \item ARTICLE2
     ...
     \end{enumerate}

   L’environnement ‘enumerate’ produit une liste numérotée d’articles.
Le format du numéro en étiquette dépend de si cet environnement est
imbriqué dans un autre ; voir plus bas.

   La liste consiste en au moins un article.  L’absence d’article cause
l’erreur LaTeX ‘Something's wrong--perhaps a missing \item’.  Chaque
article est produit avec la commande ‘\item’.

   Cet exemple fait la liste des deux premiers courreurs à l’arrivée du
marathon olympique de 1908 :

     \begin{enumerate}
      \item Johnny Hayes (USA)
      \item Charles Hefferon (RSA)
     \end{enumerate}

   Les énumerations peuvent être imbriquées les unes dans les autres,
jusqu’à une profondeur de quatre niveaux.  Elles peuvent aussi être
imbriquées au sein d’autres environnements fabriquant des paragraphes,
tels que ‘itemize’ (*note itemize::) et ‘description’ (*note
description::).  Le format de l’étiquette produite dépend du niveau
d’imbrication de la liste.  Voici les valeurs par défaut de LaTeX pour
le format à chaque niveau d’imbrication (où 1 est le niveau le plus
externe) :

  1. numéro arabe suivi d’un point : ‘1.’, ‘2.’, ...
  2. lettre en bas de casse et entre parenthèse : ‘(a)’, ‘(b)’ ...
  3. numéro romain en bas de casse suivi d’un point : ‘i.’, ‘ii.’, ...
  4. lettre capitale suivie d’un point : ‘A.’, ‘B.’, ...

   L’environnement ‘enumerate’ utilise les compteurs ‘\enumi’, ...,
‘\enumiv’ (*note Counters::).  Si vous utilisez l’argument optionnel
d’‘\item’ alors le compteur n’est pas incrementé pour cet article (*note
\item::).

   L’environnement ‘enumerate’ utilise les commandes de ‘\labelenumi’
jusqu’à ‘\labelenumiv’ pour produire l’étiquette par défaut.  Ainsi,
vous pouvez utiliser ‘\renewcommand’ pour chancher le format des
étiquettes (*note \newcommand & \renewcommand::).  Par exemple, cette
liste de premier niveau va être étiquettée avec des lettres capitales,
en gras, non suivies point :

     \renewcommand{\labelenumi}{\textbf{\Alph{enumi}}}
     \begin{enumerate}
       \item eI
       \item bi:
       \item si:
     \end{enumerate}

   Pour une liste des commandes comme ‘\Alph’ utilisables pour formatter
le compteur d’étiquette voir *note \alph \Alph \arabic \roman \Roman
\fnsymbol::.

   Pour plus ample information sur la personalisation de la forme voir
*note list::.  De même, le paquetage ‘enumitem’ est utile pour cela.

8.8 ‘eqnarray’
==============

L’environnement ‘eqnarray’ est obsolète.  Il a des maladresses parmi
lesquelles l’espacement qui est incohérent avec d’autres éléments
mathématiques.  (Voir l’artice « Évitez eqnarray ! » de Lars Madsen
(<http://tug.org/TUGboat/tb33-1/tb103madsen.pdf>).  Les nouveaux
documents devraient inclure le paquetage ‘amsmath’ et utiliser les
environnements d’affichage mathématique que celui-ci fournit, tels que
‘align’.  On inclut une description uniquement pour être complet et pour
pouvoir travailler avec d’anciens documents.

   Synopsis :

     \begin{eqnarray} (ou ‘eqnarray*’)
     FORMULA1 \\
     FORMULA2 \\
     ...
     \end{eqnarray}

   L’environnement ‘eqnarray’ est utilisé pour afficher une séquence
d’équations ou d’inégalités.  Il est similaire à un environnement
‘array’ à trois colonnes, avec des lignes consecutives séparées par ‘\\’
et des articles consécutifs au sein d’une ligne séparé par une
esperluète ‘&’.

   ‘\\*’ peut aussi être utilisé pour séparer les équations, avec sa
signification normale de ne pas autoriser un saut de page à cette ligne.

   Un numéro d’équation est placé sur chaque ligne à moins que cette
ligne ait une commande ‘\nonumber’.  Alternativement, la forme étoilé
(en ‘*’) de l’environnement (‘\begin{eqnarray*} ... \end{eqnarray*}’)
omet la numérotation des équations entièrement, tout en faisant par
ailleurs la même chose qu’‘eqnarray’.

   La commande ‘\lefteqn’ est utilisée pour couper les longues formules
sur plusieurs lignes.  Elle compose son argument en hors texte et le
justifie à gauche dans une boîte de largeur nulle.

8.9 ‘equation’
==============

Synopsis :

     \begin{equation}
     TEXTE MATHÉMATIQUE
     \end{equation}

   Même chose que l’environnement ‘displaymath’ (*note displaymath::) à
ceci près que LaTeX place un numéro d’équation aligné sur la marge de
droite.  Le numéro d’équation est généré en utilisant le compteur
‘equation’.

   Il ne faut aucune ligne vide entre ‘\begin{equation}’ et
‘\begin{equation}’, sinon LaTeX dit qu’il manque une signe dollar.

   Le paquetage ‘amsmath’ comprend des moyens étendus pour l’affichage
d’équations.  Les nouveau documents devrait inclure ce paquetage.

8.10 ‘figure’
=============

Synopsis :

     \begin{figure}[PLACEMENT]
       CORPSFIGURE
       \caption[TITRELDF]{TEXTE}  % optionnel
       \label{ÉTIQUETTE}          % optionnel
     \end{figure}

ou :

     \begin{figure*}[PLACEMENT]
       CORPSFIGURE
       \caption[TITRELDF]{TEXTE}  % optionnel
       \label{ÉTIQUETTE}          % optionnel
     \end{figure*}

   Les figures sont du matériel qui ne fait pas partie du texte normal.
Un exemple est du matériel qu’on ne peut pas avoir segmenté entre deux
pages, comme un graphique.  À cause de cela, LaTeX ne compose pas les
figures en séquence avec le texte normal, mais au lieu de cela les fait
« flotter » jusqu’à un endroit convenable, tel que le haut de la page
suivante (*note Floats::).

   Le CORPSFIGURE peut consister de graphiques importés (*note
Graphics::), de texte, de commandes LaTeX, etc.  Il est composé une
‘parbox’ de largueur ‘\textwidth’.

   Pour les valeurs possibles de PLACEMENT sont ‘h’ pour « ici » (‘here’
en anglais), ‘t’ pour « en haut » (‘top’), ‘b’ pour « en bas », et ‘p’
pour sur un page séparée de flottants.  Pour l’effet de ces options sur
l’algorithme de placement des flottants, voir *note Floats::.

   La version étoilée ‘figure*’ est utilisée quand un document est en
mode double-colonne (*note \twocolumn::).  elle produit une figure qui
s’étend sur les deux colonnes, au sommet de la page.  Pour ajouter la
possibiltié de la placer à un bas de page voir la discussion de
PLACEMENT ‘b’ dans *note Floats::.

   L’étiquette est optionnelle ; elle est utilisée pour les renvois
(*note Cross references::).  La commande ‘\caption’ spécifie la légende
TEXTE pour la figure.  La légende est numérotée par défaut.  Si TITRELDF
est présent, il est utilisé dans la liste des figures au lieu de TEXTE
(*note Table of contents etc.::).

   Cet exemple fabrique une figure à partir d’un graphique.  Il
nécessite l’un des paquetages ‘graphics’ ou ‘graphicx’.  Le graphique,
avec sa légende, est placé au sommet d’une page ou, s’il est rejeté à la
fin du document, sur une page de flottants.

     \begin{figure}[t]
       \centering
       \includegraphics[width=0.5\textwidth]{CTANlion.png}
       \caption{The CTAN lion, by Duane Bibby}
     \end{figure}

8.11 ‘filecontents’: Écrire un fichier externe
==============================================

Synopsis :

     \begin{filecontents}[OPTION]{NOMFICHIER}
     TEXTE
     \end{filecontents}

ou

     \begin{filecontents*}[OPTION]{NOMFICHIER}
     TEXTE
     \end{filecontents*}

   Crée un fichier nommé NOMFICHIER dans le répertoire courant (ou dans
le répertoire de sortie s’il a été spécifié ; *note output directory::)
et y écrit TEXTE.  Par défaut un fichier déjà existant n’est pas écrasé.

   La version non étoilée de l’environnement ‘filecontent’ préfixe le
contenu du ficher créé d’une en-tête de commentaires TeX ; voir
l’exemple ci-dessous.  La version étoilée ‘filecontent*’ n’inclut par
l’en-tête.

   Les options possibles sont :

‘force’
‘overwrite’
     Écrase le fichier s’il existe.

‘noheader’
     Omet l’en-tête.  Équivalent à utiliser ‘filecontents*’.

‘nosearch’
     Vérifie uniquement si un fichier existe dans le répertoire courant
     (et le répertoire de sortie, s’il a été spécifié), non dans le
     chemin complet de recherche.

   Ces options ont été ajoutées à la parution 2019 de LaTeX.

   Cet environnement peut être utilisé n’importe où dans le préambule,
bien qu’il apparaisse souvent avant la commande ‘\documentclass’.  Elle
est classiquement utilisée pour créer un fichier ‘.bib’ ou d’autre
fichier de données similaire à partir du document source principale, de
sorte à rendre le fichier source autonome.  De même, il peut être
utilisé pour créer un fichier personnalisé de style ou de classe,
rendant ainsi encore le source autonome.

   Par exemple, ce document :

     \documentclass{article}
     \begin{filecontents}{JH.sty}
     \newcommand{\monnom}{Jim Hef{}feron}
     \end{filecontents}
     \usepackage{JH}
     \begin{document}
     Un article de \monnom.
     \end{document}

   produit ce fichier ‘JH.sty’ :

     %% LaTeX2e file `JH.sty'
     %% generated by the `filecontents' environment
     %% from source `test' on 2015/10/12.
     %%
     \newcommand{\monnom}{Jim Hef{}feron}

8.12 ‘flushleft’
================

Synopsis :

     \begin{flushleft}
     LIGNE1 \\
     LIGNE2 \\
     ...
     \end{flushleft}

   L’environnement ‘flushleft’ vous permet de créer un paragraphe ferré
à gauche, c’est à dire consistant en lignes qui sont alignées sur la
marge de gauche et en dentelures à droite comme un drapeau dont la hampe
(fer du composeur) serait à gauche et les franges à droite.  Si vous
avez des lignes qui sont trop longues alors LaTeX insère des sauts de
ligne sans faire de césure ni dilater ou contracter les espaces
inter-mot.  Pour forcer un saut de ligne on utilise une double
contr’oblique, ‘\\’.  Pour la forme déclarative, voir *note
\raggedright::.

   L’exemple suivant crée une boîte de texte qui fait au plus 7,5cm de
large, et dont le texte est fer à gauche et drapeau à droite.

     \noindent\begin{minipage}{7.5cm}
     \begin{flushleft}
       Une longue phrase que \LaTeX{} coupe à l'endroit approprié. \\
       Et, une nouvelle ligne forcée par la double contr'oblique.
     \end{flushleft}
     \end{minipage}

8.12.1 ‘\raggedright’
---------------------

Synopsis :

     {\raggedright  ... }

ou :

     \begin{ENVIRONNEMENT} \raggedright
       ...
     \end{ENVIRONNEMENT}

   Une déclaration qui a pour effet que les lignes sont ferrées sur la
marge de gauche et drapeau sur la droite, c-à-d. que les mots sont
alignés sur la gauche comme sur le fer du composeur, et en dentelure
comme les frange d’un drapeau à droite.  Elle peut être utilisée au sein
d’un ENVIRONNEMENT tel que ‘quote’ ou d’une ‘parbox’.  Pour la forme par
environnement voir *note flushleft::.

   Contrairement à l’environnement ‘flushleft’, la commande
‘\raggedright’ ne démarre pas un nouveau paragraphe ; elle change
seulement la façon dont LaTeX formatte les unités de paragraphe.  Pour
affecter le format d’une unité de paragraphe, la portée de la
déclaration doit contenir la ligne à blanc ou la commande ‘\end’ qui
termine l’unité de paragraphe.

   Dans l’exemple ci-après ‘\raggedright’ dans la deuxième colonne
empèche LaTeX de faire une composition très maladroite pour faire
rentrer le texte dans une colonne étroite.  Notez que ‘\raggedright’ est
au sein d’accolades ‘{...}’ pour borner son effet.

     \begin{tabular}{rp{5cm}}
       Équipe alpha  &{\raggedright Cette équipe fait le travail réel.} \\
       Équipe beta   &{\raggedright Cette équipe assure que le système de refroidissement
                                     ne manque jamais d'eau.} \\
     \end{tabular}

8.13 ‘flushright’
=================

     \begin{flushright}
       LIGNE1 \\
       LIGNE2 \\
     ...
     \end{flushright}

   L’environnement ‘flushright’ vous permet de créer un paragraphe ferré
à droite et drapeau gauche, c.-à-d. consistant de lignes qui sont
alignées sur la marge de droite (fer à droite) et en dentelures
(drapeau) sur la marge de gauche.  Si vous avez des lignes qui sont trop
longues pour entrer entre les marges, alors LaTeX insère des sauts de
ligne sans faire de césure ni dilater ou contracter les espaces
inter-mot.  Pour forcer un saut de ligne on utilise une double
contr’oblique, ‘\\’.  Pour la forme déclarative, voir *note
\raggedleft::.

   Pour un exemple en relation avec cet environnement, voir *note
flushleft::, où il suffit mutatis mutandis de changer ‘flushright’ en
‘flushleft’.

8.13.1 ‘\raggedleft’
--------------------

Synopsis :

     {\raggedleft  ... }

ou

     \begin{ENVIRONNEMENT} \raggedleft
       ...
     \end{ENVIRONNEMENT}

   Une déclaration qui a pour effet que les lignes sont ferrées sur la
marge de droite et drapeau sur la gauche, c-à-d. que les mots sont
alignés sur la droite comme sur le fer du composeur, et en dentelure
comme les frange d’un drapeau à gauche.  Elle peut être utilisée au sein
d’un ENVIRONNEMENT tel que ‘quote’ ou d’une ‘parbox’.  Pour la forme par
environnement voir *note flushleft::.

   Contrairement à l’environnement ‘flushright’, la commande
‘\raggedleft’ ne démarre pas un nouveau paragraphe ; elle change
seulement la façon dont LaTeX formatte les unités de paragraphe.  Pour
affecter le format d’une unité de paragraphe, la portée de la
déclaration doit contenir une ligne à blanc ou la commande ‘\end’ qui
termine l’unité de paragraphe.

   Pour un exemple en relation avec cet environnement, voir *note
\raggedright::, où il suffit mutatis mutandis de changer ‘\raggedright’
en ‘\raggedleft’.

8.14 ‘itemize’
==============

Synopsis :

     \begin{itemize}
       \item[ÉTIQUETTE OPTIONNELLE DU 1ER ARTICLE] TEXTE DU 1ER ARTICLE
       \item[ÉTIQUETTE OPTIONNELLE DU 2E ARTICLE] TEXTE DU 2E ARTICLE
        ...
     \end{itemize}

   L’environnement ‘itemize’ produit une “liste non ordonnée”, qu’on
appelle parfois liste à puces.  Il doit y avoir au moins une commande
‘\item’ au sein de l’environnement ; sans quoi LaTeX produit l’erreur
‘Something's wrong--perhaps a missing \item’.

   L’exemple suivant donne une liste à deux articles.

     \begin{itemize}
      \item Esquisse au crayon et aquarelle par Cassandra
      \item Portrait Rice
     \end{itemize}

Par défaut — sans charger par ex. le paquetage ‘babel’ avec une autre
langue que USenglish — dans une liste au premier niveau d’imbrication
l’étiquette est rendue par une puce, •.  Le format des étiquettes dépend
du niveau d’imbrication ; voir plus bas.

   On démarre les article de liste avec la commande ‘\item’ (*note
\item::).  Si vous passez à ‘\item’ un argument optionnel en le faisant
suivre de crochets, comme dans ‘\item[ÉTIQUETTE OPTIONNELLE]’, alors par
défaut ÉTIQUETTE OPTIONNELLE apparaît en gras et aligné à droite, de
sorte qu’elle peut s’étendre dans la marge de gauche.  Pour des
étiquettes alignées à gauche voir l’environnement *note description::.
À la suite ‘\item’ se trouve le texte que l’article qui peut être vide
ou contenir plusieurs paragraphes.

   Les listes non ordonnées peuvent être imbriquées l’une dans l’autre,
sur jusqu’à quatre niveaux de profondeur.  Elles peuvent aussi être
imbriquées avec d’autre environnements fabriquant des paragraphes, comme
‘enumerate’ (*note enumerate::).

   L’environnement ‘itemize’ utilise les commandes de ‘\labelitemi’
jusqu’à ‘\labelitemiv’ pour produire les étiquettes par défaut (notez la
convention que le nombre romain en bas de casse à la fin du nom de la
commande indique le niveau d’imbrication).  Voici les marques de chaque
niveau :

  1. • (puce, issue de ‘\textbullet’)
  2. -- (tiret demi-cadratin gras, issu du
     ‘\normalfont\bfseries\textendash’)
  3. * (asterisque, issu de ‘\textasteriskcentered’)
  4. .  (point centré verticalement, rendu ici comme un point final,
     issu de ‘\textperiodcentered’)

   Si vous utilisez le paquetage ‘babel’ avec la langue ‘french’, alors
il y a des tirets pour tous les niveaux comme c’est l’habitude des
Français.

   Utilisez ‘\renewcommand’ pour changer les étiquettes.  Par exemple,
pour que le premier niveau utilise des losanges :

     \renewcommand{\labelitemi}{$\diamond$}

   Les paramètres de ‘\leftmargini’ jusqu’à ‘\leftmarginvi’ définissent
la distance entre la marge de gauche de l’environnement surjacent et la
marge de gauche de la liste.  (On utilise aussi la convention de nommage
de la commande avec un nombre romain en bas de casse à la fin pour
désigner le niveau d’imbrication).  Les valeurs par défaut sont :
‘2.5em’ pour le niveau 1 (‘2em’ en mode deux-colonnes), ‘2.2em’ pour le
niveau 2, ‘1.87em’ pour le niveau 3 et ‘1.7em’ pour le niveau 4, avec
des valeurs plus petites pour les niveaux plus profondément imbriqués.

   Pour les autres environnements majeurs de listes à étiquettes de
LaTeX, voir *note description:: et *note enumerate::.  Les
environnements ‘itemize’, ‘enumerate’ et ‘description’ utilisent les
mêmes paramètres de contrôle de la disposition des listes.  Pour leur
description, y compris les valeurs par défaut, ainsi que la
personalisaton de la disposition, voir *note list::.  Le paquetage
‘enumitem’ est utile pour personaliser les listes.

   Dans cet exemple on réduit grandement l’espace de marge pour la liste
à puces la plus externe :

     \setlength{\leftmargini}{1.25em} % valeur par défaut 2.5em

   En particulier pour les listes avec des articles courts, il peut être
désirable d’élider l’espace entre les articles.  Voici un exemple
définissant un environnement ‘itemize*’ sans espacement supplémentaire
entre les articles, ni entre les paragraphes au sein d’un seul article
(‘\parskip’ n’est pas spécifique aux listes, *note \parindent &
\parskip::):

     \newenvironment{itemize*}%
       {\begin{itemize}%
         \setlength{\itemsep}{0pt}%
         \setlength{\parsep}{0pt}}%
         \setlength{\parskip}{0pt}}%
       {\end{itemize}}

8.15 environnement ‘letter’: écrire des lettres postales
========================================================

Cet environnement est utilisé pour créer des lettres.  *Note Letters::.

8.16 ‘list’
===========

Synopsis :

     \begin{list}{ÉTIQUETAGE}{ESPACEMENT}
     \item[ÉTIQUETTE OPTIONNELLE DU PREMIER ARTICLE] texte du premier article
     \item[ÉTIQUETTE OPTIONNELLE DU DEUXIÈME ARTICLE] texte du deuxième aticle
     ...
     \end{list}

   L’environnement ‘list’ est un environnement générique qui est utilisé
pour construire des listes plus spécialisées.  On l’utilise la plupart
du temps pour créer des listes via les environnements ‘description’,
‘enumerate’, et ‘itemize’ (*note description::, *note enumerate::, et
*note itemize::).  Par ailleurs, beaucoup d’environnements standards de
LaTeX qui visuellement ne sont pas des listes sont construits en
utilisant ‘list’, ceci comprend ‘quotation’, ‘quote’, ‘center’,
‘verbatim’, et bien d’autres (*note quotation & quote::, *note center::,
*note flushright::).

   Ici, on décrit l’environnement ‘list’ en définissant un nouvel
environnement personnalisé.

     \newcounter{compteurlistenommage}  % numérotes les articles
     \newenvironment{nommage}
       {\begin{list}
          {Article~\Roman{compteurlistenommage}.} % argument d'étiquetage
          {\usecounter{compteurlistenommage}   % argument d'espacement
           \setlength{\leftmargin}{3.5em}} % ...suite argument d'espacement
       }
       {\end{list}}

     \begin{nommage}
       \item Apparaît comme « Article~I. »
       \item[Étiquette spéciale.] Apparaît comme « Étiquette spéciale. »
       \item Apparaît comme « Article~II. »
     \end{nommage}

   L’argument obligatoire ÉTIQUETAGE, qui est le premier argument de
l’environnement ‘list’, spécifie comment les articles doivent être
étiquetés par défaut.  Il peut contenir du texte et des commandes LaTeX,
comme dans l’exemple précédent où il contient à la fois ‘Article’ et
‘\Roman{...}’.  LaTeX forme l’étiquette en mettant l’argument ÉTIQUETAGE
dans une boîte de largeur ‘\labeidth’.  Si l’étiquette est plus large
que cela, le matériel supplémentaire s’étend sur la droite.  Lorsque
vous fabriquez une instance de ‘list’ vous pouvez l’emporter sur
l’étiquetage par défaut en donnant à ‘\item’ un argument optionnel avec
des crochets et le texte, comme dans l’exemple précédent
‘\item[Étiquette spéciale.]’ ; *note \item::.

   Le second argument obligatoire ESPACEMENT prend une liste de
commandes.  L’une de celle qu’on y retrouve est
‘\usecounter{NOMCOMPTEUR}’ (*note \usecounter::).  Utilisez la pour dire
à LaTeX de numéroter les article en utilisant le compteur fourni.  Ce
compteur est remis à zéro chaque fois que LaTeX entre dans
l’environnement, et le compteiur est incrémenté par un chaque fois que
LaTeX rencontre une commande ‘\item’.

   Une autre commande qu’on retrouve dans ESPACEMENT est ‘\makelabel’,
pour construire la boîte de l’étiquette.  Par défaut elle positionne le
contenu fer à droite.  Elle prend un argument, l’étiquette.  Elle
compose sont contenu en mode LR. Un exemple de changement de sa
définition consiste dans l’exemple précédent ‘nommage’ à ajouter avant
la définition de l’environnement
‘\newcommand{\namedmakelabel}[1]{\textsc{#1}}’, et entre la commande
‘\setlength’ et la parenthèse cloturant l’argument ESPACMEENT à ajouter
aussi ‘\let\makelabel\namedmakelabel’.  Ceci composera les étiquette en
petites capitales.  De même, en remplaçant cette seconde ligne de code
par ‘\let\makelabel\fbox’ on met les étiquettes dans une boîte encadrée.
Ci-après voici un autre exemple de la commande ‘\makelabel’, dans la
définition de l’énvironnement ‘etiquetterouge’.

   De même on trouve souvent au sein de ESPACEMENT des commandes pour
redéfinir l’espacement de la liste.  Ci dessous on listes les paramètres
d’espacement et leur valeurs par défaut.  (Il se peut que les valeurs
par défaut pour les environnements dérivés tels que ‘itemize’ soient
différentes des valeurs exposées ici).  Voir aussi la figure qui suit la
liste.  Chaque paramètre est une longueur (*note Lengths::).  Les
espaces verticaux sont d’ordinaire des longueurs élastiques, avec une
composante en ‘plus’ ou en ‘minus’, pour donner à TeX de la flexibilité
dans le réglage de la page.  On change chaque paramètre avec une
commande du genre de as ‘\setlength{itemsep}{2pt plus1pt minus1pt}’.
Pour obtenir certains effets, ces longueurs doivent être mise à zéro, ou
à une valeur négative.

‘\itemindent’
     Espace supplémentaire horizontal de renfoncement, ajouté à de
     ‘leftmargin’, de la première ligne de chaque article.  Sa valeur
     par défaut est ‘0pt’.

‘\itemsep’
     Espace vertical entre les articles, ajouté à ‘\parsep’.  Les
     valeurs par défaut pour les trois premiers niveaux dans les classes
     de LaTeX ‘article’, ‘book’, et ‘report’ à la taille de 10 point
     sont : ‘4pt plus2pt minus1pt’, ‘\parsep’ (c-à-d. ‘2pt plus1pt
     minus1pt’), et ‘\topsep’ (c-à-d. ‘2pt plus1pt minus1pt’).  Les
     valeurs par défaut à 11 points sont : ‘4.5pt plus2pt minus1pt’,
     ‘\parsep’ (c-à-d. ‘2pt plus1pt minus1pt’), et ‘\topsep’ (c-à-d.
     ‘2pt plus1pt minus1pt’).  Les valeurs par défaut à 12 points sont :
     ‘5pt plus2.5pt minus1pt’, ‘\parsep’ (c-à-d. ‘2.5pt plus1pt
     minus1pt’), et ‘\topsep’ (c-à-d. ‘2.5pt plus1pt minus1pt’).

‘\labelsep’
     Espace horizontal entre l’étiquette et le texte d’un article.  La
     valeur par défaut pour les classes LaTeX ‘article’, ‘book’, et
     ‘report’ est de ‘0.5em’.

‘\labelwidth’
     Largueur horizontale.  La boîte contenant l’étiquette est
     nominalement de cette largeur.  Si ‘\makelabel’ renvoie un texte
     qui est plus larget que cela, alors le renfoncement de la première
     ligne de l’article sera augmenté pour créer l’espace nécessaire à
     ce matériel supplémentaire.  Si ‘\makelabel’ renvoie un texte de
     largeur inférieur ou égale à ‘\labelwidth’ alors le comportement
     par défaut de LaTeX est que l’étiquette est composé fer à droite
     dans une boîte de cette largeur.

     Le bord de gauche de la boîte de l’étiquette est à
     ‘\leftmargin’+‘\itemindent’-‘\labelsep’-‘\labelwidth’ de la marge
     de gauche de l’environnement enveloppant.

     La valeur par défaut pour les classes LaTeX ‘article’, ‘book’, et
     ‘report’ pour les listes de premier niveau vaut
     ‘\leftmargini’-‘\labelsep’, (c-à-d. ‘2em’ en mode à une colonne et
     ‘1.5em’ en mode à deux colonnes).  Au deuxième niveau, c’est
     ‘\leftmarginii’-‘\labelsep’, et au troisième niveau
     ‘\leftmarginiii’-‘\labelsep’.  Ces définitions ont pour effet que
     le bord de gauche de l’étiquette coïncide avec la marge de gauche
     de l’environnement enveloppant.

     r
‘\leftmargin’
     Espace horizontal entre la marge de gauche de l’environnement
     envelopant (ou la marge de gauche de la page pour une liste de
     premier niveau), et la marge de gauche de cette liste.  Doit être
     positif ou nul.

     Dans les classes de document LaTeX standardes, ce paramètre est
     réglé à la valeur ‘\leftmargini’ pour une liste de premier niveau,
     alors que pour une liste de deuxième niveau, c’est à dire imbriquée
     dans une liste de premier niveau, il est réglé à ‘\leftmarginii’.
     Pour les listes aux niveaux d’imbrication suivants les valeurs de
     ‘\leftmarginiii’ à ‘\leftmarginvi’ sont utilisées.  (Imbriquer des
     liste au delà de cinq niveaux produit le message d’erreur ‘Too
     deeply nested’).

     Les valeurs par défaut des trois premiers niveaux dans les classes
     LaTeX ‘article’, ‘book’, et ‘report’ sont les suivantes :
     ‘\leftmargini’ vaut ‘2.5em’ (ou ‘2em’ en mode à deux colonnes),
     ‘\leftmarginii’ vaut ‘2.2em’, et ‘\leftmarginiii’ vaut ‘1.87em’.

‘\listparindent’
     Espace horizontal de renfoncement supplémentaire, en plus de
     ‘\leftmargin’, pour le deuxième paragraphes et les suivants au sein
     d’un article de liste.  A negative value makes this an “outdent”.
     Its default value is ‘0pt’.

‘\parsep’
     Espace vertical entre les paragraphe d’un article.  Les valeurs par
     défaut pour les trois premierss niveaux dans les classes LaTeX
     ‘article’, ‘book’ et ‘report’ à la taille de 10 point sont : ‘4pt
     plus2pt minus1pt’, ‘2pt plus1pt minus1pt’, and ‘0pt’.  La valeurs
     par défaut à la taille de 11 point sont : ‘4.5pt plus2pt minus1pt’,
     ‘2pt plus1pt minus1pt’, et ‘0pt’.  La valeurs par défaut à la
     taille de 12 point sont : ‘5pt plus2.5pt minus1pt’, ‘2.5pt plus1pt
     minus1pt’, et ‘0pt’.

‘\partopsep’
     Espace vertical ajouté, en plus de ‘\topsep’+‘\parskip’, en haut et
     en bas de l’environnement tout entier lorsque la liste considérée
     est précédée d’une ligne à blanc.  (Une ligne à blanc dans le
     source LaTeX avant la liste change l’espacement à la fois en haut
     et en bas de la liste ; que la ligne suivant la liste soit à blanc
     est sans importance).

     Les valeurs par défaut pour les trois premiers niveaux dans les
     classes LaTeX ‘article’, ‘book’, anet ‘report’ à la taille de point
     sont : ‘2pt plus1 minus1pt’, ‘2pt plus1pt minus1pt’, et ‘1pt
     plus0pt minus1pt’.  Les valeurs par défaut à la taille de 11 point
     sont : ‘3pt plus1pt minus1pt’, ‘3pt plus1pt minus1pt’, et ‘1pt
     plus0pt minus1pt’).  Les valeurs par défaut à la taille de 12 point
     sont : ‘3pt plus2pt minus3pt’, ‘3pt plus2pt minus2pt’, et ‘1pt
     plus0pt minus1pt’.

‘\rightmargin’

     Espace horizontal entre la marge de droite de la liste et la marge
     de droite de l’environnement l’englobant.  Horizontal space between
     the right margin of the list and the right margin of the enclosing
     environment.  Its default value is ‘0pt’.  It must be non-negative.

‘\topsep’
     Espace vertical ajouté aussi bien au haut qu’au bas de la lise, en
     plus de ‘\parskip’ (*note \parindent & \parskip::).  Les valeurs
     par défaut pour les trois premiers niveaux dans les classes LaTeX
     ‘book’, anet ‘report’ à la taille de 10 point sont : ‘8pt plus2pt
     minus4pt’, ‘4pt plus2pt minus1pt’, and ‘2pt plus1pt minus1pt’.  Les
     valeurs par défaut à la taille de 11 point sont : ‘9pt plus3pt
     minus5pt’, ‘4.5pt plus2pt minus1pt’, and ‘2pt plus1pt minus1pt’.
     Les valeurs par défaut à la taille de 12 point sont : ‘10pt plus4pt
     minus6pt’, ‘5pt plus2.5pt minus1pt’, and ‘2.5pt plus1pt minus1pt’.

   La figure suivante illustre les distances horizontales et verticales.

.......................................................................
..............Surrounding environment, preceding material.............. -
                                                                        | v0 
 |---h0--|-h1-|                                                         |
 ..Label..    .....First item.....................................      -
      ............................................................
      ............................................................      -
                                                                        | v1
           ........First item, second paragraph ..................      -
      |-h2-|                                                            | v2
                                                                        |
 ..Label..    .....Second item....................................      -
      ............................................................
      ............................................................      -
|-h3--|-h4-|                                                     |-h5-| |v3
                                                                        |
..............Surrounding environment, following material.............. -
.......................................................................
   Les longueurs illustrées sont listées ci-dessous.  La relation clef
est que le bord droit du crochet pour H1 est à la même position
horizontale que le bord droit du crochet pour H4, de sorte que le bord
de gauche de la boîte de l’étiquette est à H3+H4-(H0+H1).

V0
     vaut ‘\topsep’ + ‘\parskip’ si l’environnement ‘list’ ne commence
     pas un nouveau paragraphe, et ‘\topsep’+‘\parskip’+‘\partopsep’
     sinon

V1
     ‘\parsep’

V2
     ‘\itemsep’+‘\parsep’

V3
     Même valeur que V0.  (Cet espace est affecté selon qu’une ligne à
     blanc apparaît dans le source au dessus de l’environnemnt ; la
     présence d’une ligne à blanc au dessous de l’environnement est sans
     effet.)

H0
     ‘\labelwidth’

H1
     ‘\labelsep’

H2
     ‘\listparindent’

H3
     ‘\leftmargin’

H4
     ‘\itemindent’

H5
     ‘\rightmargin’

   Les marges de gauche et de droite de la liste, affichées ci-dessus
comme H3 et H5, sont exprimées relativement à celles fournies par
l’environnement englobant, ou par rapport aux marges de la page pour une
liste au niveau le plus externe.  La largeur de ligne utilisée pour la
composition des articles de la liste est ‘\linewidth’ (*note Page layout
parameters::).  Par exemple, réglez la marge de gauche de la liste à un
quart de la distance entre les marges de gauche et de droite de
l’environnement englobant avec
‘\setlength{\leftmargin}{0.25\linewidth}’.

   Les sauts de page au sein d’une structure de liste sont contrôlés par
les paramètres ci-dessous.  Pour chacun d’eu, la valeur par défaut de
LaTeX est ‘-\@lowpenalty’, c-à-d. ‘-51’.  Comme c’est négatif, cela
encourage d’une certaine façon un saut de page à tout endroit.  On peut
changer cela avec un réglage de, par ex., ‘\@beginparpenalty=9999’ ; une
valeur de 10000 interdit une saut de page.

‘\@beginparpenalty’
     La pénalité de saut de page pour un saut avanrt la liste (par
     défaut ‘-51’).

‘\@itempenalty’
     La pénalité pour un saut de page avant un article de liste (par
     défaut ‘-51’).

‘\@endparpenalty’
     La pénalité pour un saut de page après une liste (par défaut
     ‘-51’).

   Le paquetage ‘enumitem’ est utile pour personaliser les listes.

   Dans l’exemple suivant les étiquettes sont en rouge.  Elles sont
numérotées, et le bord gauche des étiquettes est aligné avec le bord
gauche du texte des articles.  *Note \usecounter::.

     \usepackage{color}
     \newcounter{cnt}
     \newcommand{\makeredlabel}[1]{\textcolor{red}{#1.}}
     \newenvironment{redlabel}
       {\begin{list}
         {\arabic{cnt}}
         {\usecounter{cnt}
          \setlength{\labelwidth}{0em}
          \setlength{\labelsep}{0.5em}
          \setlength{\leftmargin}{1.5em}
          \setlength{\itemindent}{0.5em} % vaut \labelwidth+\labelsep
          \let\makelabel=\makeredlabel
         }
       }
     {\end{list}}

8.16.1 ‘\item’: Une entrée dans une liste
-----------------------------------------

Synopsis :

     \item texte de l'article

ou
     \item[ÉTIQUETTE OPTIONNELLE] texte de l'article

   Un entrée dans une liste.  Les entrées sont préfixées par une
étiquette, dont la valeur par défaut dépend du type de liste.

   Parce que l’argument optionnel ÉTIQUETTE OPTIONNELLE est entouré de
crochets (‘[’ et ‘]’), pour utiliser des crochets au sein de l’argument
optionnel vous devez les cacher entre accolades, comme dans
‘\item[Crochet fermant, {]}]’.  De même, pour utiliser un crochet
ouvrant comme premier caractère du texte d’un article, cachez le aussi
au sein d’accolade.  *Note LaTeX command syntax::.

   Dans cet exemple la liste ‘enumerate’ a deux articles qui utilise
l’étiquette par défaut et une qui utilise l’étiquette optionnelle.

     \begin{enumerate}
       \item Moe
       \item[sometimes] Shemp
       \item Larry
     \end{enumerate}

   Le premier article est étiquetté ‘1.’, le deuxième article est
étiquetté ‘sometimes’, et le troisième article est étiquetté ‘2.’ (notez
que, à cause de l’étiquette optionnelle dans le second article, le
troisième article ne reçoit pas l’étiquette ‘3.’).

8.16.2 ‘trivlist’: Une forme restreinte de ‘list’
-------------------------------------------------

Synopsis :

     \begin{trivlist}
       ...
     \end{trivlist}

   Une version restreinte de l’environnement ‘list’ dans laquelle les
marges sont sans renfoncement et ‘\item’ sans l’argument optionnel ne
produit pas de texte.  Elle est utilisée le plus souvent au sein de
macros, de sorte à définir un environnement où la commande ‘\item’ fait
partie de la définition de l’environnement.  Par exemple,
l’environnement ‘center’ est défini pour l’essentiel comme ceci :

     \newenvironment{center}
       {\begin{trivlist}\centering\item\relax}
       {\end{trivlist}}

   Utiliser ‘trivlist’ de la sorte permet à la macro d’hériter du code
mutualisé : combiner l’espace vertical provenant de deux environnement
adjacent ; détecter si le texte suivant l’environement doit être
considéré comme un nouveau paragraphe ou la suite du paragraphe
précédent ; ajuster les marges de gauche et de droit pour d’éventuels
environnements de liste imbriqués.

   En particulier, ‘trivlist’ utilise les valeurs courantes des
paramètres de liste (*note list::), à ceci près que ‘\parsep’ est réglé
à la valeur de ‘\parskip’, et que ‘\leftmargin’, ‘\labelwidth’, et
‘\itemindent’ sont réglés à zéro.

   Cet exemple produit les articles comme deux paragraphes, à ceci près
que (par défaut) ils n’ont pas de renfoncement de paragraphe et sont
séparés verticalement.

     \begin{trivlist}
     \item C'est un fameux trois-mâts, fin comme un oiseau
     \item Hisse et ho, Santiano.
     \end{trivlist}

8.17 ‘math’
===========

Synopsis :

     \begin{math}
     MATHS
     \end{math}

   L’environnement ‘math’ insert les MATHS donnés au sein du texte en
cours.  ‘\(...\))’ et ‘$...$’ sont des synonymes.  *Note Math
formulas::.

8.18 ‘minipage’
===============

Synopsis :

     \begin{minipage}{LARGEUR}
       MATIÈRE
     \end{minipage}

ou

     \begin{minipage}[POSITION][HAUTEUR][POS-INTERNE]{LARGEUR}
     MATIÈRE
     \end{minipage}

   Place MATIÈRE dans une boîte qui est LARGEUR de large.  C’est comme
une version réduite d’une page ; elle peut contenir ses propres notes en
bas de page, listes à puces, etc.  (Il y a quelques restrictions,
notamment qu’elle ne peut pas avoir de flottants).  Cette boîte ne peut
pas être coupée sur plusieurs pages.  Ainsi ‘minipage’ est similaire à
la commande ‘\parbox’ (*note \parbox::), mais contrairement à ‘\parbox’,
d’autres environnements de production de paragraphe peuvent être
utilisés au sein d’une minipage.

   Cet exemple fait 7,5cm de large, et comprend deux paragraphes.

     \begin{minipage}{7.5cm}
       Stephen Kleene fut un fondateur de la théorie de la récursivité.

       Il fut l'élève de Church, l'auteur de trois textes qui firent autorité,
       et le président de l'Association for Symbolic Logic, et il fut
       récompensé par la National Medal of Science.
      \end{minipage}

Voir plus bas pour une discussion sur le renfoncement de paragraphe au
sein d’une ‘minipage’.

   L’argument obligatoire LARGEUR est une longueur rigide (*note
Lengths::).  Il donne la largeur de la boîte dans laquelle MATIÈRE est
composée.

   Il y a trois arguments optionnels, POSITION, HAUTEUR, et POS-INTERNE.
Il n’est pas nécessaire de fournir les trois à la fois.  Par exemple,
obtenez les valeur par défaut pour POSITION et réglez HAUTEUR avec
‘\begin{minipage}[c][2.54cm] MATIÈRE \end{minipage}’.  (Obtenez la
hauteur naturelle avec un argument vide, ‘[]’).

   L’argument optionnel POSITION gouverne la façon dont la ‘minipage’
s’aligne verticalement avec la matière l’entourant.

‘c’
     (Synonyme ‘m’) Valeur par défaut.  Positionne la ‘minipage’ de
     sorte que son centre vertical soit aligné avec le centre des lignes
     de texte adjacentes.

‘t’
     Aligne la ligne du haut de la ‘minipage’ sur la ligne de base du
     texte l’entourant (comme ‘\vtop’ en TeX de base).

‘b’
     Aligne la ligne du bas de ‘minipage’ avec la ligne de base du texte
     l’entourant (comme ‘\vbox’ en TeX de base).

   Pour voir l’effet de ces options, comparez le résultat de la
compilation de

     ---\begin{minipage}[c]{0.25in}
       first\\ second\\ third
     \end{minipage}

avec ce qui se passe en remplaçant ‘c’ par ‘b’ ou ‘t’.

   L’argument optionnel HAUTEUR est une longueur rigide (*note
Lengths::).  Il règle la hauteur de la ‘minipage’.  Vous pouvez donner
n’importe quelle valeur supérieure, égale ou inférieure à la hauteur
naturelle de la ‘minipage’ sans que LaTeX ne produise une erreur ou un
avertissement.  Vous pouvez aussi la régler à une hauteur de valeur
nulle ou négative.

   L’argument optionnel final POS-INTERNE contrôle la disposition de
MATIÈRE au sein de la boîte.  Voici les valeurs possibles (la valeur par
défaut est la valeur de l’argument POSITION).

‘t’
     Place MATIÈRE en haut de la boîte.

‘c’
     Centre MATIÈRE verticalement.

‘b’
     Place MATIÈRE en bas de la boîte.

‘s’
     Dilate MATIÈRE verticalement ; elle doit contenir de l’espace
     dilatable verticalement.

   L’argument POS-INTERNE a un sens quand l’option HAUTEUR est réglée à
une valeur supérieure à la hauteur naturelle de la ‘minipage’.  Pour
voir l’effet des options, exécutez l’exemple suivant avec les différents
choix possibles au lieu de ‘b’.

     Texte avant
     \begin{center}
       ---\begin{minipage}[c][8cm][b]{0.25\textwidth}
            premier\\ deuxième\\ troisième
       \end{minipage}
     \end{center}
     Texte après

   Par défaut, les paragraphes ne sont pas renfoncés au sein d’un
environnement ‘minipage’.  Vous pouvez restaurer le renfoncement avec
une commande telle que ‘\setlength{\parindent}{1pc}’ placé au début de
MATIÈRE.

   Les notes en bas de page au sein d’un environnement ‘minipage’ sont
gérées d’une façon qui est particulièrement utile pour mettre des notes
en bas de page dans des figures ou des tableaux.  Une commande
‘\footnote’ ou ‘\footnotetext’ met la note en bas de page au bas de la
minipage au lieu de la mettre au bas de la page, et elle utilise le
compteur ‘\mpfootnote’ au lieu du compteur ordinaire ‘footnote’ (*note
Counters::).

   L’exemple ci-dessous place la note argument de ‘\footnote’ en bas de
la table, et non en bas de la page.

     \begin{center}           % centre la minipage sur la ligne
     \begin{minipage}{6.5cm}
       \begin{center}         % centre la table au sein de la minipage
         \begin{tabular}{ll}
           \textsc{Monarque}  &\textsc{Reigne}             \\ \hline
           Elizabeth II      &63 ans\footnote{à ce jour} \\
           Victoria          &63 ans                   \\
           George III        &59 ans
         \end{tabular}
       \end{center}
     \end{minipage}
     \end{center}

   Si vous imbriquez des minipages, alors il y a une bizarrerie dans
l’utilisation des notes ‘\footnote’.  Les notes apparaissement au bas du
texte terminé par la prochaine ‘\end{minipage}’ ce qui n’est peut-être
pas leur place logique.

   L’exemple suivant place un tableau de données côte à côte d’un
graphique.  Ils sont verticalement centrés.

     % siunitx permet d'avoir le type de colonne S dans les tableaux, pour l'alignement
     % sur le séparateur décimal, réglé comme virgule.
     \usepackage[output-decimal-marker={,}]{siunitx}
     \newcommand*{\vcenteredhbox}[1]{\begin{tabular}{@{}c@{}}#1\end{tabular}}
       ...
     \begin{center}
       \vcenteredhbox{\includegraphics[width=0.3\textwidth]{nyc.png}}
       \hspace{0.1\textwidth}
       \begin{minipage}{0.5\textwidth}
         \begin{tabular}{r|S}
           % \multicolumn pour supprimer la barre verticale entre les titres de colonnes
           \multicolumn{1}{r}{Quartier} &
           % les accolades empèchent siunitx de voir le point comme un séparateur décimal
           {Pop. (million)}  \\ \hline
           The Bronx      &1.5  \\
           Brooklyn       &2.6  \\
           Manhattan      &1.6  \\
           Queens         &2.3  \\
           Staten Island  &0.5
         \end{tabular}
       \end{minipage}
     \end{center}

8.19 ‘picture’
==============

Synopsis :

     \begin{picture}(LARGEUR,HAUTEUR)
        COMMANDE PICTURE
     \end{picture}

ou

     \begin{picture}(LARGEUR,HAUTEUR)(DÉCALAGEX,DÉCALAGEY)
       COMMANDE PICTURE
     \end{picture}

où on a autant de COMMANDE PICTURE(s) qu’on le désire.

   L’environnement ‘picture’ vous permet de créer des dessins simples
contenant des lignes, des flèches, des boîtes, des cercles, et du texte.
Cet environnement n’est pas obsolète, mais les nouveaux documents
utilisent typiquement des systèmes de création de graphiques bien plus
puissants tels que TikZ, PStricks, MetaPost, ou Asymptote.  Aucun de
ceux-ci n’est couvert dans ce document ; voir le CTAN.

   Pour commencer, voici un exemple illustant la méthode du
parallélogramme pour additionner deux vecteurs.

     \setlength{\unitlength}{1cm}
     \begin{picture}(6,6)      % la boîte de l'image fera 6cm de large sur 6cm de haut
       \put(0,0){\vector(2,1){4}}  % la pente du vecteur est de 1/2
         \put(2,1){\makebox(0,0)[l]{\ premier terme}}
       \put(4,2){\vector(1,2){2}}
         \put(5,4){\makebox(0,0)[l]{\ second terme}}
       \put(0,0){\vector(1,1){6}}
         \put(3,3){\makebox(0,0)[r]{somme\ }}
     \end{picture}

   L’environnement ‘picture’ a un argument obligatoire qui est une pair
de nombres réels positifs (LARGEUR,HAUTEUR).  Le point est utilisée
comme séparateur décimal quand il ne sont pas entiers.  En les
multipliant par ‘\unitlength’ on obtient la taille nominale de la
sortie, c-à-d. l’espace que LaTeX reserve sur la page en sortie.  Cette
taille nominale n’est pas nécessairement la taille réelle de l’image ;
LaTeX dessine aussi les parties de l’image en dehors de la boîte de
l’image.

   L’environnement ‘picture’ a aussi un argument optionnel
(DÉCALAGEX,DÉCALAGEY).  Il sert à décaler l’origine.  Contrairement aux
arguments optionnels ordinaire, cet argument n’est pas contenu entre
crochets.  Comme pour l’argument obligatoire, c’est une paire de deux
nombres.  En les multipliant par ‘\unitlength’ on obtient les
coordonnées du point dans le coin inférieur gauche de l’image.

   Par exemple, si ‘\unitlength’ a été réglée à ‘1mm’, la commande

     \begin{picture}(100,200)(10,20)

produit un dessin de largeur 100 millimetres et hauteur 200 millimetres.
Son origine est le point (10mm,20mm) et donc le coin inférieur gauche
est là, et le coin supérieur droit est à (110mm,220mm).  Lorsque vous
tracez un dessin, typiquement vous omettez l’argument optionnel,
laissant l’origine au coin inférieur gauche.  Si ensuite vous voulez
modifier le dessin en translatant tout, vous pouvez juste ajouter
l’argument optionnel approprié.

   Chaque COMMANDE PICTURE dit à LaTeX où placer quelque chose en
donnant sa position.  Une “position” est une paire telle que ‘(2.4,-5)’
donnant les coordonnées en x et en y.  Une “coordonnée” n’est pas une
longueur, c’est un nombre réel (il utilise le point ‘.’ comme séparateur
décimal et peut avoir un signe moins).  Elle spécifie une longueur en
terme de la longueur unité ‘\unitlength’, de sorte que si ‘\unitlength’
a été réglée à ‘1cm’, alors la coordonnées ‘2.54’ spécifie une longueur
de 2,54 centimètres.

   La valeur par défaut de LaTeX pour ‘\unitlength’ est ‘1pt’.  C’est
une longueur rigide (*note Lengths::).  Utilisez la commande
‘\setlength’ pour la modifier (*note \setlength::).  Effectuez ce
changement uniquement en dehors de l’environnement ‘picture’.

   L’environnement ‘picture’ prend en charge les expressions
arithmétiques standardes en plus des nombres.

   Les coordonnées sont données relarivement à une origine, qui est par
défaut au coin en bas à gauche de l’image.  Notez que lorsque une
position apparaît en tant qu’argument, comme dans ‘\put(1,2){...}’, elle
n’est pas entourées d’accolades puisque les parenthèses servent à
délimiter l’argument.  De même, contrairement à certain système de
dessin par ordinateur, l’axe des ordonnées y est orienté vers le haut de
la page, c-à-d. que y = 1 est _au-dessus_ de y = 0.

   Il y a quatre manières de placer des chose dans une image : ‘\put’,
‘\multiput’, ‘\qbezier’, et ‘\graphpaper’.  La plus utilisée est ‘\put’.
Le code suivant

     \put (11.3,-.3){...}

met l’objet spécifié par ‘...’ dans le dessin ‘picture’, avec son point
de référence aux coordonnées (11.3,-.3).  Les points de référence des
divers objets sont décrits plus bas.

   La commande ‘\put’ crée une “LR box”.  Vous pouvez mettre tout ce qui
peut aller dans une ‘\mbox’ (*note \mbox & \makebox::) dans l’argument
texte de la commande ‘\put’.  Quand vous faites cela, le point de
référence devient le coin inférieur gauche de la boîte.  Dans cette
image :

     \setlength{\unitlength}{1cm}
     ...\begin{picture}(1,1)
       \put(0,0){\line(1,0){1}}
       \put(0,0){\line(1,1){1}}
     \end{picture}

les trois sont juste légèrement à la gauche du point où forment un angle
les deux lignes.  (À noter aussi que ‘\line(1,1){1}’ ne demande pas une
ligne de longueur un, mais une ligne dont l’étendu selon la coordonnée x
est de 1).

   Les cmmandes ‘\multiput’, ‘qbezier’, et ‘graphpaper’ sont décrite
plus bas.

   Vous pouvez également utiliser cet envionnement pour placer une
matière quelconque à un emplacement exact.  Par exemple :

     \usepackage{color,graphicx}  % dans le préambule
       ...
     \begin{center}
     \setlength{\unitlength}{\textwidth}
     \begin{picture}(1,1)      % reserve un espace large et haut de \textwidth
       \put(0,0){\includegraphics[width=\textwidth]{desertedisland.jpg}}
       \put(0.25,0.35){\textcolor{red}{X Trésor ici}}
     \end{picture}
     \end{center}

Le X rouge sera précisément à un quart de ‘\textwidth’ à droite de la
marge de gauche, et ‘0.35\textwidth’ au dessus du bas de l’image.  Un
autre exemple de cet utilisation est de placer un code similaire dans
l’en-tête de page pour obtenir une matière répétée sur chaque page.

8.19.1 ‘\put’
-------------

‘\put(XCOORD,YCOORD){ ... }’

   La commande ‘\put’ place l’article spécifié par l’argument
obligatoire aux coordonnées XCOORD et YCOORD fournies.

8.19.2 ‘\multiput’
------------------

Synopsis :
     \multiput(X,Y)(DELTA_X,DELTA_Y){N}{OBJ}

   La commande ‘\multiput’ copie l’objet OBJ en un motif régulier à
travers la figure.  OBJ est placé en premier à la position (x,y), puis à
la position (x+\delta x,y+\delta y), et ainsi de suite, N fois.

8.19.3 ‘\qbezier’
-----------------

Synopsis :

     \qbezier(X1,Y1)(X2,Y2)(X3,Y3)
     \qbezier[QUANT](X1,Y1)(X2,Y2)(X3,Y3)

   Dessing une courbe de Bézier quadratique dont les points de contrôle
sont donnés par les trois arguments obligatoire ‘(X1,Y1)’, ‘(X2,Y2)’, et
‘(X3,Y3)’.  C-à-d. que la courbe va de (X1,Y1) à (X3,Y3), est
quadratique, et est telle que la tangente en (X1,Y1) passe par (X2,Y2),
et de même pour la tangente en (X3,Y3).

   L’exemple suivant dessine une courbre des coordonnées (1,1) à (1,0).

     \qbezier(1,1)(1.25,0.75)(1,0)

La tangente de la coubre en (1,1) passe par (1.25,0.75), et la tangent
en (1,0) fait de même.

   L’argument optionnel QUANT donne le nombre de points intermédiaires
calculés.  Par défaut une courbe liste est dessinée dont le nombre
maximum de points est ‘\qbeziermax’ (on change cette valeur avec
‘\renewcommand’).

   L’exempel suivante dessine un rectangle avec un haut ondulé, en
utilisant ‘\qbezier’ pour cette courbe.

     \begin{picture}(8,4)
       \put(0,0){\vector(1,0){8}}  % axe des x
       \put(0,0){\vector(0,1){4}}  % axe des y
       \put(2,0){\line(0,1){3}}       % côté gauche
       \put(4,0){\line(0,1){3.5}}     % côté droit
       \qbezier(2,3)(2.5,2.9)(3,3.25)
         \qbezier(3,3.25)(3.5,3.6)(4,3.5)
       \thicklines                 % ci-dessous, les lignes sont deux fois plus épaisses
       \put(2,3){\line(4,1){2}}
       \put(4.5,2.5){\framebox{Trapezoidal Rule}}
     \end{picture}

8.19.4 ‘\graphpaper’
--------------------

Synopsis :

     \graphpaper(X_INIT,Y_INIT)(X_DIMEN,Y_DIMEN)
     \graphpaper[ESPACEMENT](X_INIT,Y_INIT)(X_DIMEN,Y_DIMEN)

   Dessine un quadrillage.  Le paquetage ‘graphpap’ est nécessaire.
L’origine du quadrillage est ‘(X_INIT,Y_INIT)’.  Les lignes de la grille
sont espacées de ESPACEMENT unités (par défaut 10).  Le quadrillage
s’étend sur X_DIMEN unités vers la droite et Y_DIMEN vers le haut.  Tous
les arguments doivent être des entiers positifs.

   L’exemple ci-dessous fait une grille avec sept lignes verticales et
onze horizontales.

     \usepackage{graphpap}    % dans le préambule
       ...
     \begin{picture}(6,20)    % dans le corps du document
       \graphpaper[2](0,0)(12,20)
     \end{picture}

Les lignes sont numérotées toutes les dix unités.

8.19.5 ‘\circle’
----------------

Synopsis :
     \circle{DIAMÈTRE}
     \circle*{DIAMÈTRE}

   La commande ‘\circle’ produit un cercle dont le diamètre est le plus
proche possible de celui spécifié.  La forme étoilée (en ‘*’) de la
commande dessine un disque, c.-à-d. un cercle plein.

   L’exemple suivant trace un cerrcle de rayon 6, centré en ‘(5,7)’.

     \put(5,7){\circle{6}}

   Les rayons disponible pour ‘circle’ sont, en points, les nombres pair
de 2 à 20 inclus.  Pour ‘\circle*’ ce sont tous les entiers de 1 à 15.

8.19.6 ‘\line’
--------------

Synopsis :

     \line(XPENTE,YPENTE){EXCURSION}

   Dessine une ligne.  Sa pente est telle que la ligne monte de YPENTE
verticalement pour toute avancée horizontale de XPENTE.  L’EXCURSION est
le déplacement horizontal total — ce n’est pas la longueur du vecteur,
mais la variation en x.  Dans le cas spécial des lignes verticales, où
(XPENTE,YPENTE)=(0,1), l’EXCURSION donne le déplacement en y.

   L’exemple suivant dessine une ligne commençant aux coordonnées (1,3).

     \put(1,3){\line(2,5){4}}

Pour toute avancée de 2 vers la droite, cette ligne monte de 5.  Parce
que EXCURSION spécifie qu’elle avance de 4, elle monte en tout de 10.
De sorte que son extrémité finale est (1,3)+(4,10)=(5,13).  En
particulier, notez que EXCURSION=4 n’est pas la longueur de la ligne,
mais c’est son déplacement en x.

   Les arguments XPENTE et YPENTE sont des entiers qui peuvent être
positifs, negatifs, ou nuls zero (si les deux valent 0, alors LaTeX
traite le second comme 1).  Avec
‘\put(X_INIT,Y_INIT){\line(XPENTE,YPENTE){TRAVEL}}’, si XPENTE est
négatif alors l’extrémté finale d ela ligne a sa première coordonnée
inférieure à X_INIT.  Si YPENTE est negatif alors l’extrémité finale a
sa seconde coordonnées inférieure à Y_INIT.

   Si EXCURSION est négatif alors vous obtenez ‘LaTeX Error: Bad \line
or \vector argument.’

   De base LaTeX peut seulement dessiner des lignes avec une plage
limitées de pentes parce que ces lignes sont constituées par la
juxtaposition de petits segments de droite issus de polices
préfabriquées.  Les deux nombres XPENTE et YPENTE prennent des valeurs
entières de −6 jusqu’à 6.  De plus ils doivent être premiers entre eux,
de sorte que (XPENTE, YPENTE)=(2,1) est licite, mais pas (XPENTE,
YPENTE)=(4,2) (is vous choisissez cette dernière forme alors au lieu de
lignes vous obtiendrez des séquences de têtes de flèches ; la solution
est de revenir à la première forme).  Pour obtenir des lignes de pente
arbitraire et plein d’autres formes dans un système tel que ‘picture’,
voir le paquetage ‘pict2e’ (<https://ctan.org/pkg/pict2e>).  Une autre
solution est d’utiliser un système graphique complet tel que TikZ,
PSTricks, MetaPost, ou Asymptote.

8.19.7 ‘\linethickness’
-----------------------

La commande ‘\linethickness{DIM}’ déclare que l’épaisseur des lignes
horizontales et verticales dans un environnement ‘picture’ vaut DIM, ce
qui doit être une longueur positive.

   Elle diffère de ‘\thinlines’ et ‘\thicklines’ en ce qu’elle n’affecte
pas l’épaisseur des lignes obliques, cercles, ou quarts de cercles
dessinés par ‘\oval’.

8.19.8 ‘\thicklines’
--------------------

La commande ‘\thicklines’ est une épaisseur de trait alternative pour
les lignes verticales et horizontales dans un environnement picture ;
cf. *note \linethickness:: et *note \thinlines::.

8.19.9 ‘\thinlines’
-------------------

La commande ‘\thinlines’ est l’épaisseur de trait par défaut pour les
lignes horizontales et verticales dans un environnement picture ;
cf. *note \linethickness:: et *note \thicklines::.

8.19.10 ‘\oval’
---------------

Synopsis :

     \oval(LARGEUR,HAUTEUR)[PORTION]

   La commande ‘\oval’ produit un rectangle aux coins arrondis.
L’argument optionnel PORTION vous permet de ne produire qu’une moitié de
l’ovale selon ce qui suit :

‘t’
     selectionne la moitié supérieure ;
‘b’
     selectionne la moitié inférieure ;
‘r’
     selectionne la moitié de droite ;
‘l’
     selectionne la moitié de gauche.

   Il est également possible de ne produire qu’un quart de l’ovale en
réglant PORTION à ‘tr’, ‘br’, ‘bl’, ou ‘tl’.

   Les « coins » de l’ovale sont fabriqués avec des quarts de cercle
d’un rayon maximal de 20pt, ainsi les « ovales » de grande taille
ressembleront plus à des boîtes aux coins arrondis.

8.19.11 ‘\shortstack’
---------------------

Synopsis :

     \shortstack[POSITION]{...\\...\\...}

   La commande ‘\shortstack’ produit une pile d’objets.  Les positions
valides sont :

‘r’
     Déplace les objets à la droite de la pile.
‘l’
     Déplace les objets à la gauche de la pile
‘c’
     Déplace les objets au centre de la pile (position par défaut)

   Les objets sont séparés avec ‘\\’.

8.19.12 ‘\vector’
-----------------

Synopsis :

     \vector(XPENTE,YPENTE){LONGUEUR}

   La commande ‘\vector’ dessine une ligne fléchée de la LONGUEUR et
direction (XPENTE,YPENTE) spécifiées.  Les valeurs de XPENTE et YPENTE
doivent être comprises entre −4 and +4 y compris.

8.19.13 ‘\makebox’
------------------

Synopsis :
     \makebox(LARGEUR,HAUTEUR)[POSITION]{TEXTE}

   La commande ‘\makebox’ pour l’environnement ‘picture’ est similaire à
la commande normale ‘\makebox’ à ceci près que vous devez spécifier une
LARGEUR et une HAUTEUR implicitement multipliés par ‘\unitlength’.

   L’argument optionnel, ‘[POSITION]’, spécifie le quadrant dans lequel
votre TEXTE apparaît.  Vous pouvez sélectionner jusqu’à deux
spécificateurs parmi les suivants :

‘t’
     Place l’article au sommet du rectangle.

‘b’
     Place l’article en bas du rectangle.

‘l’
     Place l’article sur la gauche.

‘r’
     Place l’article sur la droite.

   *Note \mbox & \makebox::.

8.19.14 ‘\framebox’
-------------------

Synopsis :

     \framebox(LARGEUR,HAUTEUR)[POS]{...}

   La commande ‘\framebox’ est similaire à ‘\makebox’ (voir section
précédent), à ceci près qu’elle met un cadre autour de l’extérieur du
contenu de la boîte qu’elle créée.

   La commande ‘\framebox’ produit un filet d’épaisseur ‘\fboxrule’, et
laisse un espace ‘\fboxsep’ entre le filet et le contenu de la boîte.

8.19.15 ‘\frame’
----------------

Synopsis :

     \frame{TEXTE}

   La commande ‘\frame’ met un cadre rectangulaire autour de TEXTE.  Le
point de référence est le coin en bas à gauche du cadre.  Aucun espace
supplémentaire n’est mis entre le cadre et l’objet TEXTE.

8.19.16 ‘\dashbox’
------------------

Dessine une boîte avec une ligne en tireté.  Synopsis :

     \dashbox{TLONG}(RLARGEUR,RHAUTEUR)[POS]{TEXTE}

   ‘\dashbox’ crée un rectangle en tireté autour de TEXTE au sein d’un
environnement ‘picture’.  Les tirets sont long de TLONG unités, et le
rectangle a pour largeur totale RLARGEUR et hauteur totale RHAUTEUR.  Le
TEXTE est positionné par l’argument optionnel POS.

   Une boîte en tireté a meilleure allure quand les paramètres RLARGEUR
et RHAUTEUR sont des multiple de TLONG.

8.20 ‘quotation’ et ‘quote’
===========================

Synopsis :

     \begin{quotation}
       TEXTE
     \end{quotation}

   ou

     \begin{quote}
       TEXTE
     \end{quote}

   Cite du texte.

   Dans les deux environnements, les marges sont renfoncées à la fois
sur la gauche et la droite.  Le texte est justifié des deux côtés sur la
marge.  De même que dans le texte principal, laisser une ligne à blanc
au sein du texte produit un nouveau paragraphe.

   Pour comparer les deux : dans l’environnement ‘quotation’, les
paragraphes sont renfoncés de 1,5em et l’espace entre les paragraphes
est petit, ‘0pt plus 1pt’.  Dans l’environnement ‘quote’, les
paragraphes ne sont pas renfoncés et il y a un espace vertical entre les
paragraphes (c’est la longueur élastique ‘\parsep’).  Ainsi,
l’environnement ‘quotation’ convient mieux aux documents où les nouveaux
paragraphes sont marqués par un renfoncement plutôt que par une
séparation verticale.  De plus, ‘quote’ convient mieux pour des
citations courtes ou une suite de citations courtes.

     \begin{quotation} \small\it
       Il y a quatre-vingt sept ans
       ... ne disparaîtra jamais de la surface de la terre.
       \hspace{1em plus 1fill}--- Abraham Lincoln
     \end{quotation}

8.21 ‘tabbing’
==============

Synopsis :

     \begin{tabbing}
     LGN1COL1 \= LGN1COL2 ... \\
     LGN2COL1 \> LGN2COL2 ... \\
     ...
     \end{tabbing}

   L’environnement ‘tabbing’ fournit une technique pour aligner du texte
en colonnes.  Il fonctionne en réglant des taquets et en tabulant
jusqu’à eux à la façon dont on le faisait avec une machine à écrire
ordinaire.

   L’environnement ‘tabbing’ est peu utilisé, car en général, pour
formatter du code informatique on utilise un environnement verbatim
(*note verbatim::).  À noter également, pour mettre en vedette la
syntaxe, les paquetages ‘algorithm2e’ pour du pseudo-code, et
‘fancyvrb’, ‘listings’ ou ‘minted’ pour du vrai code.  Et pour faire un
tableau, on préfère les environnements ‘tabular’ (*note tabular::) ou
‘array’ (*note array::) pour un petit tableau qu’on met dans un flottant
‘table’ (*note table::) et l’environnement ‘longtable’ fourni par le
paquetage ‘longtable’ pour un tableau pouvant être coupé sur plusieurs
pages.

   La description suivante n’est donc fournie que être complet.

   Dans l’exemple suivant la première ligne sert à régler les taquets à
des largeurs explicites, elle se termine par une commande ‘\kill’
(décrite plus bas) :

     \begin{tabbing}
     \hspace{3cm}\=\hspace{2.5cm}\=\kill
     Navire                \>Armement        \>Année   \\
     \textit{Sophie}       \>14              \>1800    \\
     \textit{Polychrest}   \>24              \>1803    \\
     \textit{Lively}       \>38              \>1804    \\
     \textit{Surprise}     \>28              \>1805    \\
     \end{tabbing}

Le résultat ressemble à cela :

     Navire         Armement     Année
     Sophie         14           1800
     Polychrest     24           1803
     Lively         38           1804
     Surprise       28           1805

   L’environnement ‘tabbing’ se distingue de ‘tabular’ notamment parce
qu’avec ‘tabbing’ l’utilisateur est obligé de régler la positions des
taquets, et le contenu des colonnes est toujours composé en mode LR et
s’étend sur la colonne suivante s’il est plus large que la colonne
courante, alors qu’avec ‘tabular’, l’utilisateur peut selon le
spécificateur de colonne, soit composer le contenu des cellules en mode
LR et laisser LaTeX déterminer la largeur de colonne automatiquement
pour que le contenu ne sorte jamais de la colonne, soit fixer la largeur
et composer le contenu des cellules dans une ‘parbox’.  Une autre
différence est que ‘tabular’ permet de faire des filets, notamment de
border les colonnes par des filets verticaux, et d’avoir un espace
‘\tabcolsep’ entre le contenu et la bordure de colonne.  Une autre
distinction est que un ‘tabbing’ peut être coupé sur plusieurs pages,
alors que ‘tabular’ génère une boîte, l’environnement ‘longtable’ du
paquetage ‘longtable’ étant préféré à ‘tabbing’ pour les longs tableaux.

   Finalement, alors que ‘tabular’ peut être utilisé dans n’importe quel
mode, ‘tabbing’ ne peut être utilisé qu’en mode paragraphe, et il
démarre un nouveau paragraphe.

   De plus, comme l’illustre l’exemple donné plus haut, il n’est pas
nécessaire d’utiliser la forme étoilée de la commande ‘\hspace’ au début
d’une ligne tabulée.  La marge de droite de l’environnement ‘tabbing’
est la fin de ligne, de sorte que la largeur de l’environnement est
‘\linewidth’.

   L’environnement ‘tabbing’ contient une suite de “lignes tabulées”, la
première ligne tabulée commence immédiatement après ‘\begin{tabbing}’ et
chaque ligne se termine par ‘\\’ ou ‘\kill’.  Il est possible d’omettre
le ‘\\’ pour la dernière ligne et de terminer juste par ‘\end{tabbing}’.

   L’environnement ‘tabbing’ a un “motif courant de taquets de
tabulation” qui est une séquence de N taquets, avec N > 0, numérotés 0,
1, etc.  Ceci crée N colonnes correspondantes.  Le taquet № 0 est
toujours la marge de gauche définie par l’environnement englobant.  Le
taquet numéro I est réglé quand on lui assigne une position horizontale
sur la page avec la commande ‘\=’.  Le taquet numéro I ne peut être
réglé que si les autres taquets 0, ..., I-1 ont déjà été réglés.

   L’un des taquets du motif courant ayant été réglé comme le “taquet
courant”, par défaut tout texte composé par la suite au sein de
l’envionnement ‘tabbing’ est composé en drapeau droit avec le fer à
gauche sur ce taquet, c’est à dire qu’il est aligné à gauche dans la
colonne courante.  La composition est faite en mode LR.

   Par ailleurs l’environnement ‘tabbing’ a un “taquet de début de ligne
courant”.  Par défaut, immédiatement après ‘\begin{tabbing}’ c’est le
taquet № 0, et on peut le changer pour les lignes suivantes avec les
commandes ‘\+’ et ‘\-’.  Au début de chaque ligne tabulée, le taquet
courant est initalement égal au taquet de début de ligne courant.
Lorsque le motif de taquets est modifié par une commande ‘\=’, alors le
taquet de début de ligne redevient le taquet № 0 à partir de la ligne
suivante, à moins qu’une commande ‘\+’ le change de nouveau avant le
changement de ligne par ‘\\’ ou ‘\kill’.  La commande ‘\pushtabs’
sauvegarde non seulement les positions de taquets, mais aussi le taquet
de début de ligne, et inversement ‘\poptabs’ le restaure.

   La marge de droite de l’environnement ‘tabbing’ est la fin de ligne,
c.-à-d. que la largeur de l’environnement est de longueur ‘\linewidth’.
Il n’y a pas par défaut de taquet correspondant à la marge de droite,
même s’il serait possible avec un peu de calcul d’en définir un à cette
position (voir exemples ci-après).

   En ce qui concerne la marge de gauche, ou autrement dit le taquet
№ 0, contrairement à l’environnement ‘tabular’, il n’est pas nécessaire
de mettre un ‘\noindent’ devant ‘\begin{tabbing}’ pour éviter un
renfoncement : un environnement ‘tabbing’ commence toujours un nouveau
paragraphe sans renfoncement.  De plus il est inutile d’étoiler une
commande ‘\hspace’ en début de ligne tabulée pour que l’espace soit pris
en compte.

   Normalement, au sein du motif de taquets de tabulation, l’ordre des
taquets correspond à des positions allant de gauche à droite.  Il est
cependant possible de positionner n’importe quel taquet, hormis le
taquet № 0 à n’importe quelle position en utilisant des espacements
négatifs ou nuls.  En réalité, le fait de ne pas pouvoir changer la
position du taquet № 0 n’est pas restrictif, car on peut utiliser à la
place comme taquet de début de ligne le taquet № 1 grâce à la commande
‘\+’.  Ainsi dans l’exemple ci-dessous, alors qu’on a le même contenu de
l’environnement ‘tabbing’ que dans l’exemple précédent, la première et
la troisième colonne ont été interverties en changeant uniquement le
motif de taquets dans la première ligne se terminant en ‘\kill’.

     \begin{tabbing}
     \hspace{5.5cm}\=\hspace{-2.5cm}\=\hspace{-3cm}\=\+\kill
     Navire              \>Armement         \>Année    \\
     \textit{Sophie}     \>14               \>1800    \\
     \textit{Polychrest} \>24               \>1803    \\
     \textit{Lively}     \>38               \>1804    \\
     \textit{Surprise}   \>28               \>1805    \\
     \end{tabbing}

Le résultat ressemble donc à cela :

     Année          Armement     Navire
     1800           14           Sophie
     1803           24           Polychrest
     1804           38           Lively
     1805           28           Surprise

   Les commandes suivantes peuvent être utilisées au sein d’un
environnement ‘tabbing’ :

‘\\ (tabbing)’
     Finit une ligne tabulée et la compose.  Après cette commande une
     nouvelle ligne tabulée commence, et donc le taquet courant
     redevient le taquet courant de début de ligne.

‘\= (tabbing)’
     Règle le prochain taquet à la position courante, et fait de lui le
     taquet courant.  Si le taquet courant est le taquet № N, alors une
     commande ‘\=’ règle la position du taquet № N+1 et fait de lui le
     taquet courant.  Si on avait déjà au moins N+2 taquets, ceci
     redéfinit la position du taquet № N+1.  Sinon, le nombre de taquets
     dans le motif courant était à ce moment (N+1), c’est à dire que
     dernier des taquets en numéro d’ordre était le № N, alors la
     commande ‘\=’ en définissant le taquet № N+1, porte le nombre de
     taquets de N+1 à N+2.

     La position des taquets peut être définie avec plus de liberté que
     ce qui se passait avec un machine à écrire ordinaire.  En effet il
     est possible de définir à la même position deux taquets de № N et
     № M distincts, voire de faire en sorte que les taquets № N et № M,
     avec N<M, soient à des positions telles que le taquet № M soit
     avant le taquet № N.

‘\> (tabbing)’
     Change le taquet courant au taquet suivant dans l’ordre logique,
     c.-à-d. si le taquet courant est le taquet № N, alors, en supposant
     qu’il y ait au moins N+2 taquets définis, on passe au taquet № N+1,
     sinon cette commande provoque une erreur.

‘\<’
     Change le taquet courant au taquet précédent dans l’ordre logique.
     Cette commande ne peut être utilisée qu’au début d’une ligne
     tabulée, et que lorsque le taquet de début de ligne courant est le
     taquet № N avec N>0.  Le taquet courant devient alors le taquet
     № N-1.

     Il est en fait possible d’avoir M commandes ‘\<’ consécutives à
     condition que M≤N, le taquet courant devient alors le taquet
     № (N-M).  Si par contre M>N, alors la N+1 commande ‘\<’ provoque
     une erreur.

     Il est possible, même si c’est absurde, d’avoir ensuite des
     commandes ‘\>’ qui défont ce qu’on fait les commandes ‘\<’.  Ainsi
     en supposant qu’au début d’une ligne tabulée le taquet de début de
     ligne courant soit le taquet № 2, faire commencer la ligne par
     ‘\<\<\>\>’ n’a aucun effet.  Par contre, ‘\<\<\<\>\>\>’ provoquera
     une erreur, parce que la troisième commande ‘\<’ est illicite.
     Dans les mêmes conditions faire ‘\<\>\<\>’ provoque également une
     erreur, car la seconde commande ‘\<’ n’est pas consécutive de la
     première, elle n’est donc pas, au sens où on l’entend, utilisée en
     début de ligne.

‘\+’
     Change le taquet de début de ligne courant au taquet suivant dans
     l’ordre logique pour la ligne tabulée suivante, et toutes celles
     qui suivent tant qu’une autre commande ne vient pas le modifier.
     La notion de taquet suivant dans l’ordre logique suit le même
     principe que pour la commande ‘\>’, c’est à dire que s’il n’y a que
     N+1 taquets défini, et que le taquet de début de ligne courant est
     le taquet № N, alors cette commande provoque une erreur.  La
     commande ‘\+’ peut être invoquée n’importe où dans la ligne
     tabulée, et on peut avoir plusieurs commandes ‘\+’ au sein de la
     même ligne, du moment que pour chacune d’elle un nombre suffisant
     de taquets est déjà défini.  Par exemple le code suivant provoque
     une erreur parce que bien qu’à la fin de la première on ait trois
     taquets définis, au moment où la commande ‘\+’ est invoquée le
     nombre de taquets définis ne vaut que 1, on ne peut donc pas passer
     du taquet № 0 au taquet № 1 :

          \begin{tabbing}
          Vive \+\=la \=France\\
          Vive \>la\>République\\
          \end{tabbing}

     En revanche le code suivant fonctionne, car lorsque la commande
     ‘\+’ est passée on a trois taquets définis, les taquets № 0 à 2, on
     peut donc passer du taquet № 0 au taquet № 1.

          \begin{tabbing}
          Vive \=la \=France\+\\
          Vive \>la\>République\\
          \end{tabbing}

     C’est pourquoi l’usage est que la ou les commandes ‘\+’ sont
     toujours invoquées juste avant la fin de ligne ‘\\’ ou ‘\kill’.

     Il est possible, même si cela est absurde, d’avoir sur la même
     ligne à la fois des commandes ‘\+’ et ‘\-’ s’annulant l’une
     l’autre, du moment qu’aucune d’elle ne fasse passer sur un taquet
     non défini.

‘\-’
     Change le taquet de début de ligne courant au taquet précédent dans
     l’ordre logique pour la ligne tabulée suivante, et toutes celles
     qui suivent tant qu’une autre commande ne vient pas le modifier.
     C’est à dire que si le taquet de début de ligne courant est le
     taquet № N, et qu’on a M commandes ‘\-’ avec M≥N, alors le taquet
     de début de ligne courant de la ligne suivante devient le taquet
     № N-M.  Par contre, si M>N, alors la (N+1)ième commande ‘\+’
     provoque une erreur.

‘\' (tabbing)’
     Déplace tout ce que vous avez tapé jusqu’alors dans la colonne
     courante, c.-à-d. tout ce qui suit la plus récente commande ‘\>’,
     ‘\<’, ‘\'’, ‘\\’, ou ‘\kill’, aligné à droite dans la colonne
     précédente, le fer à droite étant espacé du taquet courant d’une
     longueur ‘\tabbingsep’.  Voir aussi ‘\`’.

‘\` (tabbing)’
     Vous permet de placer du texte justifié à droite en face de
     n’importe quel taquet, y compris le taquet 0.  Les commandes ‘\`’
     et ‘\'’ alignent toutes deux le texte à droite, toutefois elles se
     distinguent fortement par deux aspects :
        • Tout d’abord le texte qui est déplacé est, dans le cas de
          ‘\`’, le texte qui suit la commande ‘\`’ et qui va jusqu’à la
          fin de la ligne tabulée, c.-à-d. jusqu’à ‘\\’ ou
          ‘\end{tabbing}’.  Il ne doit y avoir aucune commande ‘\>’ ou
          ‘\'’ entre le ‘\`’ et la commande ‘\\’ ou ‘\end{tabbing}’ qui
          termine la ligne.  Dans le cas de la commande ‘\'’ au
          contraire, c’est le texte qui précède la commande ‘\'’.
        • Par ailleurs, avec ‘\'’ l’alignement se fait sur un taquet et
          avec un espacement relatif de ‘\tabbingspace’, alors qu’avec
          ‘\`’ l’alignement se fait sur la marge de droite et sans
          espacement relatif.

‘\a (tabbing)’
     Dans un environnement ‘tabbing’, les commandes ‘\=’, ‘\'’ et ‘\`’
     ne produisent pas d’accents comme d’habitude (*note Accents::).  À
     leur place, on utilise les commandes ‘\a=’, ‘\a'’ et ‘\a`’.

‘\kill’
     Règles les taquets sans produire de texte.  Fonctionne tout comme
     ‘\\’ à ceci près que la ligne courante est jetée au lieu de
     produire une sortie.  L’effet de toute commande ‘\=’, ‘\+’ ou ‘\-’
     dans cette ligne demeure en vigueur.

‘\poptabs’
     Restaure les positions de taquets et le taquet de début de ligne
     sauvegardés par le dernier ‘\pushtabs’.

‘\pushtabs’
     Sauvegarde dans une pile dédiée à cet effet le motif courant de
     taquets de tabulation ainsi que le taquet de début de ligne.  C’est
     utile pour changer temporairement les positions de taquets au
     milieu d’un environnement ‘tabbing’.  Après un ‘\pushtabs’, on a un
     nouveau motif vierge, c.-à-d. ne contenant qu’un seul taquet, le
     taquet № 0 à la position de début de ligne.  Pour toute commande
     ‘\pushtabs’ il doit y avoir une commande ‘\poptabs’ avant la fin de
     l’environnement, c’est à dire que la pile doit être explicitement
     vidée avant le ‘end{tabbing}’.

‘\tabbingsep’
     Distance du texte déplacé par ‘\'’ à la gauche du taquet courant.

   Il est à noter que les espaces en début de ligne, où après ‘\=’, ‘\>’
ou ‘\<’ sont gobés, qu’il s’agisse d’espaces produits par la macro
‘\space’ ou par le caractère espace.  Par contre l’espace produit par la
le caractère de contrôle espace (‘\ ’, c.-à-d. une contr’oblique suivie
d’un caractère espace) n’est pas gobé.

   Cet exemple compose un fonction en Pascal dans un format
traditionnel :

     {\ttfamily
     \begin{tabbing}
     function \= fact(n : integer) : integer;\+\\
                 begin \=\+\\
                       if \= n $>$ 1 then\+\\
                             fact := n * fact(n-1)\-\\
                       else\+\\
                             fact := 1;\-\-\\
                 end;\\
     \end{tabbing}}

Le résultat ressemble à cela :
     function fact(n : integer) : integer;
              begin
                    if n > 1 then
                       fact := n * fact(n-1);
                    else
                       fact := 1;
              end;

   Voici un autre exemple où le taquet № 2 est entre le taquet № 0 et le
taquet № 1 :

     {\ttfamily
     \begin{tabbing}
       12\=34\=\kill
       12345678\=9\\
       1\>2\>3\\
     \end{tabbing}}

   Le résultat ressemble à cela :
     123456789
     1   3   2

   Voici un exemple où les taquets № 0 et № 1 sont confondus, ainsi que
les taquets № 2 et № 3, ce qui permet de superposer le texte aux taquets
impairs sur celui au taquets pairs, par exemple pour souligner ou barrer
comme avec une machine à écrire, en superposant un caractère ‘_’ ou un
caractère ‘−’.  Evidemment ce n’est qu’une illustration de la
flexibilité des taquets, et non une méthode convenable pour souligner ou
barrer un mot, d’une part parce que ‘tabbing’ en soi commençant un
nouveau paragraphe ne permet pas d’agir sur un seul mot, et d’autre
part, parce que le paquetage ‘soul’ fait cela beaucoup mieux.

     {\ttfamily
     \begin{tabbing}
       \=souligne  \=\=\kill
       soulign\a'e\>
       \_{}\_{}\_{}\_{}\_{}\_{}\_{}\_{}\>
       barr\a'e\>{--}{--}{--}{--}{--}{--}\\
     \end{tabbing}}

   Finalement, voici un exemple où on a placé le taquet № 5 décalé d’une
longueur ‘\tabbingsep’ à droite de la marge de droite.

     {\ttfamily
     \begin{tabbing}
     \hspace{1cm}\=\hspace{1cm}\=\hspace{1cm}\=\hspace{1cm}\=
        \hspace{\dimexpr\linewidth-4cm+\tabbingsep}\=\kill
     1\>2\>X\'3\>4\>5\>\a`a gauche de de la marge de droite
        avec \textbackslash'\'\\
     1\>2\>X\'3\>4\>5\`\a`a gauche de de la marge de droite
        avec \textbackslash`\\
     \end{tabbing}}

   Le résultat ressemble à cela :

     1    2  X 3    4    5            à gauche de la marge de droite avec \'
     1    2  X 3    4    5            à gauche de la marge de droite avec \`

8.22 ‘table’
============

Synopsis :

     \begin{table}[PLACEMENT]
       CORPS-DU-TABLEAU
       \caption[TITRELDT]{TITRE} % optionnel
       \label{ÉTIQUETTE}         % également opionnel
     \end{table}

   Une classe de flottants (*note Floats::).  Parce qu’ils ne peuvent
pas être coupés à cheval sur plusieurs pages, il ne sont pas composés en
séquence avec le texte normale, mais à la place sont « flottés » vers un
endroit convenable, tel que le sommet d’une page suivante.

   Dans l’exemple suivant, l’environnement ‘table’ contient un
‘tabular’ :

     \begin{table}
       \centering\small
       \begin{tabular}{ll}
         \multicolumn{1}{c}{\textit{Auteur}}
           &\multicolumn{1}{c}{\textit{Pièce}}  \\ \hline
         Bach            &Suite  Numéro 1 pour violoncelle\\
         Beethoven       &Sonate Numéro 3 pour violoncelle\\
         Brahms          &Sonate Numéro 1 pour violoncelle
       \end{tabular}
       \caption{Meilleures pièces pour violoncelle}
       \label{tab:violoncelle}
     \end{table}

mais vous pouvez placer beaucoup de types différents de contenu au sein
d’une ‘table’ : le TABLE BODY peut contenir du texte, des commandes
LaTeX, des graphiques, etc.  Il est composé dans une ‘parbox’ de
largueur ‘\textwidth’.

   Pour les valeurs possibles de PLACEMENT et leur effet sur
l’algorithme de placement des flottants, voir *note Floats::.

   L’étiquette est optionnelle ; elle est utilisée pour les double
renvois (*note Cross references::).  La commande ‘\caption’ est
également optionnelle.  Elle spécifie la légende TITRE pour la figure.
La légende est numérotée par défaut.  Si TITRELDT est présent, il est
utilisé dans la liste des tableaux au lieu de TITRE (*note Table of
contents etc.::).

   Dans l’exemple suivant le tabeau et se légende flottent jusqu’au bas
d’une page, à moins qu’il soit repoussé jusqu’à une page de flottants à
la fin.

     \begin{table}[b]
       \centering
       \begin{tabular}{r|p{2in}} \hline
         Un &Le plus solitaire des nombres \\
         Deux &Peut être aussi triste que un.
              C'est le nombre le plus solitaire après le nombre un.
       \end{tabular}
       \caption{Vertus cardinales}
       \label{tab:VertusCardinales}
     \end{table}

8.23 ‘tabular’
==============

Synopsis :

     \begin{tabular}[POS]{COLS}
     column 1 entry & column 2 entry ... & column n entry \\
     ...
     \end{tabular}

ou

     \begin{tabular*}{LARGEUR}[POS]{COLS}
     column 1 entry & column 2 entry ... & column n entry \\
     ...
     \end{tabular*}

   Ces environnements produisent une boîte consistant d’une séquence de
ligne horizontales.  Chaque ligne consiste en des articles qui sont
alignés verticalement au sein de colonnes.  Ci-après une illustration de
beaucoup des caractéristiques.

     \begin{tabular}{l|l}
       \textit{Nom du joueur}  &\textit{Coups de circuit de toute sa carrière}  \\
       \hline
       Hank Aaron  &755 \\
       Babe Ruth   &714
     \end{tabular}

   Le format vertical de deux colonnes alignées à gauche, avec une barre
verticales entre elles, est spécifié par l’argument ‘{l|l}’ de
‘tabular’.  Les colonnes sont séparées avec une esperluette ‘&’.  On
crée un filet horizontal entre deux lignes avec ‘\hline’.  La fin de
chaque ligne est marquée avec une double-contr’oblique ‘\\’.  Cette ‘\\’
est optionnelle après la dernière ligne, à moins qu’une commande
‘\hline’ suive, pour mettre un filet sous le tableau.

   Les arguments obligatoires et optionnels de ‘tabular’ consistent en :

‘largeur’
     Obligatoire pour ‘tabular*’, non autorisé pour ‘tabular’.  Spécifie
     la largeur de l’ environnement ‘tabular*’.  Il doit y avoir de
     l’espace élastique entre les colonnes, comme avec with
     ‘@{\extracolsep{\fill}}’, de sorte à permettre au tableau de se
     dilater ou contracter pour faire la largeur spécifiée, sans quoi
     vous aurez probablement l’avertissement ‘Underfull \hbox (badness
     10000) in alignment ..’.

‘pos’
     Optionnel.  Spécifie la position verticale du tableau.  La valeur
     par défaut est d’aligner le tableau de sorte à ce que son centre
     vertical s’accorder à la ligne de base du texte autour.  Il y a
     deux autres alignements possible : ‘t’ aligne le tableau de sorte
     que la première ligne s’accorde à la ligne de base du texte autour,
     et ‘b’ fait la même chose pour la dernière ligne du tableau.

     Ceci n’a un effet que si il y a du texte autour de la table.  Dans
     le cas usuel d’un ‘tabular’ seul au sein d’un environnement
     ‘center’ cette option ne fait aucune différence.

‘cols’
     Obligatoire.  Spécifie le formatage des colonnes.  Il consiste en
     une séquence des spécificateurs suivants, correspondant à la
     séquence des colonnes et du matériel intercolonne.

     ‘l’
          Une colonne d’articles alignés à gauche.

     ‘r’
          Une colonne d’article alignés à droite.

     ‘c’
          Une colonne d’article centrés.

     ‘|’
          Une ligne verticale s’étendant complètement sur la hauteur et
          profondeur de l’environnement.

     ‘@{TEXTE OU ESPACE}’
          Ceci insère TEXTE OU ESPACE à cette position dans chaque
          ligne.  Le matériel TEXTE OU ESPACE est composé en mode LR. Ce
          texte est fragile (*note \protect::).

          Ce spécificateur est optionnel : à moins que vous mettiez dans
          votre propre @-expression alors les classes ‘book’, ‘article’
          et ‘report’ de LaTeX mettent de chaque côté de chaque colonne
          un espace de longueur ‘\tabcolsep’, qui par défaut vaut ‘6pt’.
          C’est à dire que par défaut des colonnes adjacentes sont
          séparées de 12pt (ainsi ‘\tabcolsep’ est un nom trompeur
          puisque ce n’est pas la séparation entre des colonnes de
          tableau).  Aussi, par défaut un espace de 6pt vient après la
          première colonne ainsi qu’après la dernière colonne, à moins
          que vous placiez un ‘@{...}’ ou ‘|’ à cet endroit.

          Si vous l’emportez sur la valeur par défaut et utilisez une
          expression en ‘@{...}’ alors vous devez insérer tout espace
          désiré vous-même, comme dans ‘@{\hspace{1em}}’.

          Une expression vide ‘@{}’ élimine l’espace, y compris l’espace
          au début ou à la fin, comme dans l’exemple ci-dessous où on
          veut que les lignes du tableau soient alignées sur la marge de
          gauche.

               \begin{flushleft}
                 \begin{tabular}{@{}l}
                   ..
                 \end{tabular}
               \end{flushleft}

          Cet exemple montre du texte, une virgule de séparation
          décimale, entre les colonnes, arangé de sorte que les nombres
          dans la table sont alignés sur cette virgule.

               \begin{tabular}{r@{$,$}l}
                 $3$ &$14$  \\
                 $9$ &$80665$
               \end{tabular}

          Une commande ‘\extracolsep{LRG}’ au sein d’une expression en
          ‘@{...}’ a pour effet qu’une espace supplémentaire de largeur
          LRG apparaît sur la gauche de toutes les colonnes suivantes,
          jusqu’à contre-ordre d’une autre commande ‘\extracolsep’.
          Contrairement aux à espace inter-colonnes ordinaires, cette
          espace supplémentaire n’est pas supprimé par une expression en
          ‘@{...}’.  Une commande ‘\extracolsep’ peut uniquement être
          utilisée au sein d’une expression en ‘@{...}’ elle-même au
          sein de l’argument ‘cols’.

               \begin{center}
                 \begin{tabular*}{10cm}{l@{\ \ldots\extracolsep{\fill}}l}
                   Tomber sept fois, se relever huit
                   &c'est comme ça la vie !
                 \end{tabular*}
               \end{center}

          Pour insérer des commandes qui sont automatiquement exécutées
          avant une colonne donnée, charger le paquetage ‘array’ et
          utilisez le spécificateur ‘>{...}’.

     ‘p{LRG}’
          Chaque cellule de la colonne est composée au sein d’une parbox
          de largeur LRG, comme si c’était l’argument d’une commande
          ‘\parbox[t]{LRG}{...}’.

          Les sauts de ligne de type double-contr’oblique ‘\\’ ne sont
          pas permis au sein d’une telle cellule, sauf à l’intérieur
          d’un environnement comme ‘minipage’, ‘array’, ou ‘tabular’, ou
          à l’intérieur d’une ‘\parbox’ explicite, ou dans la portée
          d’une déclaration ‘\centering’, ‘\raggedright’, ou
          ‘\raggedleft’ (quand elles sont utilisées au sein d’une
          cellule de colonne en ‘p’ ces déclarations doivent apparaître
          entre accolades, comme dans ‘{\centering .. \\ ..}’.  Sans
          quoi LaTeX prendra la double contr’oblique comme une fin de
          ligne de tableau.  Au lieu de cela, pour obtenir un saut de
          ligne dans une cellule de ce type utilisez ‘\newline’ (*note
          \newline::).

     ‘*{NUM}{COLS}’
          Équivalent à NUM copies de COLS, où NUM est un entier positif
          et COLS est toute liste de spécificateurs.  Ainsi
          ‘\begin{tabular}{|*{3}{l|r}|}’ équivaut à
          ‘\begin{tabular}{|l|rl|rl|r|}’.  Notez que COLS peut contenir
          une autre expression en ‘*{...}{...}’.

   Paramètres qui contrôlent le formatage :

‘\arrayrulewidth’
     Une longueur qui est l’épaisseur du filet créé par ‘|’, ‘\hline’,
     et ‘\vline’ au sein des environnements ‘tabular’ et ‘array’.  La
     valeur par défaut est ‘.4pt’.  On peut la changer comme dans
     ‘\setlength{\arrayrulewidth}{0.8pt}’.

‘\arraystretch’
     Un facteur par lequel l’espacement entre les lignes au sein des
     environnements ‘tabular’ et ‘array’ est multiplié.  La valeur par
     défaut est ‘1’ pour aucune dilatation/contraction.  On peut la
     changer comme dans ‘\renewcommand{\arraystretch}{1.2}’.

‘\doublerulesep’
     Une longueur qui est la distance ente les filets verticaux produit
     par le spécificateur ‘||’.  La valeur par défaut est ‘2pt’.

‘\tabcolsep’
     Une longueur qui est la moitié de l’espace entre les colonnes.  La
     valeur par défaut est ‘6pt’.  On peut la changer avec ‘\setlength’

   Les commandes suivantes peuvent être utilisées à l’intérieur du corps
d’un environnement ‘tabular’ :

8.23.1 ‘\multicolumn’
---------------------

Synopsis :
     \multicolumn{NBRECOLS}{PATRON}{TEXTE}

   Fabrique une entrée de ‘array’ ou ‘tabular’ fusionnée sur plusieurs
colonnes.  Le premier argument, NBRECOLS spécifie le nombre de colonnes
sur lesquelles s’étend la fusion.  Le second argument, PATRON, est
obligatoire et spécifie le format de l’entrée ; notamment ‘c’ pour
centré, ‘l’ pour aligné à gauche, ‘r’ pour aligné à droite.  Le
troisième argument, TEXTE spécifie le texte à mettre dans l’entrée.

   Dans l’exemple suivant les trois première colonnes sont fusionnées en
le titre unique ‘Nom’.

     \begin{tabular}{lccl}
       \textit{ID}     &\multicolumn{2}{c}{\textit{Nom}} &\textit{Âge}\\ \hline % ligne 1
       978-0-393-03701-2 &O'Brian &Patrick                         &55            \\ % ligne two
         ...
     \end{tabular}

   On compte comme colonne chaque partie du patron PATRON de
l’environnement ‘array’ ou ‘tabular’ qui, à l’exception de la première,
commence par ‘l’, ‘c’, ‘r’, ou ‘p’.  Ainsi à partir de
‘\begin{tabular}{|r|ccp{4cm}|}’ les partie sont ‘|r|’, ‘c’, ‘c’,
et ‘p{1.5in}|’.

   L’argument PATRON l’emporte sur la spécification par défaut de zone
inter-colonne de l’environnement ‘array’ ou ‘tabular’ contigüe à cette
entrée multi-colonne.  Pour affecter cette zone, cet argument peut
contenir des barre verticale ‘|’ indiquant le placement de filets
verticaux, et d’expression ‘@{...}’.  Ainsi si PATRON est ‘|c|’ alors
l’entrée multi-colonne est centrée et un filet vertical la précède et la
suit dans les espaces intercolonne de part et d’autre.  Ce tableau nous
permet de décrire en détail le comportement exact.

     \begin{tabular}{|cc|c|c|}
       \multicolumn{1}{r}{w}       % entrée un
         &\multicolumn{1}{|r|}{x}  % entrée deux
         &\multicolumn{1}{|r}{y}   % entrée trois
         &z                        % entrée quatre
     \end{tabular}

   Avant la première entrée il n’y a pas de filet verticale en sortie
parce que le ‘\multicolumn’ a le spécificateur ‘r’ dans PATRON sans
barre verticales initiale.  Entre les entrée un et deux il y a un filet
vertical ; en effet bien que le premier PATRON ne se termine pas par une
barre verticale, le second PATRON en a une à son commencement.  Entre la
deuxième et la troisième entré il y a un seul filet vertical ; bien que
le PATRON dans les deux ‘multicolumn’ correspondant demandent un filet
vertical, vous n’en obtenez qu’un seul.  Entre les entrée trois et
quatre il n’y a aucun filet vertical ; la spécification par défaut en
demande un mais le PATRON dans le ‘\multicolumn’ de la troisième entrée
n’en demande pas, et cela l’emporte.  Finalement, à la suite de la
quatrième entrée il y a un filet vertical à cause de la spécification
par défaut.

   Le nombre de colonnes fusionnées NBRECOLS peut être 1.  En plus de
donner la possibilité de changer l’alignement horizontal, ceci est aussi
utile pour l’emporter pour l’une des ligne sur la définition ‘tabular’
par défaut de la zone inter-colonne, y compris concernant le placement
des filets verticaux.

   Dans l’exemple ci-dessous, dans la définition ‘tabular’ de la
première colonne on spécifie par défaut de justfier, mais au sein de la
première ligne l’entrée est centrée avec
‘\multicolumn{1}{c}{\textsc{Période}}’.  De même au sein de la première
ligne, les deuxième et troisième colonnes sont fusionnées entre elle
avec ‘\multicolumn{2}{c}{\textsc{Intervalle}}’, l’emportant sur la
spécification pour centrer ces deux colonnes sur le trait d’union au
sein de la plage de dates.

     \begin{tabular}{l|r@{-}l}
       \multicolumn{1}{c}{\textsc{Période}}
         &multicolumn{2}{c}{\textsc{Dates}} \\ \hline
       Baroque          &1600           &1760         \\
       Classique        &1730           &1820         \\
       Romantique       &1780           &1910         \\
       Impressioniste   &1875           &1925
     \end{tabular}

   Noter ue bien que la spécification ‘tabular’ par défaut place un
filet vertical etre la première et la deuxième colonne, du fait qu’il
n’y pas pas de barre verticale dans aucun des patrons PATRON des
commandes ‘\multicolumn’ des deux premières colonne, alors aucun filet
n’apparaît sur la première ligne.

8.23.2 ‘\cline’
---------------

Synopsis :

     \cline{I-J}

   La commande ‘\cline’ dessine des lignes horizontales à travers les
colonnes spécifiées en arguments obligatoires, en commençant dans la I
et finissant dans la colonne J.

8.23.3 ‘\hline’
---------------

La commande ‘\hline’ dessine une ligne horizontale de la largeur de
l’environnement ‘tabular’ ou ‘array’ surjacent.  Elle est la plupart du
temps utilisé pour dessiner une ligne au sommet, bas, et entre les
lignes d’un tableau.

8.23.4 ‘\vline’
---------------

La commande ‘\vline’ dessine une ligne verticale s’étendant sur la
totalité de la hauteur et de la profondeur de sa ligne.  Une commande
‘\hfill’ peut être utilisée pour déplacer cette ligne verticale vers le
bord de la colonne.  La commande ‘\vline’ peut aussi être utilisée dans
une expression ‘@{...}’.

8.24 ‘thebibliography’
======================

Synopsis :

     \begin{thebibliography}{ÉTIQUETTE-LA-PLUS-LARGE}
     \bibitem[ÉTIQUETTE]{CLEF_DE_CITE}
     ...
     \end{thebibliography}

   L’environnement ‘thebibliography’ produit une bibliographie ou une
liste de références.  Il y a deux façons de produire des listes
bibliographiques.  Cet environnement convient quand vous avez un petit
nombre de références et pouvez maintenirla liste manuellement.  *Note
Using BibTeX::, pour une approche plus sophistiquée.

   L’exemple ci-dessous illustre l’environnement avec deux articles.

     Ce travail s'appuie sur \cite{latexdps}.
     Et ensemble à \cite{latexdps, texbook}.
       ...
     \begin{thebibliography}{9}
     \bibitem{latexdps}
       Leslie Lamport.
       \textit{\LaTeX{}: a document preparation system}.
       Addison-Wesley, Reading, Massachusetts, 1993.
     \bibitem{texbook}
       Donald Ervin Knuth.
       \textit{Le Texbook : Composition informatique}.
       Vuibert, 1er août 2017.\end{thebibliography}

Cela formate la première référe,ce comme ‘[1] Leslie ...’, de sorte que
‘... s'appuie sur \cite{latexdps}’ produit ‘... s'appuie sur [1]’.  Le
second ‘\cite’ produit ‘[1, 2]’.  On doit compile le document deux fois
pour que ces numéros de référence soient résolus.

   L’argument obligatoire ÉTIQUETTE-LA-PLUS-LARGE est un texte qui,
lorsqu’il est composé, est aussi large que la plus large des étiquettes
d’article produit pas les commandes ‘\bibitem’.  Traditionnellement on
utilise ‘9’ pour des bibliographies de moins de 10 références, ‘99’ pour
celles qui en on moins de 100, etc.

   La liste bibliographique a un titre de bibliographie tel que
‘Bibliographie’.  Pour le changer il y a deux cas.  Dans les classes
‘book’ et ‘report’, lorsque le niveau de rubricage le plus élevé est
‘\chapter’ et le titre par défaut ‘Bibliographie’, ce titre est dans la
macro ‘\bibname’.  Pour ‘article’, lorsque le niveau de rubricage le
plus élevé est ‘\section’ et que le titre par défaut est ‘Références’,
le titre est stocké dans la macro ‘\refname’.  Pour le changer
redéfinissez la commande, comme dans ‘\renewcommand{\refname}{Références
citées}’, après ‘\begin{document}’.

   Les paquetages de prise en charge linguistique comme ‘babel’
redéfinissent automatiquement ‘\refname’ ou ‘\bibname’ pour s’adapter à
la langue sélectionnée.

   *Note list::, pour les paramètres de contrôle de disposition de la
liste.

8.24.1 ‘\bibitem’
-----------------

Synopsis :

     \bibitem{CLEF_DE_CITE}

ou :

     \bibitem[ÉTIQUETTE]{CLEF_DE_CITE}

   La commande ‘\bibitem’ génère un article étiqueté par défaut par un
numéro généré en utilisant le compteur ‘enumi’.  L’argument CLEF_DE_CITE
est une “clef de référence bibiliographique” consistant en une chaîne
quelconque de lettres, chiffres, et signes de ponctuation (hormis la
virgule).

   *Note thebibliography::, pour un exemple.

   L’argument optionnel ÉTIQUETTE, lorsqu’il est présent, sert
d’étiquette et le compteur ‘enumi’ n’est pas incrémenté.  Dans l’exemple
suivant :

     \begin{thebibliography}
     \bibitem[Lamport 1993]{latexdps}
       Leslie Lamport.
       \textit{\LaTeX{}: a document preparation system}.
       Addison-Wesley, Reading, Massachusetts, 1993.
     \bibitem{texbook}
       Donald Ervin Knuth.
       \textit{Le Texbook : Composition informatique}.
       Vuibert, 1er août 2017.
     \end{thebibliography}

le premier article est formaté comme ‘[Lamport 1993] Leslie ...’ (la
quantité d’espace horizontal que LaTeX laisse pour l’étiquette dépend de
l’argument ÉTIQUETTE-LA-PLUS-LARGE de l’environnement
‘thebibliography’ ; voir *note thebibliography::).  De même, ‘...
s'appuyant sur \cite{latexdps}’ produit ‘... s'appuyant sur [Lamport
1994]’.

   Si vous mélangez des articles ‘\bibitem’ avec et sans ÉTIQUETTE,
alors LaTeX numérote ceux sans séquentiellement.  Dans l’exemple
ci-dessus l’article ‘texbook’ apparaît comme ‘[1] Donald ...’, bien que
ce soit le deuxième article.

   Si vous utilisez la même CLEF_DE_CITE deux fois, alors vous obtenez
‘LaTeX Warning: There were multiply-defined labels’.

   En coulisse, LaTeX se souvient de l’information CLEF_DE_CITE et
ÉTIQUETTE parce que ‘\bibitem’ écrit dans le fichier auxiliaire
‘JOBNAME.aux’ (*note Jobname::).  Par exemple dans l’exemple ci-dessus
ce fichier contient ‘\bibcite{latexdps}{Lamport, 1993}’ et
‘\bibcite{texbook}{1}’.  Le fichier ‘.aux’ est lu par la commande
‘\begin{document}’ et alors l’information devient disponible pour les
commandes ‘\cite’.  Ceci explique qu’il est nécessaire d’exécuter LaTeX
deux fois pour que les références soient résolues : une pour l’écrire,
et une pour le relire.

   À cause de cet algorithme en deux passes, quand vous ajourez un
‘\bibitem’ ou changez sa CLEF_DE_CITE vous pouvez obtenir ‘LaTeX
Warning: Label(s) may have changed. Rerun to get cross-references
right’.  La solution est de recompiler.

8.24.2 ‘\cite’
--------------

Synopsis :

     \cite{CLEFS}

ou

     \cite[SUBCITE]{CLEFS}

   Cette commande génère en sortie une citation des références associées
à CLEFS.  L’argument CLEFS est une liste d’une ou plus de clefs de
références bibliographiques (*note \bibitem::), séparées par des
virgules.

   L’exemple suivant :

     La source ultime est \cite{texbook}.
       ...
     \begin{thebibliography}
     \bibitem{texbook}
       Donald Ervin Knuth.
       \textit{Le Texbook : Composition informatique}.
       Vuibert, 1er août 2017.
     \end{thebibliography}

produit une sortie du genre ‘... ultime est [1]’.  (Vous pouvez changer
l’apparence de la citation et de la référence en utilisant un style de
bibliographie si vous générez automatiquement l’environnement
‘thebibliography’.  *Note Using BibTeX:: pour plus ample information).

   L’argument optionnel SUBCITE est joint à la citation.  Par exemple,
‘Voir 14.3 dans \cite[p.~314]{texbook}’ pourrait produire ‘Voir 14.3
dans [1, p. 314]’.

   En plus de ce qui apparaît en sortie, ‘\cite’ écrit de l’information
dans le fichier auxiliaire ‘JOBNAME.aux’ (*note Jobname::).  Par
exemple, ‘\cite{latexdps}’ écrit ‘\citation{latexdps}’ dans ce fichier.
Cette information est utilisée par BibTeX pour inclure dans vos listes
de référence seulement les ouvrages que vous avez effectivement cités ;
voir aussi *note \nocite::.

   Si CLEFS n’est pas dans votre information de bibliographie, alors
vous obtenez ‘LaTeX Warning: There were undefined references’, et en
sortie la citation s’affiche comme un point d’interrogation en gras
entre crochets.  Il y a deux causes possibles.  Si vous avez fait une
faute de frappe, comme dans ‘\cite{texbok}’ alors il n’y a qu’à la
corriger.  Si par contre vous venez juste d’ajouter ou de modifier
l’information bibliographique de sorte que le fichier ‘.aux’ est modifié
(*note \bibitem::) alors la solution est d’exécuter de nouveau LaTeX.

8.24.3 ‘\nocite’
----------------

Synopsis :

     \nocite{CLEFS}

   La commande ‘\nocite’ ne produit aucun texte en sortie, mais écrit
CLEFS dans le fichier auxiliaire ‘JOBNAME.aux’ (*note Jobname::).

   L’argument obligatoire CLEFS est une liste d’une ou plusieurs clefs
de référence bibliograhique (*note \bibitem::).  Cette information est
utilisée par BibTeX pour inclure ces ouvrages dans votre liste de
références même si vous ne les avez pas cités explicitement (*note
\cite::).

8.24.4 Utilisation de BibTeX
----------------------------

Comme déscrit dans ‘thebibliography’ (*note thebibliography::), une
approche sophistiqué pour gérer les bibliographies est fournie par le
programme BibTeX.  Ceci est uniquement une introduction ; voir la
documentation complète sur le CTAN (*note CTAN::).

   Avec BibTeX vous n’utilisez pas ‘thebibliography’ (*note
thebibliography::).  Au lieu de cela, vous incluez les lignes :

     \bibliographystyle{STYLEBIB}
     \bibliography{FICBIB1,FICBIB2, ...}

L’argument STYLEBIB fait référence à un fichier ‘STYLEBIB.bst’
définissant l’aspect que doivent avoir vos référence bibliographique.
Les noms STYLEBIB standards distribués avec BibTeX sont :

‘alpha’
     Les étiquettes sont formées à partir du nom de l’auteur et de
     l’année de publication.  Les articles bibliographiques sont classés
     alphabetiquement.
‘plain’
     Les étiquettes sont des numéros.  Les articles sont classés
     alphabétiquement.
‘unsrt’
     Comme ‘plain’, mais les entrées sont dans l’ordre où les références
     y sont faites dans le texte.
‘abbrv’
     Comme ‘plain’, mais les étiquettes sont plus compactes.

De très nombreux autres styles BibTeX existent, taillés sur mesure pour
satisfaire les exigences de diverses publications.  Voir la liste du
CTAN <http://mirror.ctan.org/biblio/bibtex/contrib>.

   La commande ‘\bibliography’ est ce qui produit pour de bon la
bibliographie.  L’argument de ‘\bibliography’ fait référence aux
fichiers nommés ‘FICBIB1.bib’, ‘FICBIB2.bib’, ..., qui sont censés
contenir votre base de données au format BibTeX.  L’exemple suivant
illustre une paire typique d’entrées dans ce format.

     @book{texbook,
       title     = {Le {{\TeX}}book~: composition informatique},
       author    = {D.E. Knuth},
       isbn      = {2-7117-4819-7},
       series    = {Vuibert informatique},
       year      = {2003},
       publisher = {Vuibert}
     }
     @book{sexbook,
         author    = {W.H. Masters and V.E. Johnson},
         title     = {Les r{\'e}action sexuelles},
         year      = {1976},
         publisher = {Robert Laffont}
     }

   Seules les entrées désignées par les commandes ‘\cite’ ou ‘\nocite’
sont listées dans la bibliographie du document.  De la sorte, vous
pouvez conserver toutes vos sources ensemble dans un fichier, ou un
petit nombre de fichiers, et compter sur BibTeX pour inclure dans le
document seulement celles que vous avez utilisées.

8.25 ‘theorem’
==============

Synopsis :

     \begin{theorem}
       CORPS DU THÉORÈME
     \end{theorem}

   L’environnement ‘theorem’ produit « Théorème N » en gras suivi de
CORPS DU THÉORÈME, où les possibilités de numérotation pour N sont
décrites par ‘\newtheorem’ (*note \newtheorem::).

     \newtheorem{lem}{Lemme}      % dans le préambule
     \newtheorem{thm}{Théorème}
       ...
     \begin{lem}                  % dans le corps du document
       texte du lemme
     \end{lem}

     Le résultat suivant en découle immédiatement.
     \begin{thm}[Gauss] % place « Gauss » entre parenthèses après le titre
       texte du théorème
     \end{thm}

   La plupart des nouveaux documents utilisent les paquetages ‘amsthm’
et ‘amsmath’ de l’American Mathematical Society.  Entre autres ces
paquetages incluent un grand nombre d’options pour les environnements de
théorèmes, telles que des options de formatage.

8.26 ‘titlepage’
================

Synopsis :

     \begin{titlepage}
       ... texte et espacement ...
     \end{titlepage}

   L’environnement ‘titlepage’ crée une page de titre, c’est à dire une
page sur laquelle ne sont inscrit aucun numéro de page ou libellé de
rubrique.  Il entraîne aussi que la page suivante a le numéro un.

   Dans l’exemple suivant tout le formatage, y compris l’espacement
vertical, est laissé à l’auteur.

     \begin{titlepage}
     \vspace*{\stretch{1}}
     \begin{center}
       {\huge\bfseries Thèse \\[1ex]
                       titre}                  \\[6.5ex]
       {\large\bfseries Nom de l'auteur}           \\
       \vspace{4ex}
       Thèse soumise à                    \\[5pt]
       \textit{Nom de l'université}                \\[2cm]
       pour obtenir le grade de \\[2cm]
       \textsc{\Large Docteeur en}    \\[2ex]
       \textsc{\large Mathématiques}             \\[12ex]
       \vfill
       Departement de Mathématiques               \\
       Adresse                                 \\
       \vfill
       \today
     \end{center}
     \vspace{\stretch{2}}
     \end{titlepage}

   Pour produire par contre une une page de titre standarde sans
utiliser l’environnement ‘titlepage’, utilisez la commande ‘\maketitle’
(*note \maketitle::).

8.27 ‘verbatim’
===============

Synopsis :

     \begin{verbatim}
     TEXTE-LITÉRAL
     \end{verbatim}

   L’environnement ‘verbatim’ est un environnement qui fabrique des
paragraphes dans lequel LaTeX produit exactement ce qui vous y tapez.
Par exemple au sein de TEXTE-LITÉRAL le caractère ‘\’ ne commence pas de
commande, il produit ‘\’ à l’impression, et les retour chariot et les
blancs sont pris littéralement.  La sortie appraraît dans une police
genre tapuscrit (encore appelé « machine à écrire ») à chasse fixe
(‘\tt’).

     \begin{verbatim}
     Juron symbolique : %&$#?!.
     \end{verbatim}

   La seule restriction sur ‘text-literale’ est qu’il ne peut pas
inclure la chaîne ‘\end{verbatim}’.

   Il est impossible d’utiliser l’environnement ‘verbatim’ au sein d’un
argument de macro, par exemple dans l’argument passé à ‘\section’.  Ce
n’est pas le même problème que celui des commandes fragiles (*note
\protect::), mais c’est juste impossible parce que l’environnement
‘verbatim’ change le régime de catcode avant de traiter son contenu, et
le rétablit juste après, or au sein d’un argument de macro le contenu de
l’argument est déjà converti en une liste d’unités lexicales selon le
régime de catcode courant à l’appel de la macro.  Cependant, le
paquetage ‘cprotect’ peut être utile dans cette situation.

   Une utilisation courante d’entrée verbatim est de composer du code
informatique.  Il y a des paquetages qui améliorent l’environnement
‘verbatim’.  Par exemple, une amélioration est de permettre l’inclusion
verbatim de fichiers externes, totalement ou en partie.  Parmi ces
paquetages : ‘listings’ et ‘minted’.

   Un paquetage qui offre beaucoup plus d’options pour les
environnements verbatim est ‘fancyvrb’.  Un autre ‘verbatimbox’.

   Pour une liste complète de tous les paquetages pertinents voir le
CTAN (*note CTAN::).

8.27.1 ‘\verb’
--------------

Synopsis :

     \verbCARTEXTE-LITTÉRALCAR
     \verb*CARTEXTE-LITTÉRALCAR

   La commande ‘\verb’ compose TEXTE-LITTÉRAL comme il est entré, en
incluant les caractères spéciaux et les espaces, en utilisant la police
tapuscrit (‘\tt’).  Aucun espaces n’est autorisé entre ‘\verb’ ou
‘\verb*’ et le délimiteur CAR qui marque le début et la fin du texte
verbatim.  Le délimiteur ne doit pas aparaître dans le TEXTE-LITTÉRAL.

   La forme étoilée (en ‘*’) diffère seulement en ce que les espaces
sont tapés avec un caractère « espace visible ».

   La sortie correspondant à ce qui suit utilise un espace visible de
part et d’autre du mot ‘with’ :

     Le premier argument de la commande est \verb*!filename with extension! et ...

   Pour composer des adresses réticulaires, appelée aussi URL, le
paquetage ‘url’ est une option préférable à la commande ‘\verb’, puisque
il permet les sauts de ligne.

   Pour du code informatique il y a beaucoup de paquetages plus
avantageux que ‘\verb’.  L’un est ‘listings’, un autre ‘minted’.

   Vous ne pouvez pas utiliser ‘\verb’ au sein d’un argument de macro,
par exemple dans l’argument passé à ‘\section’.  Ce n’est pas une
question que ‘\verb’ serait fragile (*note \protect::), mais c’est juste
impossible parce que la commande ‘\verb’ change le régime de catcode
avant de lire son argument et le rétablit juste après, or au sein d’un
argument de macro le contenu de l’argument a déjà été converti en une
liste d’unités lexicales selon le régime de catcode courant l’appel de
la macro.  Cependant, le paquetage ‘cprotect’ peut être utile dans cette
situation.

8.28 ‘verse’
============

Synopsis :

     \begin{verse}
       LINE1 \\
       LINE2 \\
     ...
     \end{verse}

   L’environnement ‘verse’ est conçu pour la poésie, bien que vous
pouvez lui trouver d’autres usages.

   Les marges sont renfoncées sur la gauche et la droite, les
paragraphes ne le sont pas, et le texte n’est pas justifié.  Séparez le
ligne de chaque strophe avec ‘\\’, et utilisez une ou plusieurs lignes
vides pour séparer les strophes.

9 Saut à la ligne
*****************

La première chose que LaTeX fait lorsqu’il traite du texte ordinaire est
de traduire votre fichier d’entrée en une séquence de glyphes et
d’espaces.  Pour produire un document imprimé, cette séquence doit être
rompue en lignes (et ces lignes doivent être rompues en pages).

   D’ordinaire LaTeX effectue la rupture de ligne (et de page) pour
vous, mais dans certains environnements, vous faites la rupture
vous-même avec la commande ‘\\’, et vous pouvez toujours forcer
manuellement les ruptures.

9.1 ‘\\’
========

Synopsis :

     \\[ESPACEENPLUS]

   ou

     \\*[ESPACEENPLUS]

   Commencer une nouvelle ligne.  L’argument optionnel ESPACEENPLUS
spécifie l’espace supplémentaire vertical à insérer avant la ligne
suivante.  Ceci peut être une longueur négative.  Le texte avant le saut
est composé à sa longueur normale, c.-à-d. qu’il n’est pas dilaté pour
remplir la largeur de la ligne.

   Les sauts de ligne explicites au sein du corps de texte sont
inhabituels en LaTeX.  en particulier, pour commencer un nouveau
paragraphe laissez plutôt une ligne à blanc.  Cette commande est
utilisée principalement en dehors du flux principal de texte comme dans
un environnement ‘tabular’ ou ‘array’.

   Dans des circonstances ordinaires (par ex. en dehors d’une colonne
spécifiée par ‘p{...}’ dans un environnement ‘tabular’) la commande
‘\newline’ est un synonyme de ‘\\’ (*note \newline::).

   En plus de commencer une nouvelle ligne, la forme étoilée ‘\\*’ dit à
LaTeX de ne pas commencer une nouvelle page entre les deux lignes, en
émettant un ‘\nobreak’.

     \title{Mon histoire~: \\[7mm]
            un conte pathétique}

9.2 ‘\obeycr’ & ‘\restorecr’
============================

La commande ‘\obeycr’ a pour effet qu’un retour chariot dans le fichier
d’entrée (‘^^M’, internement) soit traité de la même façon que ‘\\’
suivi d’un ‘\relax’.  Ainsi chaque passage à la ligne dans l’entrée est
aussi un passage à la ligne dans la sortie.  La commande ‘\restorecr’
restaure le comportement normal vis à vis des sauts de ligne.

9.3 ‘\newline’
==============

Dans du texte ordinaire ceci est équivalent à une double-contr’oblique
(*note \\::) ; cela rompt la ligne, sans dilatation du texte le
précéndent.

   Au sein d’un environnement ‘tabular’ ou ‘array’, dans une colonne
avec un specificateur produisant une boîte paragraphe, comme typiquement
‘p{..}’, ‘\newline’ insère un saut de ligne au sein de la colonne,
c.-à-d. insère un saut de ligne à l’intérieur de la colonne, c.-à-d.
qu’il ne rompt pas la ligne entière.  Pour rompre la ligne entière
utilisez ‘\\’ ou son équivalent ‘\tabularnewline’.

   L’exemple suivant écrit ‘Nom~:’ et ‘Adresse~:’ comme deux ligne ain
sein d’une seule cellule du tableau.

     \begin{tabular}{p{2.5cm}{\hspace{5cm}}p{2.5cm}}
       Nom~: \newline Adresse~: &Date~: \\ \hline
     \end{tabular}

   La ‘Date~:’ sera alignée sur la ligne de base de ‘Nom~:’.

9.4 ‘\-’ (césure à gré)
=======================

La commande ‘\-’ commande dit à LaTeX qu’il peut faire une césure du
mode à cet endroit.  LaTeX est très bon en ce qui concerne les césures,
et il trouve la plupart des points corrects de césure, tout en n’en
utilisant presque jamais un incorrect.  La commande ‘\-’ est commande
est utilisée pour les cas exceptionnels.

   Quand vous insérez des commandes ‘\-’ dans un mot, le mot ne pourra
avoir de césure qu’à ces endroit et non dans aucun des points de césure
que LaTeX aurait pu choisir sinon.

9.5 ‘\discretionary’ (point de césure généralisé)
=================================================

Synopsis :

     \discretionary{AVANT-SAUT}{APRÈS-SAUT}{SANS-SAUT}

   La commande ‘\discretionary’ permet de contrôler finement la césure
dans les cas où ne suffisent ni le contrôle standard de la césure fait
l’algorithme de césure de TeX et les règles de césures données par les
paquetages de gestion linguistiques, ni les moyens de contrôle
explicites offerts par les commandes ‘\hyphenation’ (*note
\hyphenation::) et ‘\-’ (*note \- (césure à gré): \- (hyphenation).).

   ‘\discretionary’ indique qu’un saut de ligne est possible à cet
endroit.  Dans le cas d’un saut de ligne, le texte AVANT-SAUT est placé
immédiatement avant le saut, et le texte APRÈS-SAUT immédiatement après.
Dans le cas sans saut de ligne le texte SANS-SAUT est imprimé.

   Les arguments de ‘\discretionary’ ne peuvent contrenir que des
caractères, des boîtes ou des crénages.

   L’usage typique de ‘\discretionary’ est par exemple de contrôler la
césure au sein d’une formule mathématique en mode ligne (voir aussi
*note Miscellanées mathématique (entrée \*): Math miscellany.).
Ci-dessous un exemple de contrôle de la césure au sein d’une adresse
réticulaire, où l’on autorise la césure sur les obliques mais en
utilisant une contr’oblique violette en lieu de trait d’union :

     \documentclass{article}
     \usepackage[T1]{fontenc}
     \usepackage[utf8]{inputenc}
     \usepackage{xcolor}
     \usepackage{hyperref}
     \usepackage{french}
     \newcommand*\DiscrSlash{\discretionary{\mbox{\textcolor
      {purple}{\textbackslash}}}{/}{/}}
     \begin{document}
     Allez donc à \href{http://une/tr\%c3\%A8s/tr\%c3\%A8s/longue%
       /mais/vraiment/tr\%c3\%A8s/longue/adresse/r\%C3\%A9ticulaire%
       /index.html}{http://une\DiscrSlash très\DiscrSlash très\DiscrSlash
       longue\DiscrSlash mais\DiscrSlash vraiment\DiscrSlash
       très\DiscrSlash longue\DiscrSlash adresse\DiscrSlash
       réticulaire\DiscrSlash index.html}
     \end{document}

9.6 ‘\fussy’
============

La déclaration ‘\fussy’ (ce qui est le réglage par défaut) a pour effet
que TeX fait le difficile à propos des saut de ligne.  Ceci évite
d’ordinaire trop d’espace entre les mots, au prix d’occasionnellement
une boîte trop pleine (‘overfull \hbox’).

   Cette commande annule l’effet d’une commande ‘\sloppy’ précédente
(*note \sloppy::).

9.7 ‘\sloppy’
=============

La déclaration ‘\sloppy’ a pour effet que TeX fasse moins le difficile à
propos des sauts de ligne.  Ceci evite les boîtes trop pleines, au prix
d’un espacement lâche entre les mots.

   L’effet dure jusqu’à la prochaine commande ‘\fussy’ (*note \fussy::).

9.8 ‘\hyphenation’
==================

Synopsis :

     \hyphenation{MOT-UN MOT-DEUX}

   La commande ‘\hyphenation’ déclare les points de césure autorisé avec
un caratère ‘-’ au sein des mots donnés.  Les mots sont séparés par des
espaces.  TeX ne fera de césure que si le mot correspond exactement,
aucune désinence n’est essayée.  Des commandes ‘\hyphenation’ mutliple
s’accumulent.  Voici quelques exemples en anglais (les motifs de césure
par défaut de TeX manquent les césures de ces mots) :

     \hyphenation{ap-pen-dix col-umns data-base data-bases}

9.9 ‘\linebreak’ & ‘\nolinebreak’
=================================

Synopsis :

     \linebreak[PRIORITÉ]
     \nolinebreak[PRIORITÉ]

   Par défaut, la commande ‘\linebreak’ (‘\nolinebreak’) force (empêche)
un saut de ligne à la position courante.  Pour ‘\linebreak’, les espaces
de la ligne sont dilatés jusqu’à ce qu’elle s’étende jusqu’à la marge de
droite, comme d’habitude.

   Avec l’argument optionnel PRIORITÉ, vous pouvez convertir la commande
d’une simple demande à une requête.  La PRIORITÉ doit être un nombre
compris entre 0 et 4.  Plus ce nombre est grand, et plus la requête est
insistante.

10 Saut de page
***************

LaTeX commence de nouvelles pages de façon asynchrone, lorsque
suffisamment de matériel a été accumulé pour remplir une page.
D’ordinaire ceci se produit automatiquement, mais parfois on peut
désirer influencer les sauts.

10.1 ‘\clearpage’ & ‘\cleardoublepage’
======================================

La commande ‘\cleardoublepage’ finit la page courante et fait que LaTeX
imprime tous les flottants, tableaux et figures, qui sont apparus en
entrée jusqu’à ce point et sont en attente.  Dans le cas d’une
impression en style ‘twoside’, elle fait aussi que la nouvelle page et
une page de droite (numérotée impaire), en produisant si nécessaire une
page à blanc.

   La commande ‘\clearpage’ finit la page actuelle et fait que LaTeX
imprime tous les flottants, tableaux et figures, qui sont apparus en
entrée jusqu’à ce point et sont en attente.

10.2 ‘\newpage’
===============

Synopsis :

     \newpage

   La commande ‘\newpage’ finit la page courante.  Cette commande est
robuste (*note \protect::).

   Les sauts de page de LaTeX sont optimisés de sorte que d’ordinaire on
n’utilise cette commande dans le corps d’un document que pour les
finitions sur la version finale, ou à l’interieur de commandes.

   Alors que les commandes ‘\clearpage’ et ‘\cleardoublepage’ finissent
également la page courante, en plus de cela elles débourrent les
flottants pendants (*note \clearpage & \cleardoublepage::).  Et, si
LaTeX est en mode à deux colonne alors ‘\clearpage’ et
‘\cleardoublepage’ finissent las page courante en laissant possiblement
une colonne vide, alors que ‘\newpage’ finit seulement la colonne
courante.

   Contrairement à ‘\pagebreak’ (*note \pagebreak & \nopagebreak::), la
commande ‘\newpage’ n’a pas pour effet que la nouvelle page commence
exactement là où la requête est faite.  Dans l’exemple suivant

     Four score and seven years ago our fathers brought forth on this
     continent,
     \newpage
     \noindent a new nation, conceived in Liberty, and dedicated to the
     proposition that all men are created equal.

la nouvelle page commence après ‘continent’, et la ligne où se produit
le saut n’est pas justifiée à droite.  De plus, ‘\newpage’ n’étire pas
verticalement la page, contrairement à ‘\pagebreak’.

10.3 ‘\enlargethispage’
=======================

‘\enlargethispage{size}’

   ‘\enlargethispage*{size}’

   Agrandit la ‘\textheight’ de la page courante de la quantité
spécifiée ; par exemple ‘\enlargethispage{\baselineskip}’ permet d’avoir
une ligne de plus.

   La forme étoilée essaie de comprimer le matériel sur la page autant
que possible.  Ceci est normalement utilisé en même temps qu’un
‘\pagebreak’ explicite.

10.4 ‘\pagebreak’ & ‘\nopagebreak’
==================================

Synopsis :

     \pagebreak[PRIORITÉ]
     \nopagebreak[PRIORITÉ]

   Par défaut, la commande ‘\pagebreak’ (‘\nopagebreak’) force (empèche)
un saut de page à la position courante.  Avec ‘\pagebreak’, l’espace
verticale sur la page est dilatée où c’est possible de sorte à s’étendre
jusqu’à la marge inférieure normale.

   Avec l’argument optionnel PRIORITÉ, vous pouvez convertique la
commande ‘\pagebreak’ d’une demande à une exigence.  Le nombre doit être
compris entre 0 et 4.  Plus grand est le nombre, et plus insistant est
l’exigence.

11 Note en bas de page
**********************

Mettez une note en bas de la page courante avec la commande ‘\footnote’
comme ci-dessous.

     Noël Coward a dit plaisamment que lire une note en bas de page, c'est
     comme devoir descendre répondre à la porte d'entrée alors qu'on est en
     train de faire l'amour\footnote{Je ne peux pas le savoir ; je ne lis
     jamais les notes en bas de page}

   Vous pouvez placer beaucoup de notes en bas de page dans une page.
Si le texte devient trop long alors il est continué sur la page
suivante.

   Vous pouvez aussi produire des notes en bas de page en combinant les
commandes ‘\footnotemark’ et ‘\footnotetext’, ce qui est utiles dans des
circonstances speciales.

11.1 ‘\footnote’
================

Synopsis :

     \footnote[NUMÉRO]{TEXTE}

   Place en bas de la page courante une note TEXTE numérotée.

     Il y a plus d'un milier de notes en bas de page dans \textit{Histoire
     Du Déclin Et De La Chute De L'empire Romain}\footnote{Après la lecture
     d'une version préléminaire, David Hume s'est plaint, « On souffre d'un
     fléau avec ces notes, selon la méthode acutelle d'imprimer le livre » et
     il suggera qu'elles « ne soient seulement imprimée dans la marge ou en
     bas de page »} d'Édouard Gibbon.

   L’argument optionnel NUMÉRO vous perme de spécifier le numéro de la
note.  Le compteur ‘footnote’ donnant le numéro de la note n’est pas
incrémenté si vous utilisez cette option, mais l’est dans le cas
contraire.

   Changez l’aspect que LaTeX donne au compteur de note en bas de page
avec quelque chose du genre de
‘\renewcommand{\thefootnote}{\fnsymbol{footnote}}’, ce qui utilise une
séquence de symboles (*note \alph \Alph \arabic \roman \Roman
\fnsymbol::).  Pour rendre ce changement global mettez cela dans le
préambule.  Si vous faite ce changement local alors vous désirerez sans
doute réinitialiser le compte avec ‘\setcounter{footnote}{0}’.  Par
défaut LaTeX utilise des nombres arabes.

   Le comportement par défaut de LaTeX met beaucoup de restrictions sur
l’endroit où l’on peut utiliser une ‘\footnote’ ; par exemple, vous ne
pouvez pas l’utiliser dans l’argument d’une commande de rubricage telle
que ‘\chapter’ (elle ne peut être utilisée seulement en mode paragraphe
le plus externe).  Il y a des contournements ; voir les rubriques
suivantes.

   Au sein d’un environnement ‘minipage’ la commande ‘\footnote’ utilise
le compteur ‘mpfootnote’ au lieu de ‘footnote’, de sorte que les notes
sont numérotéee indépendemment.  Elles apparaissent au bas de
l’environnement, et non au bas de la page.  Et par défaut elles
apparaissent alphabétiquement.  *Note minipage::.

11.2 ‘\footnotemark’
====================

Synopsis :

     \footnotemark

   Sans l’argument optionnel, la commande ‘\footnotemark’ place dans le
texte le numéro de la note courante.  Cette commande peut être utilisée
en mode paragraphe interne.  Vous pouvez donner le texte de la note
séparément la commande ‘\footnotetext’.

   Cette commande pour produire plusieurs marque de note en bas de page
faisant référence à la même note avec

     \footnotemark[\value{footnote}]

après la première commande ‘\footnote’.

11.3 ‘\footnotetext’
====================

Synopsis, l’un des deux :

     \footnotetext{TEXTE}
     \footnotetext[NUMÉRO]{TEXTE}

   Place TEXTE au bas de la page comme une note en bas de page.  Cette
This commande peut appraître n’importe où après la commande
‘\footnotemark’.  L’argument optionnel NUMÉRO change le numéro de note
affiché.  La commande ‘\footnotetext’ ne doit être utilisée qu’en mode
paragraphe externe.

11.4 Notes en bas de page dans un tableau
=========================================

Au sein d’un environnement ‘table’ la commande ‘\footnote’ ne fonctionne
pas.  Par exemple, si le code ci-dessous apparaît sans plus alors la
note disapaît tout simplement ; il y aura une marque de note dans la
cellule du tableau mais rien n’est composé en bas de la page.

     \begin{center}
          \begin{tabular}{l|l}
          \textsc{Ship}  &\textsc{Book} \\ \hline
          \textit{HMS Sophie}     &Master and Commander  \\
          \textit{HMS Polychrest} &Post Captain  \\
          \textit{HMS Lively}     &Post Captain \\
          \textit{HMS Surprise}   &A number of books\footnote{Starting with
                                     HMS Surprise.}
          \end{tabular}
     \end{center}

   La solution est d’entourer l’environnement the ‘tabular’ d’un
environnement ‘minipage’, comme ci-après (*note minipage::).

     \begin{center}
       \begin{minipage}{.5\textwidth}
         .. matériel tabulaire ..
       \end{minipage}
     \end{center}

   La même technique marche au sein d’un environnement ‘table’ flottant
(*note table::).  To get the footnote at the bottom of the page use the
‘tablefootnote’ package, comme illustré dans l’exemple ci-apès.  Si vous
placez ‘\usepackage{tablefootnote}’ dans le préambule et utilisez le
code source ci-dessous, alors la note apparaîtra en bas de la page et
sera numérotée dans la même séquence que les autres notes en bas de
page.

     \begin{table}
       \centering
          \begin{tabular}{l|l}
          \textsc{Date}  &\textsc{Campagne} \\ \hline
          1862           &Fort Donelson \\
          1863           &Vicksburg     \\
          1865           &Armée de Virginie du Nord\footnote{Fin de la
                          guerre.}
          \end{tabular}
         \caption{Forces capturées par le général Grant}
     \end{table}

11.5 Note en bas de page dont le renvoi est au sein d’un titre de rubrique
==========================================================================

Mettre une note en bas de page depuis un titre de rubrique, comme dans :

     \section{Les ensembles complets\protect\footnote{Ce texte est dû à ...}}

a pour effet que la note en bas de page apparaît à la fois en bas de la
page où la rubrique commence, et de celle où son titre apparaît dans la
table des matières, ce qui vraisembablement n’est pas voulu.  Pour
qu’elle n’apparaisse pas sur la table des matières utilisez le paquetage
‘footmisc’ avec l’option ‘stable’.

     \usepackage[stable]{footmisc}
      ..
     \begin{document}
      ..
     \section{Les ensembles complets\footnote{Ce texte est dû à R~Jones.}}

   Notez que le ‘\protect’ a disparu ; l’inclure aurait pour effet que
la note en bas de page apparaîtrait de nouveau dans la table des
matières.

11.6 Paramètres des notes en bas de page
========================================

‘\footnoterule’
     Produit le filet de séparation entre texte principal sur une page
     et les notes en bas de cette page.  Les dimension par défaut :
     épaisseur (ou largeur) ‘0.4pt’, et longueur ‘0.4\columnwidth’ dans
     les classes standard de document (à l’exception ‘slide’, où elle
     n’apparaît pas).

‘\footnotesep’
     La hauteur de l’étai placé au début de la note en bas de page.  Par
     défaut, c’est réglé à l’étai nomal pour des police de taille
     ‘\footnotesize’ (*note Font sizes::), donc il n’y a pas d’espace
     supplémentaire entre les notes.  Cela vaut ‘6.65pt’ pour des
     polices à ‘10pt’, ‘7.7pt’ pour ‘11pt’, et ‘8.4pt’ pour ‘12pt’.

12 Définitions
**************

LaTeX prend en charges la fabrication de nouvelles commandes de bien des
genres.

12.1 ‘\newcommand’ & ‘\renewcommand’
====================================

‘\newcommand’ définit une nouvelle commande, et ‘\renewcommand’ la
redéfinit.

   Synopsis :

       \newcommand{\CMD}[NARGS][OPTARGDÉFAUT]{DÉFN}
     \renewcommand{\CMD}[NARGS][OPTARGDÉFAUT]{DÉFN}
       \newcommand*{\CMD}[NARGS][OPTARGDÉFAUT]{DÉFN}
     \renewcommand*{\CMD}[NARGS][OPTARGDÉFAUT]{DÉFN}

   Définit ou redéfinit une commande (voir aussi la discussion de
‘\DeclareRobustCommand’ dans *note Class and package commands::).

   La forme étoilée (en ‘*’) de ces commandes interdit que les arguments
contiennent une multiplicité de paragraphes de texte (la commande n’est
pas ‘\long’, dans la terminologie de TeX de base).  Avec la forme par
défaut, il est possible qu’un argument soit une multiplicité de
paragraphes.

CMD
     Obligatoire ; ‘\CMD’ est le nom de la commande.  Pour
     ‘\newcommand’, il ne doit pas être déja défini et ne doit pas
     commencer avec ‘\end’ ; pour ‘\renewcommand’, il doit être déja
     défini.

NARGS
     Optionnel ; un entier compris entre 1 et 9 spécifiant le nombre
     d’arguments que commande peut prendre, y compris un éventuel
     argument optionnel.  Si cet argument n’est pas présent, alors la
     spécification par défaut est que la commande ne prend aucun
     argument.  Lorsque on redéfinit une commande, la nouvelle version
     peut prendre un nombre différent d’arguments par rapport à
     l’ancienne.

OPTARGDÉFAUT
     Optionnel ; si cet argument est present, alors le premier argument
     de la commande ‘\CMD’ en définition est optionnel, et sa valeur par
     défaut est OPTARGDÉFAUT (qui peut être une chaîne vide).  Si cet
     argument n’est pas présent, alors ‘\CMD’ ne prend pas d’argument
     optionnel.

     C’est à dire que si ‘\CMD’ est utilisé avec des crochets à la
     suite, comme dans ‘\CMD[MAVAL]’, alors au sein de DÉFN le premier
     “paramètre positionnel” ‘#1’ se développe en MAVAL.  Par contre si
     ‘\CMD’ est appelé sans crochet à la suite, alors au sein de DÉFN le
     paramètre positionnel ‘#1’ se développe en la valeur par défaut
     OPTARGDÉFAUT.  Dans tous les cas, tout argument obligatoire sera
     désigné en commençant par ‘#2’.

     Omettre ‘[MAVAL]’ dans un appel n’est pas la même chose qu’avoir
     les crochets ne contenant rien, comme dans ‘[]’.  Dans le premier
     cas le paramètre ‘#1’ se développe en OPTARGDÉFAUT ; alors que dans
     le second ‘#1’ se développe en une chaîne vide.

DÉFN
     Le texte par lequel substituer chaque occurrence de ‘\CMD’ ; le
     paramètre positionnel ‘#N’ au sein de DÉFN est remplacée par le
     texte passé comme Nième argument.

   TeX ignore les espaces dans le code source à la suite d’une commande
(ou de toute séquence de contrôle), comme dans ‘\cmd ’.  Si vous désirez
une espace réellement à cet endroit, une solution est de taper ‘{}’
après la commande (‘\cmd{} ’), et un autre est d’utiliser un espace de
contrôle explicite (‘\cmd\ ’).

   Un exemple simple de définition d’une nouvelle commande :
‘\newcommand{\JM}{Jean Martin}’ a pour effet le remplacement de
l’abréviation ‘\JM’ par le texte plus long de la définition.

   La redéfinition d’une commande existante est similaire :
‘\renewcommand{\symbolecqfd}{{\small CQFD}}’.

   Voici la définition d’une commande avec un argument obligatoire :

     \newcommand{\defref}[1]{Définition~\ref{#1}}

Alors, ‘\defref{def:basis}’ se développe en
‘Définition~\ref{def:basis}’, ce qui en fin de compte se développera en
quelque-chose du genre de ‘Définition~3.14’.

   Un exemple avec deux arguments obligatoires :
‘\newcommand{\nbym}[2]{$#1 \times #2$}’ est invoqué comme ‘\nbym{2}{k}’.

   Un exemple avec un argument optionnel :

     \newcommand{\salutation}[1][Madame, Monsieur]{#1,}

Alors, ‘\salutation’ donne ‘Madame, Monsieur,’ alors ‘\salutation[Cher
Jean]’ donne ‘Cher Jean,’.  Et ‘\salutation[]’ donne ‘,’.

   Les accolades autour de DÉFN ne définissent pas un groupe, c.-à-d.
qu’elle ne délimitent pas la portée du résultat du développement de
DÉFN.  Ainsi la définition ‘\newcommand{\nomnavire}[1]{\it #1}’ est
problématique ; dans cette phrase

     Le \nomnavire{Monitor} rencontra le \nomnavire{Merrimac}.

les mots ‘rencontra le’ sont mis incorrectement en italique.  Une paire
supplémentaire d’accolades est nécessaire, comme cela :
‘\newcommand{\nomnavire}[1]{{\it #1}}’.  Ces accolades font partie de la
définition et par conséquent définissent bien un groupe.

12.2 ‘\providecommand’
======================

Définit une commande, du moment qu’aucune commande de même nom n’existe
déjà.

   Synopsis :

     \providecommand{CMD}[NARGS][OPTARGDÉFAUT]{DEFN}
     \providecommand*{CMD}[NARGS][OPTARGDÉFAUT]{DEFN}

   Si aucune commande de ce nom n’existe alors ceci a le même effet que
‘\newcommand’ (*note \newcommand & \renewcommand::).  Si une commande de
ce nom existe déjà alors cette définition est sans effet.  Ceci est
particulièrement utile dans un fichier de style, ou dans tout fichier
susceptible d’être chargé plus d’une fois.

12.3 ‘\makeatletter’ et ‘\makeatother’
======================================

Synopsis :

     \makeatletter
       ... définition de commande comprenant @ dans leur nom ..
     \makeatother

   Utilisez cette paire de commandes quand vous redéfinissser les
commandes LaTeX dont le nom comprend un caractère arobe ‘‘@’’.  La
déclaration ‘\makeatletter’ a pour effet que le caractère arobe ait le
code de catégorie des lettres, c.-à-d. le code 11.  La déclaration
‘\makeatother’ règle de code de catégorie de l’arobe au code 12, sa
valeur d’origine.

   À mesure que chaque caractère est lu par TeX, un code de catégorie
lui est assigné.  On appelle aussi ce code “catcode” pour faire court.
Par exemple, la contre-oblique ‘\’ reçoit le catcode 0.  Les noms de
commande consistent en un caractère de catégorie 0, d’ordinaire une
contr’oblique, suivi par des lettres, c-à-d. des caractères de
catégorie 11 (à ceci près qu’une commande peut également consister en un
caractère de catégorie 0 suivi d’un unique caractère qui n’est pas une
lettre).

   Le code source de LaTeX suit la convention que certaines commandes
utilisent ‘@’ dans leur nom.  Ces commandes sont principalement
destinées aux auteurs de paquetages ou de classes.  Cette convention
empèche les auteurs qui sont juste utilisateurs d’un paquetage ou d’une
classe de remplacer accidentellement une telle commande par une commande
définie par eux, puisque par défaut l’arobe a le catcode 12 (other).

   Utilisez la paire ‘\makeatletter’ et ‘\makeatother’ au sein d’un
fichier ‘.tex’, typiquement dans le préambule, quand vous définissez ou
redéfinissez des commandes dont le nom comprend ‘@’, en entourant votre
définition par elles.  Ne les utilisez pas au sein de fichiers ‘.sty’ ou
‘.cls’ puisque les commandes ‘\usepackage’ et ‘\documentclass’ font déjà
le nécessaire pour que l’arobe ait le catcode d’une lettre, à savoir 11.

   Pour une liste complète des macros contenant une arobe dans leur nom,
voir le document <http://ctan.org/pkg/macros2e>.

   Dans l’exemple suivant une commande ‘\these@nomuniversite’ se trouve
dans le fichier de classe, et l’utilisateur veut changer sa définition.
Pour cela, il suffit d’insérer les trois lignes suivantes dans le
préambule, avant le ‘\begin{document}’ :

     \makeatletter
     \renewcommand{\these@nomuniversite}{Université Lyon III Jean Moulin}
     \makeatother

12.4 ‘\@ifstar’
===============

Synopsis :

     \newcommand{\macmd}{\@ifstar{\macmd@star}{\macmd@nostar}}
     \newcommand{\macmd@nostar}[NOSTAR-NBRE-ARGS]{NOSTAR-CORPS}
     \newcommand{\macmd@star}[STAR-NBRE-ARGS]{STAR-CORPS}

   Vous l’avez sans doute remarqué, beaucoup d’environnements ou
commandes standards de LaTeX existent sous une variante avec le même nom
mais finissant avec le caractère étoile ‘*’, un astérisque.  Par exemple
c’est le cas des environnement ‘table’ et ‘table*’, et des commandes
‘\section’ et ‘\section*’.

   Lorsque on définit un environnement, cela est facile puisque
‘\newenvironment’ et ‘\renewenvironment’ autorisent que le nom de
l’environnement contienne un astérisque.  Il vous suffit donc d’écrire
‘\newenvironment{MONENV}’ ou ‘\newenvironment{MONENV*}’ et de continuer
la définition comme d’habitude.  Pour les commandes, c’est plus
compliqué car l’étoile n’étant pas une lettre one peut pas faire partie
du nom de la commande.  Comme dans le synopsis ci-dessus, on a donc une
commande utilisateur, donnée ci-dessus comme ‘\macmd’, qui doit être
capable de regarder si elle est ou non suivie d’une étoile.  Par
exemple, LaTeX n’a pas réellement une commande ‘\section*’ ; au lieu de
cela la commande ‘\section’ regarde ce qui la suit.  Cette première
commande n’accepte d’argument, mais au lieu de cela se développe en
l’une de deux commandes qui elle accepte des arguments.  Dans le
synopsis ces commande sont ‘\macmd@nostar’ et ‘\macmd@star’.  Elles
peuvent prendre le même nombre d’arguments ou un nombre différent, ou
pas d’argument du tout.  Comme d’habitude, dans un document LaTeX une
commande utilisant l’arobe ‘@’ dans son nom doit être comprise au sein
d’un bloc ‘\makeatletter ... \makeatother’ (*note \makeatletter &
\makeatother::).

   Dans cet exemple, on définit ‘\ciel’ comme une commande avec un
argument obligatoire et admettant une variante étoilée ‘\ciel*’
également avec un argument obligatoire.  Ainsi, ‘\ciel{bleu}’ composera
« ciel bleu non étoilé » tandis que ‘\ciel*{nocturne}’ composera « ciel
nocturne étoilé ».

     \makeatletter
     \newcommand*\ciel@starred[1]{ciel #1 étoilé}
     \newcommand*\ciel@unstarred[1]{ciel #1 non étoilé}
     \newcommand\ciel{\@ifstar{\ciel@starred}{\ciel@unstarred}}
     \makeatother

   Voici un autre exemple, où la variante étoilée prend un nombre
d’arguments différent de la non étoilée.  Avec cette définition, la
célèbre réplique de l’agent 007 « ‘Mon nom est \agentsecret*{Bond},
\agentsecret{James}{Bond}’. » est équivalente à saisir les commandes
« Je m’appelle \textsc{Bond}, \textit{James} textsc{Bond}. »

     \makeatletter
     \newcommand*\agentsecret@starred[1]{\textsc{#1}}
     \newcommand*\agentsecret@unstarred[2]{\textit{#1} \textsc{#2}}
     \newcommand\agentsecret{\@ifstar{\agentsecret@starred}{\agentsecret@unstarred}}
     \makeatother

   Après le nom d’une commande, l’étoile est traitée d’une manière
similaire à un argument optionnel.  (Ceci est différent des noms
d’environnement, où l’étoile fait partie du nom lui-même, et peut donc
être à n’importe quelle position).  D’un point de vue purement technique
il est donc possible de mettre un nombre indéfini d’espaces entre la
commande et l’étoile.  Ainsi ‘\agentsecret*{Bond}’ et
‘\agentsecret *{Bond}’ sont équivalents.  Toutefois, la pratique normale
est de ne pas insérer de tels espaces.

   Il y a deux manières pouvant être plus commodes d’accomplir la même
tâche que ‘\@ifstar’.  Le paquetage ‘suffix’ permet la construction
‘\newcommand\macommande{VARIANTE-NON-ÉTOILÉE}’ suivie de
‘\WithSuffix\newcommand\macommande*{VARIANTE-ÉTOILÉE}’.  Et LaTeX3 a le
paquetage ‘xparse’ qui permet ce code.

     \NewDocumentCommand\toto{s}{\IfBooleanTF#1
       {VARIANTE-ÉTOILÉE}%
       {VARIANTE-NON-ÉTOILÉE}%
       }

12.5 ‘\newcounter’ : allouer un compteur
========================================

Synopsis :

     \newcounter{NOMCOMPTEUR}
     \newcounter{NOMCOMPTEUR}[SUPER]

   La commande ‘\newcounter’ définit un nouveau compteur nommé
NOMCOMPTEUR.  Le nouveau compteur est initialisé à zéro.

   Quand l’argument optionnel ‘[SUPER]’ est fourni, le compteur
NOMCOMPTEUR est réinitialisé à chaque incrémentation du compteur nommé
SUPER.

   *Note Counters::, pour plus d’information à propos des compteurs.

12.6 ‘\newlength’ : allouer une longueur
========================================

Alloue un nouveau registre de “longueur”.  Synopsis :

     \newlength{\ARG}

   Cette commande prnedre un argument obligatoire qui doit commencer par
une contr’oblique (‘\’).  Elle crée un nouveau registre de longueur
nommé ‘\ARG’, ce qui constitue un emplacement où détenir des longueurs
(élastiques) telles que ‘1in plus.2in minus.1in’ (ce que TeX de base
appelle un registre ‘skip’, ou regristre de pas).  Le registre est crée
avec une valeur initiale de zéro.  La séquence de contrôle ‘\ARG’ doit
ne pas être déjà définie.

   *Note Lengths::, pour plus d’information à propos des longueurs.

12.7 ‘\newsavebox’ : allouer une boîte
======================================

Alloue un « baquet » pour détenir une boîte.  Synopsis :

     \newsavebox{\CMD}

   Définit ‘\CMD’ pour se référer à un nouveau baquet pour stocker des
boîtes.  Une telle boîte sert à détenir du matériel composé, pour
l’utiliser plusieurs fois (*note Boxes::) ou pour le mesurer ou le
manipuler.  Le nom ‘\CMD’ doit commencer par une contr’oblique, et ne
doit pas être déjà défini.

   L’allocation d’une boîte est globale.  Cette commande est fragile
(*note \protect::).

12.8 ‘\newenvironment’ & ‘\renewenvironment’
============================================

Ces commandes définissent ou redéfinissent un environnement ENV,
c.-à-d., ‘\begin{ENV} CORPS \end{ENV}’.

   Synopsis :

       \newenvironment{ENV}[NARGS][ARGOPTDÉFAUT]{DÉFDÉBUT}{DÉFFIN}
       \newenvironment*{ENV}[NARGS][ARGOPTDÉFAUT]{DÉFDÉBUT}{DÉFFIN}
     \renewenvironment{ENV}[NARGS]{DÉFDÉBUT}{DÉFFIN}
     \renewenvironment*{ENV}[NARGS]{DÉFDÉBUT}{DÉFFIN}

   La forme étoilée de ces commandes exige que les arguments (à ne pas
confondre avec le corps de l’environnement) ne contiennent pas de
paragraphes de texte.

ENV
     Obligatoire ; le nom de l’environnement.  Il est constitué
     seulement de lettres ou du caractère astérisque ‘*’, et donc ne
     commence pas par une contr’oblique ‘\’.  Il ne doit pas commencer
     par la chaîne ‘end’.  Pour ‘\newenvironment’, ENV ne doit pas être
     le nom d’un environnement déjà existant, et la commande ‘\ENV’ ne
     doit pas être définie.  Pour ‘\renewenvironment’, ENV doit être le
     nom d’un environnement déjà existant.

NARGS
     Optionnel ; un entier de 0 à 9 indiquant le nombre d’arguments que
     l’environnement attend.  Quand l’environnement est utilisé, ces
     arguments apparaissent après le ‘\begin’, comme dans
     ‘\begin{ENV}{ARG1}...{ARGN}’.  Si cet argument n’est pas présent,
     alors par défaut l’environment n’attend pas d’argument.  Lorsqu’on
     redéfinit un environment, la nouvelle version peut prendre un
     nombre différent d’arguments que la précédente.

ARGOPTDÉFAUT
     Optionnel ; si cet argument est présent alors le premier argument
     de l’environnement en définition est optionnel, et sa valeur par
     défaut est ARGOPTDÉFAUT (éventuellement une chaîne vide).  Si cet
     argument n’est pas présent alors l’environnement ne prend pas
     d’argument optionnel.

     c.-à-d. que si ‘[ARGOPTDÉFAUT]’ est présent dans la définition de
     l’environnement, et que ‘\begin{ENV}’ est utilisé avec des crochets
     à la suite, comme dans ‘\begin{ENV}[MAVAL]’, alors, au sein de
     DÉFDÉBUT, le paramètre positionnel ‘#1’ se développe en MAVAL.  Si
     par contre ‘\begin{ENV}’ est appéelé sans être suivi de crochet,
     alors, au sein de DÉFDÉBUT, le paramètre positionnel ‘#1’ se
     développe en la valeur par défaut, c.-à-d. OPTARGDÉFAUT.  Dans les
     deux cas, le premier paramètre positionnel faisant référence à
     argument obligatoire est ‘#2’.

     Omettre ‘[MAVAL]’ dans l’appel est différent d’avoir des crochets
     sans contenu, c.-à-d. ‘[]’.  Dans le premier cas ‘#1’ se développe
     en ARGOPTDÉFAUT, et dans le second en une chaîne vide.

DÉFDÉBUT
     Obligatoire ; le texte qui est développé à toute occurrence de
     ‘\begin{ENV}’ ; au sein de DÉFDÉBUT, le Nième paramètre
     positionnel, (c.-à-d. ‘#N’), est remplacé au sein de DÉFDÉBUT par
     le texte du Nième argument.

DÉFFIN
     Obligatoire ; le texte développé à toute occurrence de ‘\end{ENV}’.
     Il ne doit contenir aucun paramètre positionnel, ainsi ‘#N’ ne peut
     pas être utilisé ici (mais voyez l’exemple final ci-après).

   Tous les environnements, c’est à dire le code de DÉFDÉBUT, le corps
de l’environnement, et le code DÉFFIN, sont traités au sein d’un groupe.
Ansi, dans le premier exemple ci-dessous, l’effet de ‘\small’ est limité
à la citation et ne s’étend pas au matériel qui suit l’environnement.

   Cet exemple dont un environnement semblable à ‘quotation’ de LaTeX à
ceci près qu’il sera composé dans une taille de police plus petite :

     \newenvironment{smallquote}{%
       \small\begin{quotation}
     }{%
       \end{quotation}
     }

   Celui-ci montre l’utilisation des arguments ; cela donne un
environnement de citation qui affiche l’auteur :

     \newenvironment{citequote}[1][Corneille]{%
       \begin{quotation}
       \noindent\textit{#1}:
     }{%
       \end{quotation}
     }

Le nom de l’auteur est optionnel, et vaut par défaut ‘Corneille’.  Dans
le document, utilisez l’environnement comme ceci :

     \begin{citequote}[Clovis, roi des Francs]
       ...
     \end{citequote}

   Ce dernier exemple montre comment sauvegarder la valeur d’un argument
pour l’utiliser dans DÉFFIN, dans ce cas dans une boîte (*note \sbox &
\savebox::).

     \newsavebox{\quoteauthor}
     \newenvironment{citequote}[1][Corneille]{%
       \sbox\quoteauthor{#1}%
       \begin{quotation}
     }{%
       \hspace{1em plus 1fill}---\usebox{\quoteauthor}
       \end{quotation}
     }

12.9 ‘\newtheorem’
==================

Définit une nouvel “environnement simili-théorème”.  Synopsis :

     \newtheorem{NOM}{TITRE}[NUMÉROTÉ_AU_SEIN_DE]
     \newtheorem{NOM}[NUMÉROTÉ_COMME]{TITRE}

   Ces deux commandes crééent un environnement simili-théorème NOM.
Utiliser la première des deux formes,

     \newtheorem{NOM}{TITRE}[NUMÉROTÉ_AU_SEIN_DE]

avec l’argument optionnel après le second argument obligatoire, crée un
environnement dont le compteur est subordonné au compteur déjà existant
NUMÉROTÉ_AU_SEIN_DE, c.-à-d. qui est réinitialisé à it will chaque
réinitialisation de NUMÉROTÉ_AU_SEIN_DE.

   Utiliser la seconde forme,

     \newtheorem{NIM}[NUMÉROTÉ_COMME]{TITRE}

avec l’argument optionnel entre les deux arguments obligatoire, crée une
environnement dont le compteur partage le compteur déjà défini
NUMÉROTÉ_COMME.

   Vous pouvez spécifier l’un seul de NUMÉROTÉ_AU_SEIN_DE et
NUMÉROTÉ_COMME, ou ni l’un ni l’autre, mais non les deux à la fois.

   Cette commande crée un compteur nommé NAME.  De plus, à moins que
l’argument optionnel NUMÉROTÉ_COMME soit utilisé, la valeur courrante de
‘\ref’ est celle de ‘\theNUMÉROTÉ_AU_SEIN_DE’ (*note \ref::).

   Cette déclaration est globale.  Elle est fragile (*note \protect::).

NOM
     Le nom de l’environnement.  Il ne doit pas commencer avec une
     contr’oblique (‘\’).  Il ne doit pas être le nom d’un environnement
     déjà exisant ; en fait le nom de commande ‘\NOM’ ne doit pas être
     déjà défini de quelque façon que ce soit.

TITRE
     Le texte imprimé au début de l’environnement, avant le numéro.  Par
     exemple, ‘Théorème’.

NUMÉROTÉ_AU_SEIN_DE
     Optionnel ; le nom d’un compteur déjà défini, d’ordinaire une unité
     sectionnelle telle que ‘chapter’ ou ‘section’.  Lorsque le compteur
     NUMÉROTÉ_AU_SEIN_DE est re-initialisé, alors le compteur de
     l’environnement NOM l’est aussi.

     Si cet argument optionnel est omis alors la commande ‘\theNOM’ est
     définie comme ‘\arabic{NOM}’.

NUMÉROTÉ_COMME
     Optionnel ; le nom d’un environement simil-théorème déjà défini.
     Le nouvel environnement se numéroté en séquence avec
     NUMÉROTÉ_COMME.

   En l’absence des arguments optionnels les environnement sont
numérotés en séquence.  L’exemple suivant a une déclaration dans le
préambule qui résulte en ‘Définition 1’ et ‘Définition 2’ en sortie.

     \newtheorem{defn}{Définition}
     \begin{document}
     \section{...}
     \begin{defn}
       Première déf.
     \end{defn}

     \section{...}
     \begin{defn}
       Seconde déf.
     \end{defn}

   Parce que l’exemple suivant spécifie ‘section’ comme argument
optionnel NUMÉROTÉ_AU_SEIN_DE à ‘\newtheorem’, l’exemple, reprenant le
même corps de document que l’exemple précédent, donne ‘Définition 1.1’
et ‘Définition 2.1’.

     \newtheorem{defn}{Definition}[section]
     \begin{document}
     \section{...}
     \begin{defn}
       Première déf.
     \end{defn}

     \section{...}
     \begin{defn}
       Seconde déf.
     \end{defn}

   Dans l’exemple suivant il y a deux déclarations dans le préambule, la
seconde desquelle appelle le nouvel environnement ‘thm’ pour utilise le
même compteur que ‘defn’.  Cela donne ‘Définition 1.1’, suivi de
‘Théorème 2.1’ et ‘Définition 2.2’.

     \newtheorem{defn}{Définition}[section]
     \newtheorem{thm}[defn]{Théorème}
     \begin{document}
     \section{...}
     \begin{defn}
       Première déf.
     \end{defn}

     \section{...}
     \begin{thm}
       Premier théorème
     \end{thm}

     \begin{defn}
       Seconde déf.
     \end{defn}
     \section{...}

12.10 ‘\newfont’: définit une nouvelle police (obsolète)
========================================================

‘\newfont’, desormais obsolète, définit une commande qui commute la
police de caractère.  Synopsis :

     \newfont{\CMD}{DESCRIPTION_POLICE}

   Ceci définit une séquence de contrôle ‘\CMD’ qui change la police
courante.  LaTeX cherche sur votre système un fichier nommé
‘NOMPOLICE.tfm’.  La séquence de contrôle ne doit pas être déjà définie.
Elle doit commencer par une contr’oblique (‘\’).

   Cette commande est obsolète.  c’est une commande de bas niveau pour
mettre en place une police individuelle.  De nos jours, les polices sont
pratiquement toujours définies en familles (ce qui vous permet, par
exemple, d’associer un gras et un romain) au travers de ce qu’il est
convenu de nommer le « Nouveau Plan de Sélection de Polices de
caractère », soit en utilisant des fichier ‘.fd’ ou à travers
l’utilisation d’un moteur qui sait accéder au système de polices de
caractère, tel que XeLaTeX (*note Les moteurs TeX: TeX engines.).

   Mais puisque cela fait partie de LaTeX, voici l’explication : le
paramètre DESCRIPTION_POLICE consiste en un NOMPOLICE et une “clause at”
optionnelle ; celle-ci peut avoir soit la forme ‘at DIMEN’ ou ‘scaled
FACTEUR’, où un FACTEUR de ‘1000’ signifie aucune
dilatation/contraction.  Pour l’usage de LaTeX, tout ce que ceci fait
est de dilater ou contracter le caractère et les autre dimension
relative à la taille de conception de la police, ce qui est une valeur
définie dans le fichier en ‘.tfm’.

   Cet exemple défnit deux polices équivalente et compose quelques
caractères dans chacune d’elles :

     \newfont{\testpoliceat}{cmb10 at 11pt}
     \newfont{\testpolicedilatee}{cmb10 scaled 1100}
     \testpoliceat abc
     \testpolicedilatee abc

12.11 ‘\protect’
================

Toutes les commandes de LaTeX sont soit “fragiles” soit “robustes”.  Les
notes en bas de page, les saut de ligne, toute commande prenant un
argument optionnel, et bien d’autres, sont fragiles.  Une commande
fragile peut se disloquer et causer une erreur lorsque elle est utilisée
au sein de l’argument de certaines commandes.  Pour empécher la
dislocation de ces commandes l’une des solutions est de les précéder de
la commande ‘\protect’.

   Par exemple, lorsque LaTeX execute la commande
‘\section{NOM-RUBRIQUE}’ il écrit le texte NOM-RUBRIQUE dans le fichier
auxiliaire ‘.aux’, de sorte à pouvoir le tirer de là pour l’utiliser
dans d’autres partie du document comme la table des matières.  On
appelle “argument mouvant” tout argument qui est développé en interne
par LaTeX sans être directement composé en sortie.  Une commande est
dite fragile si elle se développe pendant ce processus en un code TeX
non valide.  Certains exemples d’arguments mouvants sont ceux qui
apparaissent au sein des commandes ‘\caption{...}’ (*note figure::),
dans la commande ‘\thanks{...}’ (*note \maketitle::), et dans les
expression en @ des environnements ‘tabular’ et ‘array’ (*note
tabular::).

   Si vous obtenez des erreurs étranges de commandes utilisées au sein
d’arguments mouvants, essayez des les précéder d’un ‘\protect’.  Il faut
un ‘\protect’ pour chacune des commandes fragiles.

   Bien qu’en général la commande ‘\protect’ ne fait pas de mal, les
commandes de gestion de longueurs sont robustes et ne devraient pas être
précédées d’une commande ‘\protect’.  Une commande ‘\protect’ ne peut
pas non plus être utilisée au sein de l’argument d’une commande *note
‘\addtocounter’: \addtocounter. ou *note ‘\setcounter’: \setcounter.

   Dans l’exemple qui suit la commande ‘\caption’ produit une erreur
mystérieuse

     \begin{figure}
       ...
       \caption{Company headquarters of A\raisebox{1pt}{B}\raisebox{-1pt}{C}}
     \end{figure}

   Dans l’exemple suivant la commande ‘\tableofcontents’ produit une
erreur à cause du ‘\(..\)’ dans le titre de section qui se développe en
code incorrect TeX dans le fichier ‘.toc’.  Vous pouvez résoudre ceci en
remplaçant ‘\(..\)’ par ‘\protect\(..\protect\)’.

     \begin{document}
     \tableofcontents
     ...
     \section{Einstein's \( e=mc^2 \)}
     ...

13 Compteurs
************

Tout ce que LaTeX numérote pour vous a un compteur associé avec soi.  Le
nom du compteur est le même que le nom de l’environnement ou de la
commande qui produit le numéro, sauf qu’il ne pas de ‘\’.
(‘enumi’–‘enumiv’ sont utilisés pour les environnements ‘enumerate’
imbriqués).  Ci-dessous se trouve une liste des compteurs utilisée dans
les classes standardes de documents LaTeX pour contrôler la
numérotation.

     part paragraphe figure enumi
     chapter subparagraph table enumii
     section page footnote enumiii
     subsection équation mpfootnote enumiv
     subsubsection

13.1 ‘\alph \Alph \arabic \roman \Roman \fnsymbol’: Taper des compteurs
=======================================================================

Toutes ces commandes prennent un unique compteur en argument, par
exemple, ‘\alph{enumi}’.

‘\alph’
     tape COMPTEUR en utilisant des lettre en bas de casse : ‘a’, ‘b’,
     ...

‘\Alph’
     Utilise des lettres capitales : ‘A’, ‘B’, ...

‘\arabic’
     Utilise des numéro en chiffres arabes : ‘1’, ‘2’, ...

‘\roman’
     Utilise des nombres romains en bas de casse : ‘i’, ‘ii’, ...

‘\Roman’
     Utilise des nombres romains en capitales : ‘I’, ‘II’, ...

‘\fnsymbol’
     Tape la valeur de COMPTEUR dans une séquence spécifique de neuf
     symboles (utilisés par convention pour la numérotation des notes en
     bas de page).  La valeur de COMPTEUR doit être comprise entre 1
     et 9 inclus.

     Voici ces symboles :

     Nom                      Commande                 Équivalent Unicode
     ---------------------------------------------------------------------------
     astérisque               ‘\ast’                   *
     obèle                    ‘\dagger’                †
     double-obèle             ‘\ddagger’               ‡
     marque-de-section        ‘\S’                     §
     marque-de-paragraphe     ‘\P’                     ¶
     parallèle                ‘\parallel’              ‖
     asterisque-double        ‘\ast\ast’               **
     obèle-double             ‘\dagger\dagger’         ††
     double-obèle-double      ‘\ddagger\ddagger’       ‡‡

13.2 ‘\usecounter{COMPTEUR}’
============================

Synopsis :

     \usecounter{COMPTEUR}

   La commande ‘\usecounter’ est utilisée dans le second argument de
l’environnement ‘list’ pour spécifier le COMPTEUR à utiliser pour
numéroter les articles de la liste.

13.3 ‘\value{COMPTEUR}’
=======================

Synopsis :

     \value{COMPTEUR}

   Cette commande se développe en la valeur de COMPTEUR.  Elle est
souvent utilisé dans ‘\setcounter’ ou ‘\addtocoutner’, mais ‘\value’
peut être utilisé partout là où LaTeX attend un nombre.  Elle ne doit
pas être précédée par ‘\protect’ (*note \protect::).

   La commande ‘\value’ n’est pas utiliser pour composer la valeur du
compteur.  *Note \alph \Alph \arabic \roman \Roman \fnsymbol::.

   Cet exemple produit en sortie ‘Le compteur essai vaut 6. Le compteur
autre vaut 5’.

     \newcounter{essai} \setcounter{essai}{5}
     \newcounter{autre} \setcounter{autre}{\value{essai}}
     \addtocounter{essai}{1}

     Le comppteur essai vaut \arabic{essai}.
     Le compteur autre vaut \arabic{autre}.

   Cet exemple insère ‘\hspace{4\parindent}’.

     \setcounter{moncptr}{3} \addtocounter{moncptr}{1}
     \hspace{\value{moncptr}\parindent}

13.4 ‘\setcounter{COMPTEUR}{VALUE}’
===================================

Synopsis :

     \setcounter{COMPTEUR}{VALUE}

   La commande ‘\setcounter’ règle la valeur de COMPTEUR à l’argument
VALUE.

13.5 ‘\addtocounter{COMPTEUR}{VALEUR}’
======================================

La commande ‘\addtocounter’ incrémente COMPTEUR de la quantité spécifiée
par l’argument VALEUR, qui peut être negatif.

13.6 ‘\refstepcounter{COMPTEUR}’
================================

La commande ‘\refstepcounter’ fonctionne de la même façon que
‘\stepcounter’ *Note \stepcounter::, à ceci près qu’elle définit
également la valeur courante de ‘\ref’ comme le résultat de
‘\thecounter’.

13.7 ‘\stepcounter{COMPTEUR}’
=============================

La commande ‘\stepcounter’ ajouter un à COMPTEUR et re-initialise tous
les compteurs subsidiaires.

13.8 ‘\day \month \year’: Predefined compteurs
==============================================

LaTeX définit des compteurs pour le quantième du mois (‘\day’, 1–31), le
mois de l’année (‘\month’, 1–12), et l’année (‘\year’, de l’ère
chrétienne).  Quand TeX démarre, ils sont mis à la valeur courante du
système sur lequel TeX s’exécute.  Ils ne sont pas remis à jour pendant
que le traitement par TeX progresse.

   En relation avec ces compteurs, la commande ‘\today’ produit une
chaîne représentant le jour courant (*note \today::).

14 Longueurs
************

Une “longueur” est une mesure de distance.  Beaucoup de commandes LaTeX
prennent une longueur en argument.

   Il y a deux types de longueur.  Une “longueur rigide” telle que
‘10pt’ ne contient pas de composante en ‘plus’ ou ‘minus’.  (En TeX de
base on appelle cela une “dimen”).  Une “longueur élastique” (ce qu’en
TeX de base on appel un “skip” ou une “glue”) telle que dans ‘1cm
plus0.05cm minus0.01cm’ peut contenir l’un ou l’autre de ces composantes
ou les deux.  Dans cette longueur élastique, le ‘1cm’ est la “longueur
naturelle” alors que les deux autres, les composantes en ‘plus’ et
‘minus’, permette à TeX à dilater ou contracter la longueur pour
optimiser la disposition.

   Les exemples qui suivent utilisent ces deux commandes.

     % Fait une barre noire de 10pt de haut et #1 de large
     \newcommand{\blackbar}[1]{\rule{#1}{10pt}}

     % Fait une boîte autour de #2 qui est #1 de large (sans la bordure)
     \newcommand{\showhbox}[2]{%
       \fboxsep=0pt\fbox{\hbox to #1{#2}}}

Cet exemple utilise ces commandes pour afficher une barre noire de
100 points de long entre ‘XXX’ et ‘YYY’.  Cette longueur est rigide.

     XXX\showhbox{100pt}{\blackbar{100pt}}YYY

   Quant au longueur élastiques, la contraction est le plus simple des
deux : avec ‘1cm minus 0.05cm’, la longueur naturelle est 1cm mais TeX
peut la contracter jusqu’à 0,95cm.  TeX refuse de contracter plus que
cela.  Ainsi, ci-dessous le premier ‘\showhbox’ fonctionne bien, un
espace de 98 points étant produit entre les deux barres.

     XXX\showhbox{300pt}{%
       \blackbar{101pt}\hspace{100pt minus 2pt}\blackbar{101pt}}YYY

     XXX\showhbox{300pt}{%
       \blackbar{105pt}\hspace{100pt minus 1pt}\blackbar{105pt}}YYY

Mais le second produit un avertissement du genre de ‘Overfull \hbox
(1.0pt too wide) detected at line 17’.  En sortie le premier ‘Y’ est
écrasé par la fin de la barre noire, parce que la matière contenue par
la boîte est plus large que les 300pt alloués, et que TeX a refusé de
contracter le total en deçà de 309 points.

   Dilater est similaire à contracter, à ceci près que si TeX doit
dilater plus que la quantité disponible, alors il le fait.  Ci-dessous
la première ligne fonctionne bien, et produit un espace de 110 points
entre les barres.

     XXX\showhbox{300pt}{%
       \blackbar{95pt}\hspace{100pt plus 10pt}\blackbar{95pt}}YYY

     XXX\showhbox{300pt}{%
       \blackbar{95pt}\hspace{100pt plus 1pt}\blackbar{95pt}}YYY

Dans la seconde ligne TeX a besoin de dilater de 10 points alors que
seulement 1 point a été spécifié.  TeX dilate l’espace jusqu’à la
longueur requise mais il produit un avertissement du genre de ‘Underfull
\hbox (badness 10000) detected at line 22’.  (On ne discute pas ici de
ce que signifie « badness »).

   Il est possible de mettre à la fois de la dilatation et de la
contraction dans la même longueur, comme dans ‘1ex plus 0.05ex minus
0.02ex’.

   Si TeX ajuste plus d’une longueur élastique alors il alloue la
dilatation ou la contraction proportionnellement.

     XXX\showhbox{300pt}{%
       \blackbar{100pt}%  gauche
       \hspace{0pt plus 50pt}\blackbar{80pt}\hspace{0pt plus 10pt}%  milieu
       \blackbar{100pt}}YYY  % droite

Les barres de gauche et de droite prennent 100 points, de sorte que
celle du milieu a besoin également de 100.  La barre du milieu fait
80 points et donc les deux ‘\hspace’ doivent se dilater de 20 points.
Comme les deux sont ‘plus 50pt’ et ‘plus 10pt’, TeX obtient 5/6 de la
dilatation du premier espace et 1/6 du second.

   La composante ‘plus’ ou ‘minus’ d’une longueur élastique peut
contenir un composante en “fill”, comme dans ‘1in plus2fill’.  Cela
donne à la longueur une dilatabilité ou contractabilité infinie de sorte
que TeX puisse l’ajuster à n’importe quelle distance.  Dans l’exemple
suivant les deux figures sont également espacées horizontalement sur la
page.

     \begin{minipage}{\linewidth}
       \hspace{0pt plus 1fill}\includegraphics{godel.png}%
       \hspace{0pt plus 1fill}\includegraphics{einstein.png}%
       \hspace{0pt plus 1fill}
     \end{minipage}

   TeX en réalité a trois niveaux d’infinité pour les composantes
élastiques : ‘fil’, ‘fill’, et ‘filll’ dans l’ordre d’infinité
croissante.  D’ordinaire les auteurs de documents n’utilisent que celle
du milieu (*note \hfill:: et *note \vfill::).

   Multiplier une longueur élastique par un nombre la transforme en une
longueur rigide, de sorte qu’après ‘\setlength{\ylength}{2.5cm plus
0.5cm}’ et ‘\setlength{\zlength}{3\ylength}’ alors la valeur de
‘\zlength’ est ‘2.5cm’.

14.1 Unités de longueur
=======================

TeX et LaTeX connaissent ces unités aussi bien en mode mathématique
qu’en dehors de celui-ci.

‘pt’
     Point (1/72,27)pouce.  La conversion en unités métriques units,
     avec deux chiffres après la virgule, est 1point = 2,85mm = 28,45cm.

‘pc’
     Pica, 12pt

‘in’
     Pouce, 72,27pt

‘bp’
     Big point, 1/72 pouce.  Cette longueur est la défition d’un point
     en PostScript et dans beaucoup d’autres systèmes bureautiques
     d’éditique (PAO).

‘cm’
     Centimetre

‘mm’
     Millimètre

‘dd’
     Point Didot, 1,07pt

‘cc’
     Cicero, 12dd

‘sp’
     Point proportionné, (1/65536)pt

   Deux autre longueurs sont souvent utilisées et sont des valeurs
réglées par les créateurs de caractères typographiques.  La hauteur “ex”
d’un x de la fonte coutante , traditionnellement la hauteur de la lettre
x en bas de casse, est souvent utilisée pour les longueurs verticales.
De même le “em”, traditionnellement la largeur de la lettre M capitale,
est souvant utilisée pour les longueurs horizontales (il y a aussi
‘\enspace’ qui vaut ‘0.5em’).  L’utilisation de ces unités peut aider
améliorer le fonctionnement d’une définition lors des changements de
fonte.  Par exemple, il est plus probable qu’une définition de l’espace
verticale entre les articles d’une liste donnée comme
‘\setlength{\itemsep}{1ex plus 0.05ex minus 0.01ex}’ reste raisonnable
si la fonte est changée que si elle était exprimée en points.

   En mode mathématique, beaucoup de définitions sont exprimées dans
l’unité mathématique “mu” donnée par 1em = 18mu, où le em est pris de la
famille courante des symboles mathématiques.  *Note Spacing in math
mode::.

14.2 ‘\setlength’
=================

Synopsis :

     \setlength{\LONGUEUR}{VALEUR}

   La commande ‘\setlength’ règle la valeur d’une “commande de longueur”
‘\LONGUEUR’ à l’argument VALEUR qui peut être exprimé dans n’importe
quelle unité comprise par LaTeX, c.-à-d. des pouces (‘in’), des
millimètres (‘mm’), des points (‘pt’), des « big points » (‘bp’), etc.

14.3 ‘\addtolength’
===================

Synopsis :

     \addtolength{\LONGUEUR}{VALEUR}

   La commande ‘\addtolength’ incrémente une commande de longueur
‘\LONGUEUR’ de la quantité spécifiée par l’argument QUANTITÉ, ce qui
peut être négatif.

14.4 ‘\settodepth’
==================

Synopsis :

     \settodepth{\LONGUEUR}{TEXTE}

   La commande ‘\settodepth’ règle la valeur d’une commande le longueur
‘\LONGUEUR’ à la profondeur de l’argument ‘texte’.

14.5 ‘\settoheight’
===================

Synopsis :

     \settoheight{\LONGUEUR}{TEXTE}

   La commande ‘\settoheight’ règle la valeur d’une commande le longueur
‘\LONGUEUR’ à la hauteur de l’argument ‘texte’.

14.6 ‘\settowidth’
==================

Synopsis :

     \settowidth{\LONGUEUR}{TEXTE}

   La commande ‘\settoheight’ règle la valeur d’une commande le longueur
‘\LONGUEUR’ à la largeur de l’argument ‘texte’.

14.7 Longueurs prédéfinies
==========================

‘\width’

   ‘\height’

   ‘\depth’

   ‘\totalheight’

   Ces paramètres de longueur peuvent être utilisés au sein des
arguments des commandes de fabrication de boîte (*note Boxes::).  Il
spécifient la largeur naturelle, etc., du texte dans la boîte.
‘\totalheight’ vaut ‘\height’ + ‘\depth’.  Pour frabriquer une boîte
dont le texte est dilaté au double de sa taille naturelle, écrivez par
ex. :

     \makebox[2\width]{Dilatez moi}

15 Faire des paragraphes
************************

Un paragraphe se termine par une ou plusieurs lignes complètement
blanches — des lignes ne contenant même pas un ‘%’.  Une ligne à blanc
ne devrait pas apparaître là où un nouveau paragraphe n’a pas le droit
de commencer, tel que en mode mathématique ou dans l’argument d’une
commande de rubricage.

15.1 ‘\indent’
==============

‘\indent’ produit un espace horizontal dont la largeur est égale à la
longueur ‘\parindent’, le “renfoncement” normal d’un paragraphe.  Elle
est utilisée pour ajouter un renfoncement de paragraphe là où il serait
autrement supprimé.

   La valeur par défaut de ‘\parindent’ est ‘1em’ en mode ‘two-column’,
autrement elle vaut ‘15pt’ pour les documents ‘10pt’, ‘17pt’ pour
‘11pt’, et ‘1.5em’ pour ‘12pt’.

15.2 ‘\noindent’
================

Utilisée au commencement d’un paragraphe, la commande ‘\noindent’
supprime tout renfoncement de paragraphe.

     ... fin du paragraphe précédent.

     \noindent Ce paragraphe n'est pas renfoncé.

   Elle est sans effet quand elle est utilisée au milieu d’un
paragraphe.

   Pour éliminer le renfoncement de paragraphe dans tout un document,
mettez ‘\setlength{\parindent}{0pt}’ dans le préambule.

15.3 ‘\parindent’ & ‘\parskip’
==============================

‘\parskip’ est une longueur élastique définissant l’espace vertical
additionnel ajouté avant chaque paragraphe.  La valeur par défaut est
‘0pt plus1pt’.

15.4 Notes en marge
===================

Synopsis :

     \marginpar[GAUCHE]{DROITE}

   La commande ‘\marginpar’ crée une note dans la marge.  La première
ligne de la note a la même ligne de base que la ligne dans le texte où
le ‘\marginpar’ se trouve.

   Lorsque vous spécifiez seulement l’argument obligatoire DROITE, le
texte est placé

   – dans la marge de droite pour une disposition en recto simple
     (option ‘oneside’, voir *note Document class options::) ;
   – dans la marge extérieure pour une disposition en recto-verso
     (option ‘twoside’, voir *note Document class options::) ;
   – dans la plus proche pour une disposition à deux colonnes (option
     ‘twocolumn’, voir *note Document class options::).

   La commande ‘\reversemarginpar’ place les notes en marge suivante sur
la marge opposée (interne).  ‘\normalmarginpar’ les replace dans la
position par défaut.

   Lorsque vous spécifier les deux arguments, GAUCHE est utilisé pour is
used la marge de gauche, et DROITE est utilisé pour la marge de is used
droite.

   Le premier mot doit normalement ne pas être sujet à une césure ; Vous
pouvez activer la césure à cet endroit en commençant le nœud avec
‘\hspace{0pt}’.

   Ces paramètres affectent le formattage de la note :

‘\marginparpush’
     Espace verticale minimale entre les notes ; par défaut ‘7pt’ pour
     des documents à ‘12pt’, ‘5pt’ sinon.

‘\marginparsep’
     Espace horizontale entre le texte principal et la note ; par défaut
     ‘11pt’ pour des documents à ‘10pt’, ‘10pt’ sinon.

‘\marginparwidth’
     Largeur de la note même ; la valeur par défaut est ‘90pt’ pour un
     document en recto simple et à ‘10pt’ , ‘83pt’ pour ‘11pt’, et
     ‘68pt’ pour ‘12pt’ ; ‘17pt’ de plus dans chacun de ces cas pour un
     document recto-verso.  En mode à deux colonnes, la valeur par
     défaut est ‘48pt’.

   La routine standarde de LaTeX pour les notes en marge n’empêche pas
les notes de déborder hors du bas de la page.

16 Formules mathématiques
*************************

Il y a trois environnements qui mettent LaTeX en mode mathématique :

‘math’
     Pour les formules qui apparaissent directement dans le texte.
‘displaymath’
     Pour les formules qui apparaissent sur leur propre ligne.
‘equation’
     Parail que l’environnement ‘displaymath’ sauf qu’il ajoute un
     numéro d’équation dans la marge de droite.

   L’environnement ‘math’ peut être utilsé aussi bien en mode paragraphe
qu’en mode LR, mais les environnements ‘displaymath’ et ‘equation’ ne
peuvent être utilisés qu’en mode paragraphe.  Les environnements ‘math’
et ‘displaymath’ sont utilisés si souvent qu’ils ont les formes abrégées
suivantes :

     \(...\) au lieu de \begin{math}...\end{math}
     \[...\] au lieu de \begin{displaymath}...\end{displaymath}

   En fait, l’environnement ‘math’ est si fréquent qu’il a une forme
encore plus courte :

     $ ... $ au lieu de \(...\)

   La commande ‘\boldmath’ change les lettres and symboles mathématiques
pour qu’il soient en gras.  Elle est utilisée _en dehors_ du mode
mathématique.  À l’inverse, la commande ‘\unboldmath’ change les glyphes
mathématique pour qu’ils soient dans une fonte normale ; elle aussi est
à utiliser _en dehors_ du mode mathématique.

   La déclaration ‘\displaystyle’ force la taille et le style de la
formule à être ceux de ‘displaymath’, par ex., avec les limites au
dessus et en dessous le signe de sommation.  Par exemple
     $\displaystyle \sum_{n=0}^\infty x_n $

16.1 Indices inférieurs & supérieurs
====================================

En mode mathématique, utilisez le caractère caret ‘^’ pour qu’une
expression EXP apparaisse en indice supérieur, c.-à-d. tapez ‘^{’EXP‘}’.
Similairement, en mode mathémtique, ‘_{’EXP‘}’ fait un indice inférieur
de EXP.

   Dans cet exemple le ‘0’ et le ‘1’ apparaissent comme indices
inférieurs alors que le ‘2’ est un indice supérieur.

     \( (x_0+x_1)^2 \)

   Pour avoir plus d’un caractère au sein de EXP utilisez des accolades
comme dans ‘e^{-2x}’.

   LaTeX manipule la mise en indice supérieur d’un matériel et tout ce
qui tient de cela de la manière naturelle, de sorte que des expressions
telles que ‘e^{x^2}’ et ‘x_{a_0}’ seront composées comme il faut.  Il
fait même ce qu’il faut quand quelque-chose a à la fois un indice
supérieur et un indice inférieur.  Dans cet exemple le ‘0’ apparaît au
bas du signe intégrale alors que le ‘10’ apparaît en haut.

     \int_0^{10} x^2 \,dx

   Vous pouvez mettre un indice supérieur ou inférieur avant un symbole
avec une construction telle que ‘{}_t K^2’ en mode mathématique (le ‘{}’
initial empèche l’indice préfixé d’être attaché à quelque symbole qui le
précède dans l’expression).

   En dehors du mode mathématique, une construction comme ‘Un
test$_\textnormal{indice inf.}$’ produit un indice inférieur composé en
mode texte, non pas en mode mathémque.  Notez qu’il y a des paquetage
spécialisée pour écrire des formule chimique, tel que ‘mhchem’.

16.2 Symboles mathématiques
===========================

LaTeX fournit presque tout symbole mathématique dont vous êtes
susceptible d’avoir besoin.  Par exemple, si vous incluez ‘$\pi$’ dans
votre code source, alors vous obtenez le symbole pi π.

   Ci-dessous se trouve une liste de symboles généralement disponibles.
Ce n’est en aucun cas une liste exhaustive.  Chaque symbole y est décrit
brièvement et avec sa classe de symbole (qui détermine l’espacement
autour de lui) qui est donnée entre parenthèses.  Les commandes pour ces
symboles peuvent, sauf mention contraire, être utilisées seulement en
mode mathématique.

   Pour redéfinir une commande de sorte à pouvoir l’utiliser quel que
soit le mode, voir *note \ensuremath::.

‘\|’
     ∥ Parallèle (relation).  Synonyme : ‘\parallel’.

‘\aleph’
     ℵ Aleph, cardinal transfini (ordinaire).

‘\alpha’
     α Lettre grecque en bas de casse alpha (ordinaire).

‘\amalg’
     ⨿ Union disjointe (binaire)

‘\angle’
     ∠ Angle géometrique (ordinaire).  Similaire : sign inférieur-à ‘<’
     et chevron ‘\langle’.

‘\approx’
     ≈ Presque égal à (relation).

‘\ast’
     ∗ Opérateur astérisque, convolution, à six branches (binaire).
     Synonyme : ‘*’, ce qui est souvent un indice supérieur ou
     inférieur, comme dans l’étoile de Kleene.  Similaire : ‘\star’, qui
     est à cinq branches, et est quelque-fois utilisée comme une
     opération binaire générale, and quelques-fois reservée pour la
     corrélation-croisée.

‘\asymp’
     ≍ Équivalent asymptomatiquement (relation).

‘\backslash’
     \ contr’oblique (ordinaire).  Similaire : soustraction
     d’ensemble ‘\setminus’, et ‘\textbackslash’ pour une contr’oblique
     en-dehors du mode mathématique.

‘\beta’
     β Lettre grecque en bas de casse beta (ordinaire).

‘\bigcap’
     ⋂ De taille Variable, ou n-aire, intersection (opérateur).
     Similaire : intersection binaire ‘\cap’.

‘\bigcirc’
     ⚪ Cercle, plus grand (binaire).  Similaire : composition de
     fonction ‘\circ’.

‘\bigcup’
     ⋃ De taille variable, ou n-aire, union (opérateur).  Similaire :
     union binaire ‘\cup’.

‘\bigodot’
     ⨀ De taille variable, ou n-aire, opérateur point encerclé
     (opérateur).

‘\bigoplus’
     ⨁ De taille variable, ou n-aire, opérateur plus encerclé
     (opérateur).

‘\bigotimes’
     ⨂ De taille variable, ou n-aire, opérateur multiplié encerclé
     (opérateur).

‘\bigtriangledown’
     ▽ De taille variable, ou n-aire, triangle ouvert pointant vers le
     bas(opérateur).

‘\bigtriangleup’
     △ De taille variable, ou n-aire, triangle ouvert pointant vers le
     haut (opérateur).

‘\bigsqcup’
     ⨆ De taille variable, ou n-aire, union carrée (opérateur).

‘\biguplus’
     ⨄ De taille variable, ou n-aire, opérateur union avec un plus
     (opérateur).  (Notez que le nom a juste un p.)

‘\bigvee’
     ⋁ De taille variable, ou n-aire, ou-logique (opérateur).

‘\bigwedge’
     ⋀ De taille variable, ou n-aire, et-logique (opérateur).

‘\bot’
     ⊥ Taquet vers le haut, minimum, plus petit élément d’un ensemble
     partiellement ordonné, ou une contradiction (ordinaire).  Voir
     aussi ‘\top’.

‘\bowtie’
     ⋈ Jonction naturelle de deux relations (relation).

‘\Box’
     □ Opérateur modal pour la nécessité ; boîte ouverte carrée
     (ordinaire).  Ceci n’est pas disponible en TeX de base.  En LaTeX
     vous devez charger le paquetage ‘amssymb’.

‘\bullet’
     • Puce (binaire).  Similaire : point de multiplication ‘\cdot’.

‘\cap’
     ∩ Intersection de deux ensembles (binaire).  Similaire : opérateur
     de taille variable ‘\bigcap’.

‘\cdot’
     ⋅ Multiplication (binaire).  Similaire : Point puce ‘\bullet’.

‘\chi’
     χ Lettre grecque en bas de casse chi (ordinaire).

‘\circ’
     ∘ Composition de fonctions, opérateur rond (binaire).  Similaire :
     opérateur de taille variable ‘\bigcirc’.

‘\clubsuit’
     ♣ Trèfle de carte à jouer (ordinaire).

‘\complement’
     ∁ Complement d’ensemble, utilisée en indice supérieur comme dans
     ‘$S^\complement$’ (ordinaire).  Ceci n’est pas disponible en TeX de
     base.  En LaTeX vous devez charger le paquetage ‘amssymb’.  On
     utilise aussi : ‘$S^{\mathsf{c}}$’ ou ‘$\bar{S}$’.

‘\cong’
     ≅ Congruent (relation).

‘\coprod’
     ∐ Coproduit (opérateur).

‘\cup’
     ∪ Réunion de deux ensembles (binaire).  opérateur de taille
     variable ‘\bigcup’.

‘\dagger’
     † Relation obèle (binaire).

‘\dashv’
     ⊣ Taquet gauche, tiret avec barre verticale à droite, tourniquet
     pour gauchers (relation).  Similaire : taquet droit,
     tourniquet ‘\vdash’.

‘\ddagger’
     ‡ Relation double obèle (binaire).

‘\Delta’
     Δ Delta grec capital, utilisé pour indiquer une incrémentation
     (ordinaire).

‘\delta’
     δ Delta grec bas-de-casse (ordinaire).

‘\Diamond’
     ◇ Opérateur grand carreau (ordinaire).  Ceci n’est pas disponible
     en TeX de base.  En LaTeX vous devez charger le paquetage
     ‘amssymb’.

‘\diamond’
     ⋄ Opérateur Carreau, ou puce carreau (binaire).  Similaire : grand
     carreau ‘\Diamond’, puce disque ‘\bullet’.

‘\diamondsuit’
     ♢ Carreau de carte à jouer (ordinaire).

‘\div’
     ÷ Signe de division, obélus (binaire).

‘\doteq’
     ≐ Approche la limite (relation).  Similaire : géométriquement égal
     à ‘\Doteq’.

‘\downarrow’
     ↓ Flèche vers le bas, converge (relation).  Similaire : flèche à
     ligne double vers le bas ‘\Downarrow’.

‘\Downarrow’
     ⇓ Flèche à ligne double vers le bas (relation).  Similaire : flèche
     à ligne simple vers le bas ‘\downarrow’.

‘\ell’
     ℓ Lettre l bas de casse cursive (ordinaire).

‘\emptyset’
     ∅ Symbole ensemble vide (ordinaire).  La forme en variante
     est ‘\varnothing’.

‘\epsilon’
     ϵ Lettre grecque bas de casse epsilon lunaire (ordinaire).
     Sembable à la lettre en texte grec.  En mathématiques on utilise
     plus fréquemment l’epsilon minuscule de ronde ‘\varepsilon’ ε.  En
     relation avec : la relation ensembliste « appartenir à » ‘\in’ ∈.

‘\equiv’
     ≡ Équivalence (relation).

‘\eta’
     η Lettre grecque en bas de casse (ordinaire).

‘\exists’
     ∃ Quanteur « Il existe » (ordinaire).

‘\flat’
     ♭ Bémol (ordinaire).

‘\forall’
     ∀ Quanteur « Pour tout » (ordinaire).

‘\frown’
     ⌢ Moue (ordinaire).

‘\Gamma’
     Γ Lettre grecque en capitale (ordinaire).

‘\gamma’
     γ Lettre grecque en bas de casse (ordinaire).

‘\ge’
     ≥ Supérieur ou égal à (relation).  Synonyme : ‘\geq’.

‘\geq’
     ≥ Supérieur ou égal à (relation).  Synonyme : ‘\ge’.

‘\gets’
     ← Auquel est assignée la valeur (relation).
     Synonyme : ‘\leftarrow’.

‘\gg’
     ≫ Beaucoup plus grand que (relation).  Similaire : Beaucoup plus
     petit que ‘\ll’.

‘\hbar’
     ℏ Constante de Planck sur deux pi (ordinaire).

‘\heartsuit’
     ♡ Cœur de carte jouer (ordinaire).

‘\hookleftarrow’
     ↩ Flèche vers la gauche avec crochet (relation).

‘\hookrightarrow’
     ↪ Flèche vers la gauche avec crochet (relation).

‘\iff’
     ⟷ Si et seulement si (relation).  C’est un ‘\Longleftrightarrow’
     avec un ‘\thickmuskip’ de chaque côté.

‘\Im’
     ℑ Partie imaginaire (ordinaire).  Voir aussi : partie réelle ‘\Re’.

‘\in’
     ∈ Appartient à (relation).  Voir aussi : lettre grecque bas de
     casse epsilon lunaire ‘\epsilon’ ϵ et l’epsilon minuscule de
     ronde ‘\varepsilon’.

‘\infty’
     ∞ Infini (ordinaire).

‘\int’
     ∫ Intégrale (opérateur).

‘\iota’
     ι Lettre grecque en bas de casse (ordinaire).

‘\Join’
     ⨝ Symbole jointure condensé (relation).  Ceci n’est pas disponible
     en TeX de base.

‘\kappa’
     κ Lettre grecque en bas de casse (ordinaire).

‘\Lambda’
     Λ Lettre grecque en capitale (ordinaire).

‘\lambda’
     λ Lettre grecque en bas de casse (ordinaire).

‘\land’
     ∧ Et logique (binaire).  Synonyme : ‘\wedge’.  Voir aussi
     ou-logique ‘\lor’.

‘\langle’
     ⟨ Chevron mathématique gauche, ou séquence, crochet (ouvrant).
     Similaire : inférieur à ‘<’.  Correspond à ‘\rangle’.

‘\lbrace’
     { Accolade gauche (ouvrant).  Synonyme : ‘\{’.  Correspond
     à ‘\rbrace’.

‘\lbrack’
     [ Crochet gauche (ouvrant).  Synonyme : ‘[’.  Correspond
     à ‘\rbrack’.

‘\lceil’
     ⌈ Plafond à gauche, ressemble à un crochet mais avec le pied coupé
     (ouvrant).  Correspond à ‘\rceil’.

‘\le’
     ≤ Inférieur ou égal à (relation).  C’est un synonyme de ‘\leq’.

‘\leadsto’
     ⇝ flèche vers la droite en tire-bouchon (relation).  Ceci n’est pas
     disponible en TeX de base.  En LaTeX vous devez charger le
     paquetage ‘amssymb’.

‘\Leftarrow’
     ⇐ Est impliqué par, flèche vers la gauche à double-ligne
     (relation).  Similaire : flèche vers la gauche à simple
     ligne ‘\leftarrow’.

‘\leftarrow’
     ← Flèche vers la gauche à simple ligne (relation).
     Synonyme : ‘\gets’.  Similaire : Flèche vers la gauche à
     double-ligne ‘\Leftarrow’.

‘\leftharpoondown’
     ↽ Harpon vers la gauche à simple ligne avec crochet vers le bas
     (relation).

‘\leftharpoonup’
     ↼ Harpon vers la gauche à simple ligne avec crochet vers le haut
     (relation).

‘\Leftrightarrow’
     ⇔ Bi-implication ; double flèche bilatérale (relation).
     Similaire : flèche bilatérale ‘\leftrightarrow’.

‘\leftrightarrow’
     ↔ Flèche bilatérale (relation).  Similaire : double flèche
     bilatérale ‘\Leftrightarrow’.

‘\leq’
     ≤ Inférieur ou égal à (relation).  Synonyme : ‘\le’.

‘\lfloor’
     ⌊ Plancher à gauche (ouvrant).  Correspond à : ‘\rfloor’.

‘\lhd’
     ◁ Pointe de flèche, c.-à-d. triangle pointant vers la gauche
     (binaire).  Ceci n’est pas disponible en TeX de base.  En LaTeX
     vous devez charger le paquetage ‘amssymb’.  For the normal subgroup
     symbol you should load ‘amssymb’ and use ‘\vartriangleleft’ (qui
     est une relation et ainsi donne un meilleur espacement).

‘\ll’
     ≪ Beaucoup plus petit que (relation).  Similaire : Beaucoup plus
     grand que ‘\gg’.

‘\lnot’
     ¬ Négation logique (ordinaire).  Synonyme : ‘\neg’.

‘\longleftarrow’
     ⟵ Longue flèche vers la gauche à ligne simple (relation).
     Similaire : longue flèche gauche à ligne double ‘\Longleftarrow’.

‘\longleftrightarrow’
     ⟷ Longue flèche bilatérale à ligne simple (relation).  Similaire :
     longue flèche bilatérale à ligne double ‘\Longleftrightarrow’.

‘\longmapsto’
     ⟼ Longue flèche d’un taquet vers la droite à ligne simple
     (relation).  Similaire : version courte ‘\mapsto’.

‘\longrightarrow’
     ⟶ Longue flèche vers la droite à ligne simple (relation).
     Similaire : longue flèche vers la droite à ligne
     double ‘\Longrightarrow’.

‘\lor’
     ∨ Ou-logique (binaire).  Synonyme : ‘\vee’.  Voir auss
     et-logique ‘\land’.

‘\mapsto’
     ↦ Flèche d’un taquet vers la droite (relation).  Similaire :
     version longue ‘\longmapsto’.

‘\mho’
     ℧ Conductance, symbole Ohm culbuté (ordinaire).  Ceci n’est pas
     disponible en TeX de base.  En LaTeX vous devez charger le
     paquetage ‘amssymb’.

‘\mid’
     ∣ Barre verticale à ligne simple (relation).  une utilisation
     typique de ‘\mid’ est pour un ensemble ‘\{\, x \mid x\geq 5 \,\}’.

     Similaire : ‘\vert’ et ‘|’ produisent le même symbole de barre
     verticale à ligne simple mais sans aucun espacement (on les classe
     comme « ordinaires ») et vous ne devriez pas les utiliser comme
     symbole de relation mais seulement comme des ordinaux, c.-à-d.
     comme des symboles de note en bas de page.  Pour dénoter une valeur
     absolue, voir l’entrée de ‘\vert’ et pour une norme voir l’entrée
     de ‘\Vert’.

‘\models’
     ⊨ Vrai, ou satisfait ; double turnstile, short double dash
     (relation).  Similaire : long double dash ‘\vDash’.

‘\mp’
     ∓ Moins ou plus (relation).

‘\mu’
     μ Lettre grecque en bas de casse (ordinaire).

‘\nabla’
     ∇ Del de Hamilton, ou différentiel, opérateur (ordinaire).

‘\natural’
     ♮ Bécarre (ordinaire).

‘\ne’
     ≠ Non égal (relation).  Synonyme : ‘\neq’.

‘\nearrow’
     ↗ Flèche nord-est (relation).

‘\neg’
     ¬ Négation logique (ordinaire).  Synonyme : ‘\lnot’.  Utilisé
     parfois au lieu du symbole de négation: ‘\sim’.

‘\neq’
     ≠ Non égal (relation).  Synonyme : ‘\ne’.

‘\ni’
     ∋ Signe d’appartenance réfléchi ; « contient comme élément »
     (relation).  Synonyme : ‘\owns’.  Similaire : « appartient
     à » ‘\in’.

‘\not’
     ̸ Barre oblique longue utilisée pour rayer un opérateur la suivant
     (relation).

     Beaucoup opérateurs en négation qui n’ont pas besoin de ‘\not’ sont
     disponibles, en particulier avec le paquetage ‘amssymb’.  Par
     exemple, ‘\notin’ est sans doute préférable à ‘\not\in’ d’un point
     de vue typographique.

‘\notin’
     ∉ N’appartient pas à (relation).  Similaire : non contenu
     dans ‘\nsubseteq’.

‘\nu’
     ν Lettre grecque en bas de casse (ordinaire).

‘\nwarrow’
     ↖ Flèche nord-ouest (relation).

‘\odot’
     ⊙ Point cerclé (binaire).  Similaire : opérateur de taille
     variable ‘\bigodot’.

‘\oint’
     ∮ Intégrale de contour, intégrale avec un cercle au milieu
     (opérateur).

‘\Omega’
     Ω Lettre grecque en capitale (ordinaire).

‘\omega’
     ω Lettre grecque en bas de casse (ordinaire).

‘\ominus’
     ⊖ Signe moins, ou tiret, cerclé (binaire).

‘\oplus’
     ⊕ Signe plus cerclé (binaire).  Similaire : opérateur de taille
     variable ‘\bigoplus’.

‘\oslash’
     ⊘ Barre de fraction, ou barre oblique, cerclée (binaire).

‘\otimes’
     ⊗ Signe de multiplication, ou croix, cerclé (binaire).  Similaire :
     opérateur de taille variable ‘\bigotimes’.

‘\owns’
     ∋ Epsilon d’appartenance réfléchi ; « contient comme élément »
     (relation).  Synonyme : ‘\ni’.  Similaire : appartient à ‘\in’.

‘\parallel’
     ∥ Parallèle (relation).  Synonyme : ‘\|’.

‘\partial’
     ∂ Différentielle partielle (ordinaire).

‘\perp’
     ⟂ Perpendiculaire (relation).  Similaire : ‘\bot’ utilise le même
     glyphe mais l’espacement est différent parce qu’il est dans la
     classe ordinaire.

‘\phi’
     ϕ Lettre grecque en bas de casse (ordinaire).  La forme en variante
     est ‘\varphi’ φ.

‘\Pi’
     Π Lettre grecque en capitale (ordinaire).

‘\pi’
     π Lettre grecque en bas de casse (ordinaire).  La forme en variante
     est ‘\varpi’ ϖ.

‘\pm’
     ± Plus or minus (binaire).

‘\prec’
     ≺ Précède (relation).  Similaire : inférieur à ‘<’.

‘\preceq’
     ⪯ Précède ou égal, précède par-dessus signe égal à une ligne
     (relation).  Similaire : inférieur ou égal ‘\leq’.

‘\prime’
     ′ Prime, ou minute au sein d’une expression temporelle (ordinaire).
     Typiquement utilisé en indice supérieur ‘$A^\prime$’.  Il est à
     noter sque ‘$f^\prime$’ et ‘$f'$’ produisent le même résultat.  Un
     avantage de la seconde forme est que ‘$f'''$’ produit le symbole
     désiré, c.-à-d. le même résultat que ‘$f^{\prime\prime\prime}$’,
     mais en nécessitant moins de saisie.  Il est à noter que vous ne
     pouvez utiliser ‘\prime’ qu’en mode mathématique.  Utiliser le
     quote ‘'’ en mode texte produit un caractère différent (apostrophe
     ou guillemet anglais simple de droite).

‘\prod’
     ∏ Produit (opérateur).

‘\propto’
     ∝ Proportionnel à (relation)

‘\Psi’
     Ψ Lettre grecque en capitale (ordinaire).

‘\psi’
     ψ Lettre grecque en bas de casse (ordinaire).

‘\rangle’
     ⟩ Chevron mathématique droit, ou séquence, crochet (fermant).
     Similaire : supérieur à ‘>’.  Correspond à ‘\langle’.

‘\rbrace’
     } Accolade de droite (fermante).  Synonyme : ‘\}’.  Correspond
     à ‘\lbrace’.

‘\rbrack’
     ] Crochet droit (fermant).  Synonyme : ‘]’.  Correspond
     à ‘\lbrack’.

‘\rceil’
     ⌉ Plafond droit (fermant).  Correspond à ‘\lceil’.

‘\Re’
     ℜ Partie réelle, nombres réels, R capital gothique (ordinaire).  En
     relation avec : R majuscule ajouré, ou gras de tableau
     d’école ‘\mathbb{R}’ ; pour accéder à cela charger le paquetage
     ‘amsfonts’.

‘\restriction’
     ↾ Restriction d’une fonction (relation).
     Synonyme : ‘\upharpoonright’.  Ceci n’est pas disponible en TeX de
     base.  En LaTeX vous devez charger le paquetage ‘amssymb’.

‘\revemptyset’
     ⦰ Symbole ensemble vide inversé (ordinaire).  En relation avec :
     ‘\varnothing’.  Ceci n’est pas disponible en TeX de base.  En LaTeX
     vous devez charger le paquetage ‘stix’.

‘\rfloor’
     ⌋ Plancher droit, un crochet droit avec la dent du haut coupée
     (fermant).  Correspond à ‘\lfloor’.

‘\rhd’
     ◁ Pointe de flèche, c.-à-d. u triangle pointant vers la droite
     (binaire).  Ceci n’est pas disponible en TeX de base.  En LaTeX
     vous devez charger le paquetage ‘amssymb’.  Pour le symbole normal
     de sousgroupe vous devriez plutôt charger ‘amssymb’ et utiliser
     ‘\vartriangleright’ (qui est une relation et ainsi donne un
     meilleur espacement).

‘\rho’
     ρ Lettre grecque en bas de casse (ordinaire).  La forme en variante
     est ‘\varrho’ ϱ.

‘\Rightarrow’
     ⇒ Implique, flèche vers la droite à double-ligne (relation).
     Similaire : flèche vers la droite ‘\rightarrow’.

‘\rightarrow’
     → Flèche vers la droite à ligne simple (relation).
     Synonyme : ‘\to’.  Similaire : flèche vers droite à ligne
     double ‘\Rightarrow’.

‘\rightharpoondown’
     ⇁ Harpon vers la droite avec crochet vers le bas (relation).

‘\rightharpoonup’
     ⇀ Harpon vers la droite avec crochet vers la haut (relation).

‘\rightleftharpoons’
     ⇌ Harpon vers la droite avec crochet vers le haut au dessus d’un
     harpon vers la gauche avec crochet vers le bas (relation).

‘\searrow’
     ↘ Flèche pointant sud-est (relation).

‘\setminus’
     ⧵ Difference ensembliste, barre de faction inversée ou
     contr’oblique, comme \ (binaire).  Similaire :
     contr’oblique ‘\backslash’ et aussi ‘\textbackslash’ hors du mode
     mathémaitque.

‘\sharp’
     ♯ Dièse (ordinaire).

‘\Sigma’
     Σ Lettre grecque en capitale (ordinaire).

‘\sigma’
     σ Lettre grecque en bas de casse (ordinaire).  La forme en variante
     est ‘\varsigma’ ς.

‘\sim’
     ∼ Similaire à, dans une relation (relation).

‘\simeq’
     ≃ Similaire ou égal à, dans une relation (relation).

‘\smallint’
     ∫ Signe intégrale qui ne change pas en taille plus grande au sein
     d’une formule hors texte (opérateur).

‘\smile’
     ⌣ Arc concave en haut, sourire (ordinaire).

‘\spadesuit’
     ♠ Pique de carte à jouer (ordinaire).

‘\sqcap’
     ⊓ Symbole d’intersection carré (binaire).  Similaire :
     intersection ‘cap’.

‘\sqcup’
     ⊔ Symbole d’union carré (binaire).  Similaire : union ‘\cup’.  En
     relation avec : opérateur de taille variable ‘\bigsqcup’.

‘\sqsubset’
     ⊏ Symbole carré de sous-ensemble (relation).  Similaire :
     sous-ensemble ‘\subset’.  Ceci n’est pas disponible en TeX de base.
     En LaTeX vous devez charger le paquetage ‘amssymb’.

‘\sqsubseteq’
     ⊑ Symbole carré de sous-ensemble ou égal à (binaire).  Similaire :
     subset or égal à ‘\subseteq’.

‘\sqsupset’
     ⊐ Symbole carré de sur-ensemble (relation).  Similaire :
     superset ‘\supset’.  Ceci n’est pas disponible en TeX de base.  En
     LaTeX vous devez charger le paquetage ‘amssymb’.

‘\sqsupseteq’
     ⊒ Symbole carré de sur-ensemble ou égal à (binaire).  Similaire :
     sur-ensemble ou égal ‘\supseteq’.

‘\star’
     ⋆ Étoile à cinq branches, quelque-fois utilisée comme une opération
     binaire générale mais quelque-fois réservée pour la corrélation
     croisée (binaire).  Similaire : les synonymes astérisque ‘*’ anet
     ‘\ast’, qui sont à six branches, et apparaissent plus souvent comme
     indice supérieur et inférieur, comme c’est le cas avec l’étoile de
     Kleene.

‘\subset’
     ⊂ Est contenu (occasionnellement, est impliqué par) (relation).

‘\subseteq’
     ⊆ Est contenu ou égal à (relation).

‘\succ’
     ≻ Vient après, suit (relation).  Similaire : inférieur à ‘>’.

‘\succeq’
     ⪰ Suit ou est égal à (relation).  Similaire : inférieur ou égal
     à ‘\leq’.

‘\sum’
     ∑ Summation (opérateur).  Similaire : Lettre grecque
     capitale ‘\Sigma’.

‘\supset’
     ⊃ Contient (relation).

‘\supseteq’
     ⊇ Contient ou est égal à (relation).

‘\surd’
     √ Symbole racine (ordinaire).  La commande LaTeX ‘\sqrt{..}’
     compose la racine de l’argument, avec une barre qui s’étend pour
     couvrir l’argument.

‘\swarrow’
     ↙ Flèche pointant au sud-ouest (relation).

‘\tau’
     τ Lettre grecque en bas de casse (ordinaire).

‘\theta’
     θ Lettre grecque en bas de casse (ordinaire).  La forme en variante
     est ‘\vartheta’ ϑ.

‘\times’
     × Signe de multiplication d’école primaire (binaire).  Voir
     aussi ‘\cdot’.

‘\to’
     → Flèche en ligne simple vers la droite (relation).
     Synonyme : ‘\rightarrow’.

‘\top’
     ⊤ Taquet vers le haut ; dessus, plus grand élément d’un poset
     (ordinaire).  Voir aussi ‘\bot’.

‘\triangle’
     △ Triangle (ordinaire).

‘\triangleleft’
     ◁ Triangle non-rempli pointant à gauche (binaire).
     Similaire : ‘\lhd’.  Pour le symbole normal de sous-groupe vous
     devez charger ‘amssymb’ et utiliser ‘\vartriangleleft’ (qui est une
     relation et ainsi donne un meilleur espacement).

‘\triangleright’
     ▷ Triangle non-rempli pointant à droite (binaire).  Pour le symbole
     normal de sousgroupe vous devez à la place charger ‘amssymb’ et
     utiliser ‘\vartriangleright’ (qui est une relation et ainsi donne
     un meilleur espacement).

‘\unlhd’
     ⊴ Pointe de flèche non-pleine soulignée pointant vers la gauche,
     c.-à-d. triangle avec une ligne en dessous (binaire).  Ceci n’est
     pas disponible en TeX de base.  En LaTeX vous devez charger le
     paquetage ‘amssymb’.  Pour le symbole normal de sous-groupe chargez
     ‘amssymb’ et utilisez ‘\vartrianglelefteq’ (qui est une relation et
     ainsi donne un meilleur espacement).

‘\unrhd’
     ⊵ Pointe de flèche non-pleine soulignée pointant vers la droite,
     c.-à-d. triangle avec une ligne en dessous (binaire).  Ceci n’est
     pas disponible en TeX de base.  En LaTeX vous devez charger le
     paquetage ‘amssymb’.  Pour le symbole normal de sous-groupe chargez
     ‘amssymb’ et utilisez ‘\vartrianglerighteq’ (qui est une relation
     et ainsi donne un meilleur espacement).

‘\Uparrow’
     ⇑ Flèche vers le haut à ligne double (relation).  Similaire :
     flèche vers le haut à ligne simple ‘\uparrow’.

‘\uparrow’
     ↑ Single-line upward-pointing flèche, diverges (relation).
     Similaire : double-line up-pointing flèche ‘\Uparrow’.

‘\Updownarrow’
     ⇕ Double-line upward-and-downward-pointing flèche (relation).
     Similaire : single-line upward-and-downward-pointing
     flèche ‘\updownarrow’.

‘\updownarrow’
     ↕ flèche haut et bas à ligne simple (relation).  Similaire : flèche
     haut et bas à ligne double ‘\Updownarrow’.

‘\upharpoonright’
     ↾ Harpon vers le haut avec crochet à droite (relation).
     Synonyme : ‘\restriction’.  Ceci n’est pas disponible en TeX de
     base.  En LaTeX vous devez charger le paquetage ‘amssymb’.

‘\uplus’
     ⊎ Union de multiensemble, un symbole union avec un symbole plus en
     son sein (binaire).  Similaire : union ‘\cup’.  En relation avec :
     opérateur de taille variable ‘\biguplus’.

‘\Upsilon’
     Υ Lettre grecque en capitale (ordinaire).

‘\upsilon’
     υ Lettre grecque en bas de casse (ordinaire).

‘\varepsilon’
     ε Epsilon de ronde en bas de casse (ordinaire).  Plus largement
     utilise en mathematique que la forme non variante epsilon lunaire
     ‘\epsilon’ ϵ.  En relation avec : « appartient à » ‘\in’.

‘\vanothing’
     ∅ Symbole ensemble vide.  Similaire : ‘\emptyset’.  En relation
     avec : ‘\revemptyset’.  Ceci n’est pas disponible en TeX de base.
     En LaTeX vous devez charger le paquetage ‘amssymb’.

‘\varphi’
     φ Variante de la lettre grecque bas de casse (ordinaire).  La forme
     non en variante est ‘\phi’ ϕ.

‘\varpi’
     ϖ Variante de la lettre grecque bas de casse (ordinaire).  La forme
     non en variante est ‘\pi’ π.

‘\varrho’
     ϱ Variante de la lettre grecque bas de casse (ordinaire).  La forme
     non en variante est ‘\rho’ ρ.

‘\varsigma’
     ς Variante de la lettre grecque bas de casse (ordinaire).  La forme
     non en variante est ‘\sigma’ σ.

‘\vartheta’
     ϑ Variante de la lettre grecque bas de casse (ordinaire).  La forme
     non en variante est ‘\theta’ θ.

‘\vdash ⊢ Taquet droit ; prouve, implique ;’
     portillon/tourniquet ; barre verticale et un tiret (relation).
     Similaire : portillon inversé ‘\dashv’.

‘\vee’
     ∨ Ou logique ; une forme de v pointant vers le bas (binaire).  En
     relation avec : Et logique ‘\wedge’.  Similaire : Opérateur de
     taille variable ‘\bigvee’.

‘\Vert’
     ‖ Double barre verticale (ordinaire).  Similaire : barre verticale
     simple ‘\vert’.

     Pour une norme vous pouvez utiliser le paquetage ‘mathtools’ et
     ajouter ‘\DeclarePairedDelimiter\norm{\lVert}{\rVert}’ à votre
     préambule.  Ceci vous donne trois variantes de commande pour faire
     des barres verticales correctement espacées horizontalement : si
     dans le corps du document vous écrivez la version étoilée
     ‘$\norm*{M^\perp}$’ alors la hauteur des barres verticales
     correspond à celle de l’argument, alors qu’avec ‘\norm{M^\perp}’
     les barres ne grnadissent pas avec la hauteur de l’argument mais à
     la place reste de la hauteur par défaut, et
     ‘\norm[COMMANDE-TAILLE]{M^\perp}’ donne aussi des barres qui ne
     grandissent pas mais sont de la taille donnée dans la
     COMMANDE-TAILLE, par ex. ‘\Bigg’.

‘\vert’
     | Barre verticale simple (ordinaire).  Similaire : barre à
     double-ligne verticale ‘\Vert’.  Pour usage tel qu’au sein de la
     définition d’un ensemble, utilisez ‘\mid’ parce que c’est une
     relation.

     Pour une valeur aboslue vous pouvez utilise le paquetage
     ‘mathtools’ et ajouter
     ‘\DeclarePairedDelimiter\abs{\lvert}{\rvert}’ à votre préambule.
     Ceci vous donne trois variantes de commande pour les barres simples
     verticales qui sont correctement espacées verticalement : si dans
     le corps du document vous écrivrez la version étoilée
     ‘$\abs*{\frac{22}{7}}$’ alors la hauteur des barres verticales
     correspond à la hauteur de l’argument, alors qu’avec
     ‘\abs{\frac{22}{7}}’ les pabarres ne grandissent pas avec
     l’argument ais à la place sont de la hauteur par défaut, et
     ‘\abs[COMMANDE-TAILLE]{\frac{22}{7}}’ donne aussi des barres qui ne
     grandissent pas mais qui sont rélgées à la taille donnée par la
     COMMANDE-TAILLE, par ex. ‘\Bigg’.

‘\wedge’
     ∧ Et logique (binaire).  Synonyme : ‘\land’.  Voir aussi ou logique
     ‘\vee’.  Similaire : opérateur de taille variable ‘\bigwedge’.

‘\wp’
     ℘ « p » de Weierstrass, fonction elliptique de Weierstrass
     (ordinaire).

‘\wr’
     ≀ Produit couronnne (binaire).

‘\Xi’
     Ξ Lettre grecque en capitale (ordinaire).

‘\xi’
     ξ Lettre grecque en bas de casse (ordinaire).

‘\zeta’
     ζ Lettre grecque en bas de casse (ordinaire).

16.3 Fonctions mathématiques
============================

En mode mathématique ces commandes produisent des noms de fonction en
police romaine et avec l’espacement adéquat.

‘\arccos’
     \arccos

‘\arcsin’
     \arcsin

‘\arctan’
     \arctan

‘\arg’
     \arg

‘\bmod’
     Opérateur modulo binaire (x \bmod y)

‘\cos’
     \cos

‘\cosh’
     \cosh

‘\cot’
     \cos

‘\coth’
     \cosh

‘\csc’
     \csc

‘\deg’
     \deg

‘\det’
     \deg

‘\dim’
     \dim

‘\exp’
     \exp

‘\gcd’
     \gcd

‘\hom’
     \hom

‘\inf’
     \inf

‘\ker’
     \ker

‘\lg’
     \lg

‘\lim’
     \lim

‘\liminf’
     \liminf

‘\limsup’
     \limsup

‘\ln’
     \ln

‘\log’
     \log

‘\max’
     \max

‘\min’
     \min

‘\pmod’
     Modulo parenthésé, comme dans (\pmod 2^n - 1)

‘\Pr’
     \Pr

‘\sec’
     \sec

‘\sin’
     \sin

‘\sinh’
     \sinh

‘\sup’
     \sup

‘\tan’
     \tan

‘\tanh’
     \tanh

16.4 Accents mathématiques
==========================

LaTeX fournit diverse commandes pour produire des lettres accentuées en
math.  Elles diffèrent de celles concernant les accents en texte normal
(*note Accents::).

‘\acute’
     Accent aigu mathématique : \acute{x}.

‘\bar’
     Accent barre suscrite mathématique : \bar{x}.

‘\breve’
     Accent brève mathématique : \breve{x}.

‘\check’
     Accent háček (caron) mathématique : \check{x}.

‘\ddot’
     Accent diérèse (tréma) mathématique : \ddot{x}.

‘\dot’
     Accent point suscrit mathématique : \dot{x}.

‘\grave’
     Accent grave mathématique : \grave{x}.

‘\hat’
     Accent chapeau (circonflexe) mathématique : \hat{x}.

‘\imath’
     I sans point mathématique.

‘\jmath’
     J sans point mathématique.

‘\mathring’
     Accent rond-en-chef mathématique : x̊.

‘\tilde’
     Accent tilde mathématique : \tilde{x}.

‘\vec’
     Symbole vecteur mathématique : \vec{x}.

‘\widehat’
     Accent chapeau large mathématique : \widehat{x+y}.

‘\widetilde’
     Accent tilde mathématique : \widetilde{x+y}.

16.5 Espacement en mode mathématique
====================================

Au sein d’un environnement ‘math’, LaTeX ignore les espaces que vous
tapez et met à la place l’espacement correspondant aux règles normales
pour les textes mathématiques.

   En mode mathématique, beaucoup de définitions sont exprimées dans
l’unité mathématique “mu” donnée par 1 em = 18 mu, où le em est pris de
la famille courante des symboles mathématiques (*note Units of
length::).

‘\;’
     Normalement ‘5.0mu plus 5.0mu’.  Le nom long est ‘\thickspace’.
     Utilisable seulement en mode mathématique.

‘\:’
‘\>’
     Normalement ‘4.0mu plus 2.0mu minus 4.0mu’.  The longer name is
     ‘\medspace’.  Utilisable seulement en mode mathématique.

‘\,’
     Normalement ‘3mu’.  Le nom long est ‘\thinspace’.  Utilisable à la
     fois en mode mathématique et en mode texte.  *Note \thinspace::.

‘\!’
     Une espace finie négative.  Normalement ‘-3mu’.  Utilisable
     seulement en mode mathématique.

‘\quad’
     Vaut 18mu, c.-à-d. 1em.  Souvent utilisé pour l’espace entourant
     les équation ou expression, par ex. pour l’espace entre deux
     équation au sein d’un environnement ‘displaymath’.  Utilisable à la
     fois en mode mathématique et en mode texte.

‘\qquad’
     Une longueur de 2 quads, soit 36mu = 2em.  Utilisable à la fois en
     mode mathématique et en mode texte.

   Dans cet exemple une espace fine sépare la fonction de la forme
différentielle.

     \int_0^1 f(x)\,dx

16.6 Recueil de diverses commandes utiles en math
=================================================

‘\*’
     Un symbole de multipliciation “discrétionnaire”, sur lequel un saut
     de ligne est autorisé.  En l’absence de saut, la multiplication est
     indiquée implicitement par un espace, alors qu’en cas de saut un
     symbole × est imprimé immédiatement avant le saut.  Ainsi

          \documentclass{article}
          \usepackage[utf8]{inputenc}
          \usepackage{french}
          \begin{document}
          Mais \(A_3 = 0\), ainsi le produit de tous les termes de
          \(A_1\) à \(A_4\), c.-à-d.\ \(A_1\* A_2\* A_3 \* A_4\),
          est égal à zéro.
          \end{document}

     produit une sortie de ce type (on a omis une partie du texte pour
     faire apparaître la césure au même endroit que dans une sortie
     TeX) :

          Mais A_3 = 0, ainsi [...] de A_1 à A_4, c.-à-d. A_1 A_2 \times
          A_3 A_4, est égal à zéro.

‘\cdots’
     Des points de suspension élevés au centre de la ligne.

‘\ddots’
     Des points de suspension en diagonale : \ddots.

‘\frac{NUM}{DÉN}’
     Produit la fraction NUM divisé par DÉN.

‘\left DELIM1 ... \right DELIM2’
     Les deux délimiteurs ne se correspondent par nécessairement ; ‘.’
     tient lieu de “délimiteur nul”, ne produisant rien en sortie.  Les
     délimiteurs sont dimensionnés selon la portion de formule
     mathématique qu’ils embrassent.  Exemple : ‘\left( \sum_{i=1}^{10}
     a_i \right]’.

‘\mathdollar’
     Signe dollar en mode mathématique : $.

‘\mathellipsis’
     Points de suspension (épacés pour du texte) en mode mathématique :
     ....

‘\mathparagraph’
     Signe paragraphe (pied-de-mouche) en mode mathématique : ¶.

‘\mathsection’
     Signe section en mode mathématique.

‘\mathsterling’
     Signe livre sterling mode mathématique : £.

‘\mathunderscore’
     Signe « souligné » en mode mathématique : _.

‘\overbrace{MATH}’
     Génère une accolade au dessus de MATH.  Par exemple,
     ‘\overbrace{x+\cdots+x}^{k \;\textrm{fois}}’.

‘\overline{TEXTE}’
     Génère une ligne horizontale au dessus de TEXTE.  Par exemple,
     ‘\overline{x+y}’.

‘\sqrt[NIÈME]{ARG}’
     Produit la représentation de la racine carrée de ARG.  L’argument
     optionnel NIÈME détermine quelle racine produire.  Par exemple, la
     racine cubique de ‘x+y’ serait tapée comme ‘$\sqrt[3]{x+y}$’.

‘\stackrel{TEXTE}{RELATION}’
     Place TEXTE au dessus de RELATION.  Par exemple,
     ‘\stackrel{f}{\longrightarrow}’.

‘\underbrace{MATH}’
     Génère MATH avec une accolade en-dessous.  Par exemple,
     ‘\underbrace{x+y+z}_{>\,0}’.

‘\underline{TEXTE}’
     A pour effet que TEXTE, ce qui peut être ou non en mode
     mathématique, soit souligné.  La ligne est toujours sous le texte,
     en prenant en compte les jambages.

‘\vdots’
     Produit des points de suspension alignés verticalement.

17 Modes
********

Quand LaTeX traite votre texte en entrée, il est forcément dans l’un de
ces trois modes :

   – Mode paragraphe
   – Mode math
   – Mode gauche-à-doite, appelé également mode LR (left-to-right) pour
     faire bref

   LaTeX change le mode seulement lorsqu’il monte ou descend un escalier
le menant à un niveau différent, quoique tous les changement de niveau
ne produisent pas de changement de mode.  Les changements de mode se
produisent seulement lorsqu’on entre dans ou quitte un environnement, ou
quand LaTeX traite l’argument de cetraines commandes qui produisent du
texte.

   Le « mode paragraphe » est le plus usuel ; c’est celui dans lequel
LaTeX se trouve lorsqu’il traite du texte ordinaire.  Dans ce mode-là,
LaTeX fragments votre texte en lignes et fragmentes les lignes en pages.
LaTeX est en « mode math » quand il est en train de générer une formule
mathématique.  En « mode LR », comme en mode paragraphe, LaTeX considère
la sortie qu’il produit comme une chaîne de mots avec des espaces entre
eux.  Toutefois, contrairement au mode paragraphe, LaTeX continue à
progresser de la gauche vers la droite ; il ne démarre jamais une
nouvelle ligne en mode LR. Même si vous mettez une centraine de mots
dans une ‘\mbox’, LaTeX continue à les composer de gauche à droite au
sein d’une seule boîte, et ensuite se plaindra que la boîte résultante
est trop large pour tenir dans la ligne.

   LaTeX est en mode LR quand il commence à fabriquer une boîte avec une
commande ‘\mbox’.  Vous pouver le faire entrer dans un mode different
mode au sein de la boîte — par exemple, vous pouvez le faire entrer en
mode math pour mettre un forume dans la boîte.  Il y a aussi plusieurs
commandes qui produisent du texte et environnement pour fabriquer une
boîte qui mettre LaTeX en mode paragraphe.  La boîte fabriquée par l’une
de ces commandes ou environnements est appelée une ‘parbox’.  Quand
LaTeX est en mode paragraphe alors qu’il fabrique une boîte, on dit
qu’il est en « mode paragraphe interne ».  Son mode paragraphe normal,
celui dans lequel il démarre, est appelé « mode paragraphe externe ».

17.1 ‘\ensuremath’
==================

Synopsis :

     \ensuremath{FORMULE}

   La commande ‘\ensuremath’ assure que FORMULE est composée en mode
mathématique quel que soit le mode courant où la commande apparaît.

   Par exemple :

     \documentclass{report}
     \usepackage{french}
     \newcommand{\ab}{\ensuremath{(\delta, \varepsilon)}}
     \begin{document}
     Le couple \ab\ vaut alors \(\ab = (\frac{1}{\pi}, 0)\), ...
     \end{document}

   Il est possible de redéfinir des commandes qui ne peuvent être
utilisées qu’en mode mathématique pour qu’elles puissent être utilisées
en tout mode comme dans l’exemple ci-dessous avec ‘\leadsto’ :

     \documentclass{report}
     \usepackage{amssymb}
     \usepackage{french}
     \newcommand{\originalMeaningOfLeadsTo}{}
     \let\originalMeaningOfLeadsTo\leadsto
     \renewcommand\leadsto{\ensuremath{\originalMeaningOfLeadsTo}}
     \begin{document}
     Tous les chemins \leadsto\ Rome.
     \end{document}

18 Styles de page
*****************

La commande ‘\documentclass’ détermine la taille et la position de
l’en-tête et du bas de page.  Le style de page détermine leur contenu.

18.1 ‘\maketitle’
=================

18.2 ‘\pagenumbering’
=====================

Synopsis :

     \pagenumbering{STYLE}

   Spécifie le style des numéros de page numbers selon STYLE.
‘\pagenumbering’ remet également le numéro de page à 1.  L’argument
STYLE peut prendre les valeurs suivantes :

‘arabic’
     nombres arabes

‘roman’
     Nombres romain en bas de casse

‘Roman’
     Nombres romain en capitales

‘alph’
     Lettres en bas de casse

‘Alph’
     Lettre en capitales

18.3 ‘\pagestyle’
=================

18.4 ‘\thispagestyle{STYLE}’
============================

La commande ‘\thispagestyle’ fonctionne de la même manière que la
commande ‘\pagestyle’ (voir section pécédente) à ceci près qu’elle
change en STYLE pour la page courante seulement.

19 Espaces
**********

LaTeX a beaucoup de façons de produire de l’espace blanc (ou rempli).

   Une autre commande produisant de l’espace est ‘\,’ pour produire une
espace « fine » (d’habitude 1/6quad).  Elle peut être utilisée en mode
texte, mais est le plus souvent utile en mode math (*note Espacement en
mode mathématique: Spacing in math mode.).

19.1 ‘\hspace’
==============

Synopsis :

     \hspace{LONGUEUR}
     \hspace*{LONGUEUR}

   La commande ‘\hspace’ ajoute de l’espace horizontal.  L’argument
LONGUEUR peut être exprimé en toute unité que LaTeX comprend : points,
pouces, etc. C’est une longueur élastique.  Vous pouvez ajouter aussi
bien de l’espace négatif que de l’espace positif avec une commande
‘\hspace’ ; ajouter de l’espace negatif revient à retourner en arrière.

   LaTeX enlève normalement l’espace horizontal qui vient au début ou à
la fin d’une ligne.  Pour préserver cet espace, utilisez la forme
étoilée, c.-à-d. avec le suffixe ‘*’ optionnel.

19.2 ‘\hfill’
=============

La commande ‘\hfill’ de remplissage produit une “longueur élastique” qui
n’a aucun espace naturel mais peut s’allonger ou se rétrécir
horizontalement autant que nécessaire.

   Le paramètre ‘\fill’ est la longueur élastique elle-même (c.-à-d.
pour parler technique, la valeur de glue ‘0pt plus1fill’) ; ainsi,
‘\hspace\fill’ équivaut à ‘\hfill’.

19.3 ‘\<<espace>>’ et \@
========================

Ces commandes permettent de marquer un caractère de ponctuation,
typiquement un point, comme soit finissant une phrase, soit finissant
une abréviation.

   Par défaut, lorsque LaTeX justifie une ligne il ajuste l’espace après
le point final de chaque phrase (ou le point d’interrogation, la
virgule, ou le deux-points) plus que pour l’espace inter-mot (*note
\frenchspacing::).  LaTeX suppose que le point finit une phrase à moins
qu’il soit précédé d’une lettre capitale, dans quel cas il considère que
ce point fait partie d’une abréviation.  Il est à noter que si un point
final de phrase est immédiatement suivit d’une parenthèse ou crochet de
droite, ou d’un guillemet-apostrophe simple ou double de droite, alors
l’espace inter-phrase suit cette parenthèse ou ce guillemet.

   Si vous avez un point finissant une abréviation dont la dernière
lettre n’est pas une capitale, et que cette abréviation n’est pas le
dernier mot d’une phrase, alors faites suivre ce point d’un
contr’oblique-espace (‘\ ’), où d’un tilde (‘~’).  Voici des exemples :
‘Nat.\ Acad.\ Science’, et ‘Mr.~Bean’, et ‘(du fumier, etc.)\ à vendre’.

   Pour une autre utilisation de ‘\ ’, *note ‘\ ’ après une séquence de
contrôle: \(SPACE) after control sequence.

   Dans la situation opposée, si vous avez une lettre capitale suivi
d’un point qui finit la phrase, alors placez ‘\@’ avant ce point.  Par
ex., ‘book by the MAA\@.’ aura l’espacement inter-phrase après ce point.

   Par contre, placer ‘\@’ après un point dit à TeX que ce point ne
finit pas la phrase.  Dans l’exemple ‘les mot réservés (if, then,
etc.\@) sont différents’, TeX met un espace inter-mot après la
parenthèse fermante (notez que ‘\@’ est avant la parenthèse).

19.4 ‘\ ’ après une séquence de contrôle
========================================

La commande ‘\ ’ est aussi souvent utilisée après les séquences de
contrôle pour les empêcher d’avaler les espaces qui suivent, comme dans
‘\TeX\ c'est chouette.’ Et, dans des circonstances normales,
‘\’<tabulation> et ‘\’<sautdeligne> sont équivalents à ‘\ ’.  Pour une
autre utilisation de ‘\ ’, voir aussi *note \(SPACE) and \@::.

   Certaines personnes préfèrent utiliser ‘{}’ dans le même but, comme
dans ‘\TeX{} c'est chouette’.  Ceci a l’avantage que vous écrivez
toujours la même chose, en l’occurrence ‘\TeX{}’, qu’elle soit suivie
d’un espace ou d’un signe de ponctuation.  Comparez :

     \TeX\ est un chouette système. \TeX, un chouette système.

     \TeX{} est un chouette système. \TeX{}, un chouette système.

   Certaines commandes, notamment celles définies avec le paquetage
‘xspace’, ne suivent pas ce comportement standard.

19.5 ‘\frenchspacing’, rendre égaux les espacements inter-phrase et inter-mot
=============================================================================

Cette déclaration (provenant de TeX de base) cause que LaTeX traite
l’espacement inter-phrase de la même façon que l’espacement inter-mot.

   En justifiant le texte sur une ligne, certaine traditions
typographique, y comrpis l’anglaise, préfèrent ajuster l’espace entre
les phrase (ou après d’autres signes de ponctuation) plus que l’espace
entre les mots.  À la suite de cette déclaration, tous les espaces sont
traités de la même façon.

   Revenez au comportement par défaut en déclarant ‘\nonfrenchspacing’.

19.6 ‘\thinspace’
=================

‘\thinspace’ produit une espace insécable et non-élastique qui vaut 1/6
d’em.  C’est l’espace adéquate entre des guillemets anglais simples
emboîtés, comme dans ’”.

19.7 ‘\/’ : insérer une correction italique
===========================================

La commande ‘\/’ produit une “correction italique”.  C’est une espace
fine deéfni par le créateur de caractères typographiques pour un
caractère donné, pour éviter que le caractère entre en collision avec ce
qui suit.  Le caractère italique f a typiquement une valeur importante
de correction italique.

   Si le caractère suivant est un point ou une virgule, il n’est pas
nécessaire d’insérer une correction italique, puisque ces symboles de
ponctuation ont une très faible hauteur.  Toutefois, avec les
point-virgules ou les deux-points, de même qu’avec les lettres normales,
il peut être utilie.  Comparez : f: f; (dans la sortie TeX, les ‘f’s
sont séparés joliment) avec f: f;.

   Lorsque on change de fontes avec des commandes telles que
‘\textit{italic text}’ ou ‘{\itshape italic text}’, LaTeX insère
automatiquement une correction italique appropriée si nécessaire (*note
Font styles::).

   Malgré leur nom, les caractères romains peuvent aussi avoir une
correction italique.  Comparez : pdfTeX (dans la sortie TeX, il y a une
espace fine après le ‘f’) avec pdfTeX.

   Le concept de correction italique n’existe pas en mode mathématique ;
l’espacement y est fait d’une façon différente.

19.8 ‘\hrulefill \dotfill’
==========================

Produit une longueur élastique infinie (*note Lengths::) remplie avec un
filled filet horizontal (c.-à-d. une ligne) ou avec des pointillés, au
lieu de just de l’espace blanche.

   Quand on le place entre deux lignes à blanc cet exemple crée un
paragraphe qui est justifié à gauche et à droite, où l’espace au milieu
est rempli avec des pointillés uniformément espacés.

     \noindent Jack Aubrey\dotfill Melbury Lodge

   Pour que le filet ou les pointillés aillent jusqu’au bout de la ligne
utilisez ‘\null’ au début ou à la fin.

   Pour changer l’épaisseur du filet, copiez la définition et ajustez
là, comme avec ‘\renewcommand{\hrulefill}{\leavevmode\leaders\hrule
height 1pt\hfill\kern\z@}’, ce qui cuange l’épaisseur par défaut de
0.4pt à 1pt.  De même, ajustez l’espacement inter-pointillé comme avec
‘\renewcommand{\dotfill}{\leavevmode\cleaders\hb@xt@ 1.00em{\hss .\hss
}\hfill\kern\z@}’, ce qui change la longeur par défaut de 0.33em à
1.00em.

19.9 ‘\addvspace’
=================

‘\addvspace{LENGTH}’

   Ajoute un espace vertical de longeur LENGTH, ce qui est une longueur
élatsique (*note Lengths::).  Toutefois, si l’espace vertical a déjà été
ajouté au même point de la sortie par une commande ‘\addvspace’
précédente, alors cette commande n’ajoutera pas plus d’espace que
nécessaire à fabriquer la longeur naturelle de l’espace vertical total
égale à LENGTH.

   Utilisez cette commande pour ajuster l’espace vertical au-dessus ou
au-dessous d’un environnement qui commence un nouveau paragraphe.  (Par
exemple, un environnement Theorem est défini pour commencer et finir en
‘\addvspace{..}’ de sorte que deux Theorem consécutifs sont séparés par
un espace vertical, et non deux.)

   Cette commande est fragile (*note \protect::).

   L’erreur ‘Something's wrong--perhaps a missing \item’ signifie que
vous n’étiez pas en mode vertical quand vous avez invoqué cette
commande ; une façon pour sortir de cela et de faire précéder cette
commande d’une commande ‘\par’.

19.10 ‘\bigskip \medskip \smallskip’
====================================

Ces commandes produisent une quantité donnée d’espace, spécifiée par la
classe de document.

‘\bigskip’
     La même chose que ‘\vspace{\bigskipamount}’, ordinairement environ
     l’espace d’une ligne, avec dilatation et rétrécissement (la valeur
     par défaut pour les classes ‘book’ et ‘article’ et ‘12pt plus 4pt
     minus 4pt’).

‘\medskip’
     La même chose que ‘\vspace{\medskipamount}’, ordinairement environ
     la moitié de l’espace d’une ligne, avec dilatation et
     rétrécissement (la valeur par défaut pour les classes ‘book’ et
     ‘article’ et ‘6pt plus 2pt minus 2pt’).

‘\smallskip’
     La même chose que ‘\vspace{\smallskipamount}’, ordinairement
     environ le quart de l’espace d’une ligne, avec dilatation et
     rétrécissement (la valeur par défaut pour les classes ‘book’ et
     ‘article’ et ‘3pt plus 1pt minus 1pt’).

19.11 ‘\vfill’
==============

Finit le paragraphe courant et insère une longueur élastique verticale
(*note Lengths::) qui est infinie, de sorte qu’elle puisse se dilater ou
se rétrécir autant que nécessaire.

   On l’utilise souvent de la même façon que ‘\vspace{\fill}’, à ceci
près que ‘\vfill’ finit le paragraphe courant, tandis que
‘\vspace{\fill}’ ajoute un espace vertical infini sous sa ligne sans
tenir compte de la structure du paragraphe.  Dans les deux cas cet
espace disparaît à la fin de la page ; pour éviter cela voir *note
\vspace::.

   Dans l’exemple qui suit la page est remplie, de sorte que les lignes
en haut et en bas contiennent le texte ‘Chien perdu !’ et que le
troisième ‘Chien perdu !’ est exactement à mi-chemin entre eux.

     \begin{document}
     Chien perdu !
     \vfill
     Chien perdu !
     \vfill
     Chien perdu !
     \end{document}

19.12 ‘\vspace’
===============

Synopsis, l’une des deux formes suivantes :

     \vspace{LONGUEUR}
     \vspace*{LONGUEUR}

   Ajout l’espace verticale LONGUEUR.  Celle-ci peut-être négative ou
positive, et c’est une longueur élastique (*note Lengths::).

   LaTeX enlève l’espace verticale provenant de ‘\vspace’ aux sauts de
page, c.-à-d. au sommet et au bas des pages.  La version étoilée
‘\vspace*{...}’ permet de conserver cette espace.

   Si ‘\vspace’ est utilisée au milieu d’un paragraphe (c.-à-d. en mode
horizontal), l’esace est insérée _après_ la ligne comprenant la commande
‘\vspace’ sans commencer un nouveau paragraphe.

   Dans cet exemple les deux questions sont espacées uniformément
verticalement sur la page, avec au moins 2,5cm d’espace sous chacune
d’elle.

     \begin{document}
     1) Z'avez pas vu Mirza ? Oh la la la la la la
     \vspace{2.5cm plus 1fill}

     2) Où est donc passé ce chien ? Je le cherche partout
     \vspace{2.5cm plus 1fill}
     \end{document}

20 Boîtes
*********

Dans le fond, LaTeX met des choses dans des boîtes et ensuite met ces
boîtes sur une page.  Aussi les commandes qui suivent sont centrales.

   De nombreux paquetages sur le CTAN sont utiles pour la manipulation
de boîtes.  Un ajout utile aux commandes décrites ici est ‘adjustbox’.

20.1 ‘\mbox’ & ‘\makebox’
=========================

Synopsis, l’un parmi les suivants :

     \mbox{TEXTE}
     \makebox{TEXTE}
     \makebox[LARGEUR]{TEXTE}
     \makebox[LARGEUR][POSITION]{TEXTE}

   La commande ‘\mbox’ crée un boîte, un conteneur pour du matériel.  Le
TEXTE est composé en mode LR (*note Modes::) ainsi il n’est pas coupé en
plusieurs lignes.  La commande ‘\mbox’ est robuste, alors que ‘\makebox’
est fragile (*note \protect::).

   Comme ‘texte’ n’est pas coupé en plusieurs ligne, on peut utiliser
‘\mbox’ pour empécher une césure.  Dans l’exemple suivant, LaTeX ne peut
pas faire de césure dans le nom du char, ‘T-34’.

     Le char soviétique \mbox{T-34} est l'un des symboles de la victoire
     sur le nazisme.

   Dans les deux première version du synopsys, ‘\mbox’ et ‘\makebox’
sont sensiblement équivalente.  Elles créent une boîte juste assez large
pour contenir le TEXTE.  (Elle sont comme le ‘\hbox’ du TeX de base).

   Dans la troisième version l’argument optionnel LARGEUR spécifie la
largeur de la boîte.  Notez que l’espace occupé par le texte n’est pas
nécessairement équivalent à la largeur de la boîte.  D’une part, TEXTE
peut être trop petit ; l’exemple suivant crée une boîte d’une ligne
entière de largeur :

     \makebox[\linewidth]{Examen du chapitre}

où ‘Examen du chapitre’ est centré.  Mais TEXTE peut aussi être trop
large pour LARGEUR.  Voir l’exemple plus bas pour des boîtes de largeur
nulle.

   Au sein de l’argument LARGEUR vous pouvez utiliser les longueur
suivante qui font référence aux dimensions de la boîte que LaTeX obtient
en composant TEXTE : ‘\depth’, ‘\height’, ‘\width’, ‘\totalheight’ (la
somme de la hauteur et de la profondeur de la boîte).  Par exemple, pour
fabriquer une boîte où le texte est dilaté au double de sa largeur
naturelle vous pouvez écrire ceci :

     \makebox[2\width]{Get a stretcher}

   Pour la quatrième version du synopsis, la position du texte au sein
de la boîte est determinée par l’argument optionnel POSITION qui peut
prendre l’une des valeurs suivantes :

‘c’
     Centré (par défaut).
‘l’
     (Left) justifié à gauche.
‘r’
     (Right) justifié à droite.
‘s’
     (Stretch) justifié à travers la LARGEUR entière ; TEXTE doit
     contenir de l’espace dilatable pour que cela marche.  Par exemple,
     ceci pourrait être le libellé d’un communiqué de presse :
     ‘\noindent\makebox[\textwidth][s]{\large\hfil DÉPÊCHE\hfil
     IMMÉDIATE\hfil}’

   Une utilisation courante de ‘\makebox’ est de fabriquer des boîtes de
texte de largeur nulle.  Dans l’exemple suivant on place dans un
questionnaire la valeur des questions à leur gauche.

     \newcommand{\pts}[1]{\makebox[0em][r]{#1 points\hspace*{1em}}}
     \pts{10}Quelle est la vitesse aérodynamique d'une hirondelle à vide ?

     \pts{90}Une hirondelle africaine ou européenne ?


   Le bord droit de la sortie ‘10 points ’ (notez l’espace finale après
‘points’) est juste avant le ‘Quelle’.  Vous pouvez utiliser ‘\makebox’
de la même manière quand vous faites des graphiques, comme en ‘TikZ’ ou
‘Asymptote’, où vous mettez le bord du texte à une position connue,
quelle que soit la longueur de ce texte.

   Pour des boîtes avec cadre voir *note \fbox & \framebox::.  Pour des
boîtes de couleurs voir *note Colored boxes::.

   Il y a une version apparentée de ‘\makebox’ qui utilisée au sein de
l’environnement ‘picture’, où la longueur est données en termes
d’‘\unitlength’ (*note \makebox (picture)::).

   Comme TEXTE est composé en mode LR, ni une double contr’oblique ‘\\’,
ni ‘\par’ ne produisent un saut de ligne ; par exemple ‘\makebox{abc def
\\ ghi}’ produit en sortie ‘abc defghi’ alors que ‘\makebox{abc def \par
ghi}’ produit ‘abc def ghi’, tout deux sur une seule ligne.  Pour
obtenir des lignes multiples voir *note \parbox:: et *note minipage::.

20.2 ‘\fbox’ & ‘\framebox’
==========================

Synopsis :

     \fbox{TEXTE}
     \framebox[LARGEUR][POSITION]{TEXTE}

   Les commandes ‘\fbox’ et ‘\framebox’ sont similaires à ‘\mbox’, à
ceci près qu’elle mettent un cadre autour de l’extérieur de la boîte
ainsi créée.

   De plus, la commande ‘\framebox’ permet de spécifier explicitement la
largeur de la boîte avec l’argument optionnel LARGEUR (une longueur), et
sa position sur la ligne avec l’argument optionnel POSITION.

   Les deux commandes produisent un filet d’épaisseur ‘\fboxrule’
(valant par défaut ‘.4pt’), et laisse un espace de ‘\fboxsep’ (valant
par défaut ‘3pt’) entre le filet et le contenu de la boîte.

   *Note \framebox (picture)::, pour la commande ‘\framebox’ dans
l’environnement ‘picture’.

20.3 ‘\parbox’
==============

Synopsis, l’un parmi les suivants :

     \parbox{LARGEUR}{CONTENU}
     \parbox[POSITION]{LARGEUR}{CONTENU}
     \parbox[POSITION][HAUTEUR]{LARGEUR}{CONTENU}
     \parbox[POSITION][HAUTEUR][POS-INTERNE]{LARGEUR}{CONTENU}

   La commande ‘\parbox’ produit une boîte de texte de largeur
‘largeur’.  Cette commande peut être utilisée pour fabriquer une boîte à
partir de petits morceaux de texte, et contenant un seul paragraphe.
Cette commande est fragile (*note \protect::).

     \begin{picture}(0,0)
       ...
       \put(1,2){\parbox{4.5cm}{\raggedright Le graphique étant une
         droite sur une échelle logarithmique, la relation est
         exponentielle.}}
     \end{picture}

   Le CONTENU est taité en mode texte (*note Modes::) ainsi LaTeX fait
des sauts de ligne de sorte à former un paragraphe.  Mais il ne
fabriquera pas plusieurs paragraphes ; pour cela, utilisez un
environnement ‘minipage’ (*note minipage::).

   Les options d’une ‘\parbox’ (à l’exception du CONTENU) sont les mêmes
que pour une ‘minipage’.  Par commodité on rappelle ces options ici plus
bas, mais se référer à *note minipage:: pour une description complète.

   Il y a deux arguments obligatoires.  La LARGEUR est une longueur
rigide (*note Lengths::).  Elle règle la largeur de la boîte dans
laquelle LaTeX compose le ‘contenu’.  Le ‘contenu’ est le texte qui est
placé dans cette boîte.  Il ne devrait pas avoir de composants qui
fabriquent des paragraphes.

   Il y a trois arguments optionnels, POSITION, HAUTEUR, et POS-INTERNE.
La POSITION donne l’alignement vertical de la “parbox” relativement au
texte alentour.  La valeurs prises en charge sont ‘c’ ou ‘m’ pour que le
centre selon la dimension verticale de la parbox soit aligné avec le
centre de la ligne de texte adjacente (c’est le réglage par défaut), ou
‘t’ pour accorder la ligne du haut de la parbox avec la ligne de base du
texte alentour, ou ‘b’ pour accorder la ligne du bas.

   L’argument optionnel HAUTEUR l’emporte sur la hauteur naturelle de la
boîte.

   L’argument optionnel POS-INTERNE contrôle la position du CONTENU au
sein de la parbox.  Sa valeur par défaut est la valeur de POSITION.  Les
valeurs possibles sont : ‘t’ pour placer le CONTENU en haut de la boîte,
‘c’ pour le centrer verticalement, ‘b’ pour le place en bas de la boîte,
et ‘s’ pour le dilater verticalement (pour cela, le texte doit contenir
de l’espace vertical elastique).

20.4 ‘\raisebox’
================

Synopsis, l’un parmi les suivants :

     \raisebox{DISTANCE}{TEXTE}
     \raisebox{DISTANCE}[HAUTEUR]{TEXTE}
     \raisebox{DISTANCE}[HAUTEUR][PROFONDEUR]{TEXTE}

   La commande ‘\raisebox’ élève ou abaisse du TEXTE.  Cette commande
est fragile (*note \protect::).

   L’exemple suivant fabrique une commande pour noter la restriction
d’une fonction en abaissant le symbole barre verticale.

     \newcommand*\restreinte[1]{\raisebox{-.5ex}{$|$}_{#1}}
     $f\restreinte{A}$

   Le premier argument obligatoire spécifie la longueur dont le TEXTE
doit être élevé.  C’est une longueur rigide (*note Lengths::).  Si elle
est négative alors TEXTE est abaissé.  Le TEXTE lui-même est traité en
mode LR, aussi il ne doit pas contenir de saut de ligne (*note Modes::).

   Les arguments optionnels HAUTEUR et PROFONDEUR sont des dimensions.
S’ils sont spécifiés, ils l’emportent sur les hauteur et profondeur
naturelles de la boîte que LaTeX obtient en composant TEXTE.

   Au sein des arguments DISTANCE, HAUTEUR, et PROFONDEUR vous pouvez
utiliser les longueurs suivantes qui font référence à la dimension de la
boîte que LaTeX obtient en composant TEXTE : ‘\depth’, ‘\height’,
‘\width’, ‘\totalheight’ (qui est la somme de la hauteur et de la
profondeur de la boîte).

   L’exemple suivant aligne deux graphiques sur leur bord supérieur
(*note Graphics::).

     \usepackage{graphicx,calc}  % dans le préambule
        ...
     \begin{center}
       \raisebox{1ex-\height}{%
         \includegraphics[width=0.4\linewidth]{lion.png}}
       \qquad
       \raisebox{1ex-\height}{%
         \includegraphics[width=0.4\linewidth]{meta.png}}
     \end{center}

Le premier ‘\height’ est la hauteur de ‘lion.png’ alors que le second
est celle de ‘meta.png’.

20.5 ‘\sbox’ & ‘\savebox’
=========================

Synopsis, l’un parmi les suivants :

     \sbox{CMD-BOÎTE}{TEXTE}
     \savebox{CMD-BOÎTE}{TEXTE}
     \savebox{CMD-BOÎTE}[LARGEUR]{TEXTE}
     \savebox{CMD-BOÎTE}[LARGEUR][POS]{TEXTE}

   Cette commande compose TEXTE dans une boîte de la même façon qu’avec
‘\makebox’ (*note \mbox & \makebox::), à ceci près qu’au lieu de sortir
la boîte résultante, elle la sauvegarde dans un registre boîte référencé
par la variable nommée CMD-BOÎTE.  Le nom de variable CMD-BOÎTE commence
avec une contr’oblique, ‘\’.  Vous devez préalablement avoir alloué le
registre boîte CMD-BOÎTE avec avec ‘\newsavebox’ (*note \newsavebox::).
La commande ‘\sbox’ est robuste, alors que ‘\savebox’ est fragile (*note
\protect::).

   L’exemple suivant crée et utilise un registre boîte.

     \newsavebox{\nomcomplet}
     \sbox{\nomcomplet}{Cadet Rousselle}
       ...
     \usebox{\nomcomplet} a trois maisons qui n'ont ni poutres, ni chevrons !
     C'est pour loger les hirondelles,
     Que direz-vous d'\usebox{\nomcomplet} ?

Un avantage de l’usage répété d’un registre boîte par rapport à une
variable macro ‘\newcommand’ est l’efficacité, c-à-d. que LaTeX n’a pas
besoin de répeter la composition du contenu.  Voir l’exemple plus bas.

   Les deux invocations de commande ‘\sbox{CMD-BOÎTE}{TEXTE}’ et
‘\savebox{CMD-BOÎTE}{TEXTE}’ sont sensiblement équivalentes.  Quant à la
troisième et la quatrième, les arguments optionnels vous permettent de
spécifier la largeur de la boîte comme LARGEUR, et la position du texte
au sein de cette boîte comme POSITION.  *Note \mbox & \makebox::, pour
une description complète.

   Dans les commandes ‘\sbox’ et ‘\savebox’ le TEXTE est composé en mode
LR, aussi il n’a pas de sauts de lignes (*note Modes::).  Si vous
utilisez ce qui suit alors LaTeX ne produit pas d’erreur mais ignore ce
que vous voulez faire : si vous entrez ‘\sbox{\nouvreg}{test \\ test}’
et ‘\usebox{\nouvreg}’ alors vous obtenez ‘testtest’, et si vous entrez
‘\sbox{\nouvreg}{test \par test}’ et ‘\usebox{\nouvreg}’ alors vous
obtenez ‘test test’, mais ni erreur ni avertissement.  La solution est
d’utiliser une ‘\parbox’ ou une ‘minipage’ comme dans l’exemple qui
suit :

     \savebox{\unreg}{%
       \begin{minipage}{\linewidth}
         \begin{enumerate}
           \item Premier article
           \item Second article
         \end{enumerate}
       \end{minipage}}
       ...
     \usebox{\unreg}

   En exemple de l’efficacité de réutiliser le contenu d’un registre
boîte, ce qui suit place la même image sur chaque page du document en le
plaçant dans l’en-tête.  LaTeX ne la compose qu’une fois.

     \usepackage{graphicx}  % tout cela dans le préambule
     \newsavebox{\cachetreg}
     \savebox{\cachetreg}{%
       \setlength{\unitlength}{2.5cm}%
       \begin{picture}(0,0)%
          \put(1.5,-2.5){%
            \begin{tabular}{c}
               \includegraphics[height=5cm]{companylogo.png} \\
               Bureau du Président
            \end{tabular}}
       \end{picture}%
     }
     \markright{\usebox{\cachetreg}}
     \pagestyle{headings}

L’environnment ‘picture’ est bien adapté pour régler finement le
placement.

   Si le registre ‘\noreg’ n’a pas déjà été défini alors vous obtenez
quelque-chose du genre de ‘Undefined control sequence. <argument>
\noreg’.

20.6 ‘lrbox’
============

Synopsis :

     \begin{lrbox}{CMD-BOÎTE}
       TEXTE
     \end{lrbox}

   ACeci est la forme par environnement des commandes ‘\sbox’ et
‘\savebox’, et leur est équivalent.  *Note \sbox & \savebox::, pour une
description complète.

   Le TEXTE au sein de l’environnement est sauvegardé dans un registre
boîte auquel la vartiable ‘CMD-BOÎTE’ fait référence.  Le nom de
variable CMD-BOÎTE doit commencer par une contr’oblique, ‘\’.  Vous
devez avoir alloué ce registre boîte préalablement avec ‘\newsavebox’
(*note \newsavebox::).  Dans l’exemple suivannt l’environnement est
commode pour entrer le ‘tabular’ :

     \newsavebox{\jhreg}
     \begin{lrbox}{\jhreg}
       \begin{tabular}{c}
         \includegraphics[height=1in]{jh.png} \\
         Jim Hef{}feron
       \end{tabular}
     \end{lrbox}
       ...
     \usebox{\jhreg}

20.7 ‘\usebox’
==============

Synopsis :

     \usebox{CMD-BOÎTE}

   La commande ‘\usebox’ produit la boîte la plus récemment sauvegardée
dans le registre boîte CMD-BOÎTE par une commande ‘\sbox’ ou ‘\savebox’,
ou l’environnement ‘lrbox’.  *Note \sbox & \savebox::, pour plus ample
information et des exemples.  (Notez que le nom de la variable CMD-BOÎTE
commence par une contr’oblique, ‘\’).  Cette commande est robuste (*note
\protect::).

21 Couleur
**********

Vous pouvez colorer du texte, des filets, etc.  Vous pouvez également
colorer l’intérieur d’une boîte ou une page entière et écrire du texte
par dessus.

   La prise en charge des couleurs se fait via un paquetage
supplementaire.  Aussi, toutes les commandes qui suivent ne fonctionnent
que si le préambule de votre document contient ‘\usepackage{color}’, qui
fournit le paquetage standard.

   Beaucoup d’autres paquetages complémentent également les possibilité
de LaTeX en matière de couleurs.  Notamment ‘xcolor’ est largement
utilisé et étend significativement les possibilités décrites ici, y
compris par l’ajout des modèles de couleur ‘HTML’ et ‘Hsb’.

21.1 Options du paquetage ‘color’
=================================

Synopsis (à mettre dans le préambule du document) :

     \usepackage[LISTE D'OPTION SÉPARÉES PAR DES VIRGULES]{color}

   Quand vous chargez le paquetage ‘color’ il y a deux types d’options
disponbiles.

   Le premier spécifie le “pilote d’impression”.  LaTeX ne contient pas
d’information sur les diférents système de sortie, mais au lieu de cela
dépend de l’information stockée dans un fichier.  Normalement vous ne
devriez pas spécifier les options de pilote dans le document, mais au
lieu de cela vous vous reposez sur les valeurs par défaut de votre
système.  Un avantage de procéder ainsi est que cela rend votre document
portable entre systèmes.  Pour être complet nous incluons une liste des
pilotes.  Ceux présentement pertinents sont : ‘dvipdfmx’, ‘dvips’,
‘dvisvgm’, ‘luatex’, ‘pdftex’, ‘xetex’.  Les deux pilotes ‘xdvi’ et
‘oztex’ sont pour l’essentiel des alias de ‘dvips’ (et ‘xdvi’ est
monochrome).  Ceux qui ne devraient pas être utilisés pour de nouveaux
systèmes récent sont : ‘dvipdf’, ‘dvipdfm’, ‘dviwin’, ‘dvipsone’,
‘emtex’, ‘pctexps’, ‘pctexwin’, ‘pctexhp’, ‘pctex32’, ‘truetex’,
‘tcidvi’, ‘vtex’ (et ‘dviwindo’ est un alias de ‘dvipsone’).

   Les options du second type, autres que les pilotes, sont listées
ci-dessous.

‘monochrome’
     Désactive les commande de couleur, de sorte qu’elles ne produisent
     pas d’erreur, mais ne produisent pas non plus de couleurs.

‘dvipsnames’
     Rend disponible une liste de 68 noms de couleur qui sont d’usage
     fréquent, en particulier dans des documents qui ne sont pas
     modernes.  Ces noms de couelurs étaient à l’origine fournis par le
     pilote ‘dvips’, d’où le nom de l’option.

‘nodvipsnames’
     Ne charge pas cette liste de noms de couleur, faisant faire à LaTeX
     une toute petite économie d’espace mémoire.

21.2 Modèles de couleur
=======================

Un “modèle de couleur” est une façon de représenter les couleurs.  Les
possibilité de LaTeX dépendent du pilote d’impression.  Toutefois, les
pilotes ‘pdftex’, ‘xetex’, et ‘luatex’ sont de nos jours de loin les
plus largement utilisés.  Les modèles ci-après fonctionnent pour ces
pilotes.  À une exception près ils sont également pris en charge par
tous les autre pilotes d’impression utilisés aujourd’hui.

   Il est à noter qu’une combinaison de couleur peut être additive, ou
soustractive.  Les combinaisons additives mélangent les couleurs de la
lumière, de sorte que par exemple combiner des instensités pleines de
rouge, vert et bleu produit du blanc.  Les combinaisons soustractives
mélangent les pigments, tels que les encres, de sorte que combiner des
intensités pleine de cyan, magenta et jaune produit du noir.

‘cmyk’
     Un liste séparée de virgule avec quatre nombres réel compris entre
     0 et 1 inclus.  Le premier nombre est l’intensité du cyan, le
     deuxième celle du magenta, et les autres celle du jaune et du noir.
     Un valeur du nombre de 0 signifie l’intensité minimale, alors que 1
     correspond à l’intensité pleine.  Ce modèle est fréquemment utilisé
     pour l’impression de couleur.  C’est un modèle soustractif.

‘gray’
     Un unique nombre réèl compris entre 0 et 1 inclus.  Les couleurs
     sont des nuances de gris.  Le nombre 0 produit du noir, alors que
     le 1 donne du blanc.
‘rgb’
     Une liste séparée de virgules avec trois nombres réèls compris
     entre 0 et 1, inclusive.  Le premier nombre est l’intensité de la
     composante rouge, la deuxième correspond au vert, et la troisière
     au bleu.  Une valeur de 0 donnée au nombre signifie qu’en rien
     cette composante n’est ajouté à la couleur, alors que 1 signifie
     que cela est fait à pleine intensité.  C’est un modèle additif.

‘RGB’
     (pilotes ‘pdftex’, ‘xetex’, ‘luatex’) Une liste séparée par des
     vidugles avec trois entiers compris entre 0 et 255 inclus.  Ce
     modèle est une commodité pour utiliser ‘rgb’ étant donnée qu’en
     dehors de LaTeX les couleurs sont souvent décrites dans un modèle
     rouge-vert-bleu utilisant des nombres dans cette plage.  Les
     valeurs entrées sont converties vers le modèle ‘rgb’ en divisant
     par 255.

‘named’
     On accède au couleur par des noms tels que ‘PrussianBlue’.  La
     liste des noms dépend du pilote, mais tous prennennt en charge les
     noms ‘black’, ‘blue’, ‘cyan’, ‘green’, ‘magenta’, ‘red’, ‘white’,
     et ‘yellow’ (Voir l’option ‘dvipsnames’ dans *note Color package
     options::).

21.3 Commandes pour ‘color’
===========================

Voici les commandes disponibles avec le paquetage ‘color’.

21.3.1 Definir des couleurs
---------------------------

Synopsis :

     \definecolor{NOM}{MODEL}{SPÉCIFICATION}

   Donne le nom NOM à la couleur.  Par exemple, après
‘\definecolor{silver}{rgb}{0.75,0.75,0.74}’ vous pouvez utiliser cette
couleur avec ‘Hé ho, \textcolor{silver}{Silver}~!’.

   Cet exemple donne à la couleur un nom plus abstrait, de sort qu’on
puisse la changer sans que cela prête à confusion.

     \definecolor{logocolor}{RGB}{145,92,131}    % RGB nécessite pdflatex
     \newcommand{\logo}{\textcolor{logocolor}{Les Brioches de Robert}}

   Il est fréquent que les couleurs d’un document soient définies dans
son préambule, ou dans sa classe ou style, plutôt que dans le corps du
document.

21.3.2 Mettre du texte en couleur
---------------------------------

Synopsis :

     \textcolor{NOM}{...}
     \textcolor[MODÈLE DE COULEUR]{SPÉCIFICATION DE COULEUR}{...}

   ou

     \color{NOM}
     \color[MODÈLE DE COULEUR]{SPÉCIFICATION}

   Le texte affecté prend la couleur correspondante.  La ligne suivante

     \textcolor{magenta}{Je suis Ozymandias, roi des rois~:} Voyez mon œuvre, ô puissants, et desespérez~!

met la première moitié en magenta alors que le reste est en noir.  Vous
pouvez utiliser une couleur déclarée avec ‘\definecolor’ exactement de
la même façon dont nous venons d’utiliser la couleur prédéfinie
‘magenta’.

     \definecolor{CriseDeLaQuarantaine}{rgb}{1.0,0.11,0.0}
     Je considère l'idée de m'acheter une \textcolor{CriseDeLaQuarantaine}{voiture de sport}.

   Les deux formes de commandes ‘\textcolor’ et ‘\color’ diffèrent en ce
que la première forme prend le texte à colorer en argument.  Ceci est
souvent plus commode, ou tout du moins plus explicite.  La seconde forme
est une déclaration, comme dans ‘La lune est composé de fromage
{\color{vert}}’, de sorte qu’elle est en vigueur jusqu’à la fin du
groupe ou de l’environnement courant.  Ceci est parfois utile quand on
écrit des macros, ou comme ci-dessous où on colore tout le contenu de
l’environnement ‘center’, y compris les lignes verticales et
horizontales.

     \begin{center} \color{blue}
       \begin{tabular}{l|r}
         HG &HD \\ \hline
         BG &BD
       \end{tabular}
     \end{center}

   Vous pouvez utiliser des couleurs dans les équations.  Un document
peut avoir ‘\definecolor{couleurvedette}{RGB}{225,15,0}’ dans le
préambule, et ensuite contenir cette équation :

     \begin{equation}
       \int_a^b \textcolor{couleurvedette}{f'(x)}\,dx=f(b)-f(a)
     \end{equation}

   Typiquement les couleurs utilisées dans un document sont déclarée
dans une classe ou dans un style mais il arrive qu’on désire fonctionner
au coup par coup.  C’est le cas d’usage des secondes forme du synopsis.

     Des couleurs de \textcolor[rgb]{0.33,0.14,0.47}{violet} et {\color[rgb]{0.72,0.60,0.37}doré} pour l'équipe

   Le format de SPÉCIFICATION DE COULEUR dépend du modèle de couleur
(*note Color models::).  Par exemple, alors que ‘rgb’ prend trois
nombbres, ‘gray’ n’en prend qu’un.

     La sélection a été \textcolor[gray]{0.5}{grisée}.

   Des couleurs au sein d’autres couleurs ne se combinent pas.  Ainsi

     \textcolor{green}{une sorte de \textcolor{blue}{bleu}}

se termine par un mot en bleu, et non pas dans une combinaison de bleu
et de vert.

21.3.3 Faire des boîtes en couleur
----------------------------------

Synopsis :

     \colorbox{NOM}{...}
     \colorbox[NOM MODÈLE]{SPÉCIFICATION COULEUR ARRIÈRE-PLAN BOÎTE}{...}

ou

     \fcolorbox{COULEUR CADRE}{COULEUR ARRIÈRE-PLAN BOÎTE}{...}
     \fcolorbox[NOM MODÈLE]{SPÉCIFICATION COULEUR CADRE}{SPÉCIFICATION ARRIÈRE-PLAN BOÎTE}{...}

   Fabrique une boite avec la couleur d’arrière-plan indiquée.  La
commande ‘\fcolorbox’ place un cadre autour de la boîte.  Par exemple
ceci :

     Nom~:~\colorbox{cyan}{\makebox[5cm][l]{\strut}}

fabrique une boîte de couleur cyanqui fait cinqu centimètres de long et
dont la profondeur et la hauteur sont déterminées par le ‘\strut’ (de
sorte que la profondeur est ‘-.3\baselineskip’ et la hauteur est
‘\baselineskip’).  Ceci met un texte blanc sur un arrière plan bleu :

     \colorbox{blue}{\textcolor{white}{Welcome to the machine.}}

   La commande ‘\fcolorbox’ utilise les mêmes paramètres que ‘\fbox’
(*note \fbox & \framebox::), à savoir ‘\fboxrule’ et ‘\fboxsep’, pour
régler l’épaisseur du filet et de la séparation entre l’intérieur de la
boîte et le filet l’entourant.  Les valeurs par défaut de LaTeX sont
‘0.4pt’ et ‘3pt’ respectivement.

   L’exemple suivant change l’épaisseur de la bordure en 0,8 points.
Notez qu’il est entre accolades de sorte que le changement cesse d’être
en vigueur à la fin de la seconde ligne.

     {\setlength{\fboxrule}{0.8pt}
     \fcolorbox{black}{red}{En aucun cas ne tournez cette poignée.}}

21.3.4 Faire des pages en couleur
---------------------------------

Synopsis :

     \pagecolor{NOM}
     \pagecolor[MODÈLE DE COULEUR]{SPÉCIFICATION DE COULEUR}
     \nopagecolor

   Les deux premières commandes règlent l’arrière-plan de la page, et de
toutes les pages suivantes, à la couleur indiquée.  Pour une explication
de la spécification dans la seconde forme *note Colored text::.  La
troisième fait revenir l’arrière-plan à la normale, c-à-d. un
arrière-plan transparent.  (Si cela n’est pas pris en charge, alors
utilisez ‘\pagecolor{white}’, bien que cela produit un arrière-plan
blanc au lieu de l’arrière-plan transparent par défaut.)

      ...
     \pagecolor{cyan}
      ...
     \nopagecolor

22 Graphiques
*************

Vous pouvez utiliser des graphiques tel que des fichier PNG ou PDF dans
vos documents LaTeX.  Vous aurez besoin d’un paquetage supplémentaire
standard de LaTeX.  Cet exemple montre en bref comment :

     \include{graphicx}  % dans le préambule
       ...
     \includegraphics[width=0.5\linewidth]{graphique.pdf}

   Pour utiliser les commandes décrite ici, le préambule de votre
document doit contenir soit ‘\usepackage{graphicx}’, soit
‘\usepackage{graphics}’.  (Le plus souvent, c’est ‘graphicx’ qui est
préférable.)

   Les graphiques peuvent être de deux types, matriciels ou vectoriels.
LaTeX peut utiliser les deux.  Dans les graphiques matriciels le fichier
comprend pour chaque position dans un tableau une entrée décrivant la
couleur de celle-ci.  Un exemple de ceci est une photograpgie en format
JPG. Dans une graphique vectoriel, le fichier contient une liste
d’instructions telles que ‘dessin un cercle avec tel rayon et tel
centre’.  Un exemple de ceci est le dessin d’une ligne produit par le
programme Asymptote en format PDF. En général les graphiques vectoriel
sont plus utiles car on peut les redimensionner sans pixélisation ou
autres problèmes, et parce que la plupart du temps ils ont une taille
plus petites.

   Il y a des systèmes particulièrement bien adapté pour produire des
graphiques pour un document LaTeX.  Par exemple, qui vous permettent
d’utiliser les mêmes polices que dans votre document.  LaTeX comprend un
environnement ‘picture’ (*note picture::) qui a des possibilités de
base.  En plus de cela, il y a d’autres façons d’inclure des commandes
de production de graphiques dans le document.  Deux systèmes pour cela
sont les paquetages PSTricks et TikZ. Il y a aussi des systèmes externe
à LaTeX qui génèrent un graphique qu’on peut inclure en utilisant les
commandes de ce chapitre.  Il y a aussi deux autres systèmes qui
utilisent un langage de programmation : Asymptote et MetaPost.  Encore
un autre système qui utilise une interface graphique : Xfig.  Une
description complète des ces systèmes est hors du champ d’application de
ce document ; reportez vous à leur documentation sur le CTAN.

22.1 Options du paquetage ‘graphics’
====================================

Synopsis (à placer dans le préambule du document) :

     \usepackage[LISTE D'OPTION SÉPARÉE PAR DES VIRGULES]{graphics}

   ou

     \usepackage[LISTE D'OPTION SÉPARÉE PAR DES VIRGULES]{graphicx}

   Le paquetage ‘graphicx’ a un format pour les arguments optionnels
passés à ‘\includegraphics’ qui est commode (c’est le format
clef/valeur), ainsi c’est le meilleur des deux choix pour les nouveaux
documents.  Quand vous chargez les paquetages ‘graphics’ ou ‘graphicx’
avec ‘\usepackage’ il y a deux sortes d’options disponibles.

   La première est que LaTeX ne contient pas d’information concernant
les différents systèmes de sortie, mais au lieu de cela dépend de
l’informtion stockée dans un fichier “pilote d’impression”.  Normalment
vous ne devriez pas spécifier l’option de pilote dans le document, mais
au lieu de cela vous reposer sur les valeurs par défaut du système.  Un
avantage de procéder ainsi et que cela rend les documents portables
entre systèmes.

   Pour être complet voici une liste des pilotes.  Ceux qui sont
actuellement pertinents sont : ‘dvipdfmx’, ‘dvips’, ‘dvisvgm’, ‘luatex’,
‘pdftex’, ‘xetex’.  Les deux pilotes ‘xdvi’ and ‘oztex’ sont
essentiellement des alias de ‘dvips’ (et ‘xdvi’ est monochrome).  Ceux
qu’on ne devrait pas utiliser pour de nouveaux systèmes sont :
‘dvipdfmx’, ‘dvips’, ‘dvisvgm’, ‘luatex’, ‘pdftex’, ‘xetex’.  Les deux
pilotes ‘xdvi’ et ‘oztex’ sont essentiellement des alias de ‘dvips’ (et
‘xdvi’ est monochrome).  Ceux qui ne devraient pas être utilisés pour de
nouveaux systèmes sont : ‘dvipdf’, ‘dvipdfm’, ‘dviwin’, ‘dvipsone’,
‘emtex’, ‘pctexps’, ‘pctexwin’, ‘pctexhp’, ‘pctex32’, ‘truetex’,
‘tcidvi’, ‘vtex’ (et ‘dviwindo’ est un alias de ‘dvipsone’).  Ces
pilotes sont stockés dans des fichiers avec une extension ‘.def’, tels
que ‘pdftex.def’.

   La seconde sorte d’options est décrite ci-après.

‘demo’
     Au lieu d’un fichier d’image, LaTeX met un rectangle de 150 pt sur
     100 pt (à moins qu’une autre taille soit spécifiée dans la commande
     ‘\includegraphics’).

‘draft’
     Aucun des fichier grahpique n’est affiché, mais au lieu de cela le
     nom du fichier est imprimé au sein d’une boîte de la bonne taille.
     De sorte à ce que la taille soit déterminée, le fichier doit être
     présent.

‘final’
     (Option par défaut) L’emporte sur toute options ‘draft’ précédente,
     de sorte que le document afficher le contenu des fichiers
     graphiques.

‘hiderotate’
     Ne montre pas le texte ayant subi une rotation.  (Ceci permet
     d’utiliser une visionneuse ne prenant pas en charge le texte ayant
     subi une rotation).

‘hidescale’
     Ne montre pas le texte rétréci/dilaté.  (Ceci permet d’utiliser une
     visionneuse ne prenant pas en charge le texte ayant subi un
     rétrécissment/une dilatation.)

‘hiresbb’
     Dans un fichier PS ou EPS la taille du graphique peut être
     spécifiée de deux façons.  Les lignes ‘%%BoundingBox’ décrivent la
     taille du graphique en utilisant des multiples entiers d’un point
     PostScript, c-à-d. des multiples entiers d’ 1/72 de pouce.  Une
     addition plus récente au langage PostScript autorise les multiples
     décimaux, tel que 1.23, dans les lignes ‘%%HiResBoundingBox’.
     Cette option fait que LaTeX lit la taille à partir de
     ‘%%HiResBoundingBox’ plutôt que de ‘%%BoundingBox’.

22.2 Configuration du paquetage ‘graphics’
==========================================

Ces commandes configurent la façon dont LaTeX recherche le graphique
dans le système le fichier.

   Le comportement du code de recherche dans le système de fichier
dépend nécessairement de la plateforme.  Dans ce document nous couvrons
GNU/Linux, Macintosh, et Windows, étant donné que ces systèmes ont des
configurations typiques.  Pour les autres situations consultez la
documentation dans ‘grfguide.pdf’, ou le source LaTeX, ou la
documentationn de votre distribution TeX.

22.2.1 ‘\graphicspath’
----------------------

Synopsis :

     \graphicspath{LISTE DES RÉPERTOIRES ENTRE LES ACCOLADES}

   Déclare une liste de répertoires dans lesquels rechercher des
fichiers graphiques.  Ceci permet d’écrire plus tard quelque chose du
genre de ‘\includegraphics{lion.png}’ au lieu de donner son chemin.

   LaTeX recherche toujours en premier les fichiers graphiques dans le
répertoire courant (et dans le répertoire de sortie, si spécifié ; *note
output directory::).  La déclaration ci-dessous dit au système de
regarder ensuite dans le sous-répertoire ‘img’, et ensuite ‘../img’.

     \usepackage{graphicx}   % ou graphics; à mettre dans le préambule
       ...
     \graphicspath{ {img/} {../img/} }

   La déclaration ‘\graphicspath’ est optionnelle.  Si vous ne l’incluez
pas, alors le comportement par défaut de LaTeX est de rechercher dans
tous les endroits où il recherche d’habitude un fichier (il utilise la
commande ‘\input@path’ de LaTeX).  En particulier, dans ce cas l’un l’un
des endroit où il regarde est le répertoire courant.

   Mettez chaque nom de répertoire entre accolades ; en particulier,
ci-dessus on a écrit ‘‘{img}’’.  Faites ainsi même si il n’y a qu’un
seul répertoire.  Chaque nom de répertoire doit se terminer par une
oblique vers l’avant ‘/’.  Ceci est vrai même sur Windows, où la bonne
pratique est d’utilise des obliques vers l’avant pour tous les
séparateur de répertoire puisque cela rend le document portable vers
d’autres plateformes.  Si vous avez des espace dans votre nom de
répertoire alors utilisez des guillemets anglais, comme dans ‘{"mes
docs/"}’.  Enfreindre l’une de ces règles aura pour effet que LaTeX
rapportera une erreur ‘Error: File `FILENAME' not found’.

   Pour faire simple, l’algorithme est que dans l’exemple qui suit,
après avoir regardé dans le répertoire courant,

     \graphicspath{ {img/} {../img/} }
     ...
     \usepackage{lion.png}

pour chacun des répertoires listés, LaTeX le concatène avec le nom du
fichier et recherche le fichier ainsi nommé, eh cherchant ‘img/lion.png’
et puis ‘../img/lion.png’.  Cet algorithme signifie que la commande
‘\graphicspath’ ne recherche pas récursivement dans les
sous-répertoires : si vous faites ‘\graphicspath{{a/}}’ et que le
graphique est dans ‘a/b/lion.png’ alors LaTeX ne le trouvera pas.  Cela
signifie aussi que vous pouvez utiliser des chemins absolus tels que
‘\graphicspath{{/home/jim/logos/}}’ ou
‘\graphicspath{{C:/Users/Albert/Pictures/}}’.  Toutefois, faire cela
rend votre document non portable.  (Vous pourriez préserver la
portabilité en ajustant vos le paramètre ‘TEXINPUTS’ du fichier de
configuration des réglages système TeX ; voir la documentation de votre
système).

   Vous pouvez utiliser ‘\graphicspath’ n’improte-où dans le document.
Vous pouvez l’utiliser plus d’une fois.  Sa valeur peut être affichée
avec ‘\makeatletter\typeout{\Ginput@path}\makeatother’.

   Les répertoires sont à donner relativement au fichier de base.  Pour
faire clair, supposez que vous travaillez sur un document basé sur
‘livre/livre.tex’ et qu’il contienne ‘\include{chapitres/chap1}’.  Si
dans ‘chap1.tex’ vous mettez ‘\graphicspath{{graphiques/}}’ alors LaTeX
ne cherchera pas les graphiques dans ‘livre/chapitres/graphiques’, mais
dans ‘livre/graphiques’.

22.2.2 ‘\DeclareGraphicsExtensions’
-----------------------------------

Synopsis :

     \DeclareGraphicsExtensions{LISTE SÉPARÉE PAR DES VIRGULES D'EXTENTIONS DE FICHIER}

   Déclare les extensions de nom de fichier à essayer.  Ceci vous permet
de spécifier l’ordre dans lequel les formats graphiques sont choisis
quant les fichiers graphiques sont inclus en donnant le nom de fichier
sans l’extension, comme dans ‘\includegraphics{courbe_de_fonction}’.

   Dans l’exemple qui suit, LaTeX trouve les fichiers au format PNG
avant les fichiers PDF.

     \DeclareGraphicsExtensions{.png,PNG,.pdf,.PDF}
       ...
     \includegraphics{lion}   % trouve lion.png avant lion.pdf

Du fait que le nom ‘lion’ ne contient pas de point, LaTeX utilise la
liste d’extension.  Pour chacun des répertoires dans la liste de chemins
graphiques (*note \graphicspath::), LaTeX essaie les extensions dans
l’ordre donné.  S’il ne trouve aucun fichier correspondant après avoir
essayé tous les répertoires et toutes les extensions, alors il renvoie
une erreur ‘! LaTeX Error: File `‘lion’' not found’.  Notez que vous
devez inclure le point au début de chaque extension.

   Du fait que les noms de fichiers sous GNU/Linux et Macintosh sont
sensibles à la casse, la liste des extensions de fichier est sensible à
la casse sur ces plateformes.  La plateforme Windows n’est pas sensible
à la casse.

   Vous n’êtes pas tenu d’inclure ‘\DeclareGraphicsExtensions’ dans
votre document ; le pilote d’impression a une valeur par défaut
raisonnable.  Par exemple, la version la plus récente de ‘pdftex.def’ a
cette liste d’extensions.

     .pdf,.png,.jpg,.mps,.jpeg,.jbig2,.jb2,.PDF,.PNG,.JPG,.JPEG,.JBIG2,.JB2

   Pour modifier cet ordre, utilisez le paquetage ‘grfext’.

   Vous pouvez utiliser cette commande n’importe où dans le document.
Vous pouvez l’utiliser plus d’une fois.  On peut afficher la valeur
courante avec ‘\makeatletter\typeout{\Gin@extensions}\makeatother’.

22.2.3 ‘\DeclareGraphicsRule’
-----------------------------

Synopsis :

     \DeclareGraphicsRule{EXTENSION}{TYPE}{EXTENSION TAILLE-FIC}{COMMANDE}

   Declare comment gérer les fichiers graphiques dont le nom se termine
en EXTENSION.

   L’exemple suivant déclare que tous le fichiers dont ele est de la
forme ‘nomfichier-sans-point.mps’ doivent être traité comme une sortie
de MetaPost, ce qui signifie que le pilote d’impression utilisera son
code de gestion MetaPost pour traiter le fichier en entrée.

     \DeclareGraphicsRule{.mps}{mps}{.mps}{}

   La déclaration suivante

     \DeclareGraphicsRule{*}{mps}{*}{}

dit à LaTeX qu’il doit traiter comme une sortie MetaPost tout fichier
avec extension non couverte par une autre règle, ainsi il couvre
‘nomfichier.1’, ‘nomfichier.2’, etc.

   Ici on décrit les quatre arguments.

EXTENSION
     L’extension de nom de fichier à laquelle la règle considérée
     s’applique.  L’extension commence au premier point dans le nom de
     fichier, en incluant le point.  Utiliser l’astérisque, ‘*’, pour
     désigner la comportement par défaut pour toutes les extensions non
     déclarées.

TYPE
     Le type du fichier considéré.  Ce type est une chaîne de caractères
     qui doit être définie dans le pilote d’impression.  Par exemple,
     les fichiers avec les extensions ‘.ps’, ‘.eps’, ou ‘.ps.gz’ peuvent
     tous être classifiés sous le type ‘eps’.  Tous les fichiers de même
     type sont traités en entrée avec la même commande interne par le
     pilote d’impression.  Par exemple, les types de fichiers reconnus
     par ‘pdftex’ sont : ‘jpg’, ‘jbig2’, ‘mps’, ‘pdf’, ‘png’, ‘tif’.

EXTENSION TAILLE-FIC
     L’extension du fichier à lire pour déterminer la taille du
     graphique, si un tel fichier existe.  Elle peut être la même que
     EXTENSION mais aussi être différente.

     Considérons par exemple un graphique PostScript.  Pour le rendre
     plus petit, il peut être compressé en un fichier ‘.ps.gz’.  Les
     fichiers compressé ne sont pas lu simplement par LaTeX aussi vous
     pouvez mettre l’information de boîte englobante dans une fichier
     séparé.  Si EXTENSION TAILLE-FIC est vide, alors vous devez
     spécifier l’information de taill dans les arguments de
     ‘\includegraphics’.

     Si le fichier pilote a un procédure pour lire les tailles de
     fichier pour ‘type’ alors elle est utilisée, sinon il utilise la
     procédure pour lire les fichiers ‘.eps’.  (Ainsi vous pourriez
     spécifier la taille d’un fichier bitmap dans un fichier avec une
     ligne ‘%%BoundingBox’ de style PostScript style si aucun autre
     format n’est disponible).

COMMANDE
     Une commande à appliquer au fichier.  La plupart du temps on laisse
     cet argument vide.  Cette commande doit commencer avec un caractère
     accent grave.  Ainsi,
     ‘\DeclareGraphicsRule{.eps.gz}{eps}{.eps.bb}{`gunzip -c #1}’
     spécifie que tout fichier ayant une extension ‘.eps.gz’ doit être
     traité comme un fichier ‘eps’, avec l’information de boîte
     englobante stockée dans le fichier ayant l’extension ‘.eps.bb’, et
     que la commande ‘gunzip -c’ sera exécuté sur votre plateforme pour
     décompresser le fichier.

     Une telle commande est spécifique à votre plateforme.  De plus,
     votre système TeX doit autoriser l’exécution de commandes
     externes ; par mesure de sécurité les système moderne restreigne
     l’exécution de commandes à moins que vous l’autorisiez
     explicitement.  Se référer à la documentation de votre distribution
     TeX.

22.3 Commandes du paquetage ‘graphics’
======================================

Voici les commandes disponibles dans les paquetages ‘graphics’ et
‘graphicx’.

22.3.1 ‘\includegraphics’
-------------------------

Synopsis pour le paquetage ‘graphics’ :

     \includegraphics{NOMFICHIER}
     \includegraphics[URX,URY]{NOMFICHIER}
     \includegraphics[LLX,LLY][URX,URY]{NOMFICHIER}
     \includegraphics*{NOMFICHIER}
     \includegraphics*[URX,URY]{NOMFICHIER}
     \includegraphics*[LLX,LLY][URX,URY]{NOMFICHIER}

   Synopsis pour le paquetage ‘graphicx’ :

     \includegraphics{NOMFICHIER}
     \includegraphics[LISTE-À-CLEFS-VALEURS]{NOMFICHIER}
     \includegraphics*{NOMFICHIER}
     \includegraphics*[LISTE-À-CLEFS-VALEURS]{NOMFICHIER}

   Inclut un fichier graphique.  La forme étoilée ‘\includegraphics*’
rogne le graphique à la taille spécifiée, alors que pour la forme
non-étoilée toute partie du graphiqe en dehors de la boîte de la taille
spécifiée se superpose à ce qui l’entoure.

   Dans cet exemple

     \usepackage{graphicx}  % dans le préambule
       ...
     \begin{center}
       \includegraphics{trace.pdf}
     \end{center}

on incorpore dans le document le graphique dans ‘plot.pdf’, centré et à
sa taille nominale.  Vous pouvez aussi donner un chemin au fichier,
comme dans ‘\includegraphics{graphiques/trace.pdf}’.  Pour spécifier une
liste de répertoire ou rechercher le fichier, *note \graphicspath::.

   Si votre nom de fichier comprend des espaces, alors placer le entre
guillemets anglais.  Par exemple comme dans ‘\includegraphics{"image
complementaire.jpg"}’.

   La commande ‘\includegraphics{NOMFICHIER}’ décide du type de
graphique en segmentant NOMFICHIER sur le premier point (‘.’).  Vous
pouvez utiliser NOMFICHIER sans extension de nom de fihcier, comme dans
‘\includegraphics{turing}’ et LaTeX essaie une séquence d’extension
telle que ‘.png’ et ‘.pdf’ jusqu’à ce qu’il trouve un fichier avec cette
extension (*note \DeclareGraphicsExtensions::).

   Si votre fichier comprend des points avantr l’extension alors vous
pouvez les cacher avec des accolades, comme dans
‘\includegraphics{{plot.2018.03.12.a}.pdf}’.  Ou, si vous utilisez le
paquetage ‘graphicx’ alors vous pouvez utiliser les options ‘type’ et
‘ext’ ; voir plus bas.  Ces problèmes de noms de fichiers, et d’autres
sont aussi traités par le paquetage ‘grffile’.

   L’exemple ci-après place un graphique dans un environnement ‘figure’
de sorte que LaTeX puisse le déplacer sur la page suivante si le faire
rentrer dans la page courante rend mal (*note figure::).

     \begin{figure}
       \centering
       \includegraphics[width=3cm]{rayonxpoumon.jpg}
       \caption{Ça saute aux yeux : vous ne devriez arrêter de fumer}  \label{fig:rayon-x}
     \end{figure}

   L’exemple suivant place un graphique non flottant, de sorte à
garantir qu’il apparaisse à ce point-ci du document même si cela oblige
LaTeX à dilater le texte ou à recourir à des zones blanche sur la page.
Le graphique est centré est a une légende.

     \usepackage{caption}  % dans le préambule
       ...
     \begin{center}
       \includegraphics{sans/images.png}
       \captionof{figure}{L'esprit de la nuit} \label{sans:images} % optionnel
     \end{center}

   L’exemple suivant place une boîte avec un graphique le long d’une
autre boîte contenant du texte, les deux boîtes étant verticalement
centrées :

     \newcommand*{\vcenteredhbox}[1]{\begin{tabular}{@{}c@{}}#1\end{tabular}}
       ...
     \begin{center}
       \vcenteredhbox{\includegraphics[width=0.4\textwidth]{trace}}
       \hspace{1em}
       \vcenteredhbox{\begin{minipage}{0.4\textwidth}
                        \begin{displaymath}
                          f(x)=x\cdot \sin (1/x)
                        \end{displaymath}
                      \end{minipage}}
     \end{center}

   Si vous utilisez le paquetage ‘graphics’ alors les seules options
disponibles concernent la taille du graphique (mais voir *note
\rotatebox:: et *note \scalebox::).  Quand un argument optionnel est
présent alors c’est ‘[URX,URY]’ et il donne les coordonnées du coin en
haut à droite de l’image, comme une paire de dimensions TeX (*note Units
of length::).  Si les unités sont omises, alors par défaut l’unité
considérée est le ‘bp’.  Dans ce cas, le coin en bas à gaéuche de
l’image est supposée être à (0,0).  Si deux arguments optionnels sont
présents alors le premier est ‘[LLX,LLY]’, et il spécifie les
coordonnées du coin en bas à gauche de l’image.  Ainsi,
‘\includegraphics[1in,0.618in]{...}’ demande que le graphique soit placé
de sorte a avoir 1 inch de largeur et 0,618 inches de hauteur et donc
son origine est à (0,0).

   Le paquetage ‘graphicx’ vous offre beaucoup plus d’options.
Spécifiez les sous la forme de paires clef-valeur, comme ci-après :

     \begin{center}
       \includegraphics[width=3cm,angle=90]{lion}
       \hspace{2em}
       \includegraphics[angle=90,width=3cm]{lion}
     \end{center}

Les options sont lues de gauche à doite.  Ainsi le premier graphique
ci-dessus est dilaté à une largeur de 3cm, et ensuite subit une rotation
de 90degrés, alors que le second subit la rotation en premier et ensuite
est dilaté à 3cm de largeur.  Ainsi, à moins que le graphique soit
parfaitement carré, à la fin les deux n’ont pas les mêmes largeurs et
hauteurs.

   Il y a beaucoup d’options.  Les principales sont listées en premier.

   Notez qu’un graphique est placé par LaTeX dans une boîte, qu’on
désigne traditionnellement comme sa “boîte englobante” (distincte de la
BoundingBox PostScript décrite plus bas).  La zone sur laquelle le
graphique s’imprime peut aller au delà de cette boîte, ou s’inscrire
dans cette boîte, mais quand LaTeX fabrique une page il assemble des
boîtes, et celle-ci est la boîte allouée pour le graphique.

‘width’
     Le graphique est affiché de sorte que sa boîte englobante ait cette
     largeur.  Un exemple est ‘\includegraphics[width=2.5cm]{trace}’.
     Vous pouvez utiliser les unités de longueur standardes de TeX
     (*note Units of length::) et également il est commode d’utiliser
     ‘\linewidth’, ou, dans un document recto-verso, ‘\columnwidth’
     (*note Page layout parameters::).  Un exemple est qu’en utilisant
     le paquetage ‘calc’ vous pouvez rendre le graphique 1cm plus étroit
     que la largeur du texte avec
     ‘\includegraphics[width=\linewidth-1.0cm]{hefferon.jpg}’.

‘height’

     Le graphique est affiché de sorte que sa boîte englobante est de
     cette hauteur.  Vous pouvez utiliser les unités de longueur
     standardes de TeX (*note Units of length::), et également il est
     commode d’utiliser ‘\pageheight’ et ‘\textheight’ (*note Page
     layout parameters::).  Par exemple, la commande
     ‘\includegraphics[height=0.25\textheight]{godel}’ rend le graphique
     d’une hauteur d’un quart de celle de la zone de texte.

‘totalheight’

     Le graphique est affiché de sorte que sa boîte englobante ait cette
     hauteur plus profondeur.  Ceci diffère de la hauteur si le
     graphique a subi une rotation.  Par exemple, s’il a subi une
     rotation de -90 degrès alors il a une hauteur nulle mais une grande
     profondeur.

‘keepaspectratio’
     Si réglé à ‘true’, ou juste spécifié comme ci-dessous

          \includegraphics[...,keepaspectratio,...]{...}

     et que vous donnez en option à la fois ‘width’ et ‘height’ (ou
     ‘totalheight’), alors LaTeX rendra le graphique aussi grand que
     possible sans le déformer.  C’est à dire que LaTeX assure que le
     graphique n’est ni plus large que ‘width’ ni plus haut que ‘height’
     (ou ‘totalheight’).

‘scale’
     Facteur par lequel dilater/contracter le graphique.  On peut rendre
     graphique à deux fois sa taille nominale avec
     ‘\includegraphics[scale=2.0]{...}’.  Ce nombre peut prendre
     n’importe quelle valeur ; un nombre entre 0 et 1 contracte le
     graphique et un nombre négatif lui applique une réflexion.

‘angle’
     Applique une rotation au graphique.  L’angle est exprimé en degrès
     et dans le sens anti-horaire.  La rotation est effectuée autour de
     l’origine donnée par l’option ‘origin’ ; s’y référer.  Pour une
     descrition complète de la compositiion de matériel ayant subi une
     rotation, *note \rotatebox::.

‘origin’
     Le point du graphique autour duquel la rotation s’effectue.  Les
     valeurs possibles sont toute chaîne contenant un ou deux caractères
     parmi : ‘l’ pour gauche (left), ‘r’ pour droite (right), ‘b’ pour
     bas, ‘c’ pour centré, ‘t’ pour haut (top), et ‘B’ pour ligne de
     base.  Ainsi, saisir la commande
     ‘\includegraphics[angle=180,origin=c]{moon}’ a pour effet de mettre
     la figure tête en bas en tournant autour du centre de l’image,
     alors que la commande
     ‘\includegraphics[angle=180,origin=lB]{LeBateau}’ fait la rotation
     autour du point gauche de la ligne de base.  (Le caractère ‘c’
     désigne le centre horizontal dans ‘bc’ ou ‘tc’, mais le centre
     vertical dans ‘lc’ ‘rc’).  Le réglage par défaut est ‘lB’.

     Pour faire une rotation autour d’un point arbitraire, *note
     \rotatebox::.

   Voici maintenant des options moins usuelles.

‘viewport’
     Désigne une sous-région du graphique à afficher.  Prend quatre
     arguments, séparés par des espaces et exprimés comme des dimensions
     TeX, comme dans ‘\includegraphics[.., viewport=0in 0in 1in
     0.618in]{...}’.  Quand l’unité est omise, les dimensions sont par
     défaut en big points, ‘bp’.  Elle sont prises relativement à
     l’origine spécifiée par la boîte englobante.  Voir aussi l’option
     ‘trim’.

‘trim’
     Désigne les parties du graphique à ne pas afficher.  Prend quatre
     arguments, séparés par des espaces, et exprimés comme des
     dimensions TeX dimensions, comme dans ‘\includegraphics[.., trim=
     0in 0.1in 0.2in 0.3in, ...]{...}’.  Ceci donne la quantité du
     graphique à ne pas afficher, c-à-d. que LaTeX rogne l’image de
     0 pouce sur la gauche left, 0.1 pouce sur la bas, 0.2 pouce sur la
     droite, et 0.3 pouce sur le haut.  Voir aussi l’option ‘viewport’.

‘clip’
     Si réglé à ‘true’, ou juste spécifié comme ci-dessous

          \includegraphics[...,clip,...]{...}

     alors le graphique est rogné à sa boîte englobante.  Ceci revient
     au même que d’utiliser la forme étoilée de la commande,
     ‘\includegraphics*[...]{...}’.

‘page’
     Donne le numéro de page pour un fichier PDF multi-page.  La valeur
     par défaut est ‘page=1’.

‘pagebox’
     Spécifie quelle boîte englobante utiliser pour les fichier PDF
     parmi les suivantes ‘mediabox’, ‘cropbox’, ‘bleedbox’, ‘trimbox’,
     ou ‘artbox’.  Les fichier PDF n’ont pas la BoundingBox que les
     fichiers PostScript ont, mais peuvent spécifier jusqu’à quatre
     rectangle prédéfinis.  La boîte MediaBox donne les frontière du
     médium physique.  La boîte CropBox est la région à laquelle le
     contenu de la page devrait être épinglé quand il est affiché.  La
     boite BleedBox la région à laqeulle le contenu de la page devrait
     être épinglé en production.  La boîte TrimBox est correspond au
     dimensions désirée de la page finie.  La boîte ArtBox est l’étendu
     du contenu de la page ayant du sens.  Le pilote règle la taille de
     l’image en se basant sur la CropBox si elle est présente, sinon il
     n’utilise pas les autres, avec un ordre de préférence propre au
     pilote.  La MediaBox est toujours présente.

‘interpolate’
     Active ou désactive l’interpolation des images matricielles par la
     visionneuse.  On peut régler l’option avec ‘interpolate=true’ ou
     juste comme ci-dessous :

          \includegraphics[...,interpolate,...]{...}

‘quiet’
     N’écrit pas d’information dans le journal.  On peut régler l’option
     avec ‘quiet=true’ ou juste en la spécifiant avec
     ‘\includegraphics[...,quiet,...]{...}’,

‘draft’
     Lorsqu’on règle l’option avec ‘draft=true’ ou juste ainsi

          \includegraphics[...,draft,...]{...}

     alors le graphique n’apparaît pas dans le document, ce qui permet
     éventuellement d’économiser l’imprimante couleur.  À la place LaTeX
     place une boîte vide de la bonne taille avec le nom du fichier
     imprimé dedans.

   Les options suivantes traitent de la boîte englobante pour les
fichiers graphique de type PostScript Encapsulé, leur taille est
spécifié avec une ligne ‘%%BoundingBox’ qui apparaît dans le fichier.
Elle a quatre valeurs donant la coordonnée x inférieure, la coordonnée y
inférieure, la coordonnée x supérieure, et la coordonnée y supérieure.
L’unité est le point PostScript, équivalent au big point de TeX, à
savoir 1/72 de pouce.  Par exemple, si un fichier ‘.eps’ a la ligne
‘%%BoundingBox 10 20 40 80’ alors sa taille naturelle est 30/72 de
pouche de large pour 60/72 de pouce de haut.

‘bb’
     Spécifie la boîte englobante de la région affichée.  L’argument est
     constitué de quatre dimensions séparées par des espaces, comme dans
     ‘\includegraphics[.., bb= 0in 0in 1in 0.618in]{...}’.  D’ordinaire
     ‘\includegraphics’ lit les ces nombre BoundingBox dans le fichier
     EPS automatiqument, de sorte que cette option n’est utile que si la
     définition de la boîte englobante est absente du fihcier ou si vous
     désirez la changer.

‘bbllx, bblly, bburx, bbury’
     Règke la boîte englobante box.  Ces quatre options là sont
     obsolète, mais existent encore pour maintenir la rétrocompatibilité
     avec des paquetages anciens.

‘natwidth, natheight’
     Une alternative à ‘bb’.  Régler

          \includegraphics[...,natwidth=1in,natheight=0.618in,...]{...}

     revient au même que régler ‘bb=0 0 1in 0.618in’.

‘hiresbb’
     Si réglé à ‘true’, ou juste spécifié comme dans

          \includegraphics[...,hiresbb,...]{...}

     alors LaTeX recherche la ligne ‘%%HiResBoundingBox’ plutôt que la
     ligne ‘%%BoundingBox’.  (La ligne ‘BoundingBox’ n’utilise que des
     nombres entiers naturels alors que la ligne ‘HiResBoundingBox’
     utilise des décimaux ; les deux utilisent une unité équivalente au
     big point de TeX, 1/72 de pouce).  Pour l’emporter sur un réglage
     précédent à ‘true’, on peut la régler à ‘false’.

   Les options suivantes permettent à l’utilisateur de l’emporter sur la
méthode par laquelle LaTeX choisit le type d’un graphique en fonction de
son extension de nom de fichier.  Par exemple avec
‘\includegraphics[type=png,ext=.xxx,read=.xxx]{lion}’ le fichier
‘lion.xxx’ est lu comme s’il s’agissait de ‘lion.png’.  Pour plus ample
information, *note \DeclareGraphicsRule::.

‘type’
     Spécifie le type de graphique.

‘ext’
     Spécifie l’extension du graphique.  À n’utiliser qu’en conjonction
     avec l’option ‘type’.

‘read’
     Spécifie l’extension du fichier lu.  À n’utiliser qu’en conjonction
     avec l’option ‘type’.

‘command’
     Spécifie une commande à appliquer à ce fichier.  À n’utiliser qu’en
     conjonction avec l’option ‘type’.  *Note Command line options::,
     pour une discussion sur l’activation de la fonctionalité ‘\write18’
     pour exécuter des commandes externes.

22.3.2 ‘\rotatebox’
-------------------

Synopsis for ‘graphics’ package:

     \rotatebox{ANGLE}{MATERIAL}

   Synopses for ‘graphicx’ package:

     \rotatebox{ANGLE}{MATERIAL}
     \rotatebox[LISTE-À-CLEFS-VALEURS]{ANGLE}{MATERIAL}

   Put MATERIAL in a box and rotate it ANGLE degrees counterclockwise.

   This example rotates the table column heads forty five degrees.

     \begin{tabular}{ll}
       \rotatebox{45}{Character} &\rotatebox{45}{NATO phonetic}   \\
       A                         &AL-FAH  \\
       B                         &BRAH-VOH
     \end{tabular}

   The MATERIAL can be anything that goes in a box, including a graphic.

       \rotatebox[origin=c]{45}{\includegraphics[width=1in]{lion}}

   You can get the same effect using the ‘graphicx’ package alone (*note
\includegraphics::).

   To place the rotated material, the first step is that LaTeX sets
MATERIAL in a box, with a reference point on the left baseline.  The
second step is the rotation, by default about the reference point.  The
third step is that LaTeX computes a box to bound the rotated material.
Fourth, LaTeX moves this box horizontally so that the left edge of this
new bounding box coincides with the left edge of the box from the first
step (they need not coincide vertically).  This new bounding box, in its
new position, is what LaTeX uses as the box when typesetting this
material.

   If you use the ‘graphics’ package then the rotation is about the
reference point of the box.  If you use ‘graphicx’ then these are the
options that can go in the LISTE-À-CLEFS-VALEURS.

‘origin’
     The point of the MATERIAL’s box about which the rotation happens.
     Possible values are any string containing one or two of: ‘l’ for
     left, ‘r’ for right, ‘b’ for bottom, ‘c’ for center, ‘t’ for top,
     and ‘B’ for baseline.  Thus,
     ‘\includegraphics[angle=180,origin=c]{moon}’ will turn the picture
     upside down from the center, while
     ‘\includegraphics[angle=180,origin=lB]{LeBateau}’ will turn its
     picture upside down about its left baseline.  (The character ‘c’
     gives the horizontal center in ‘bc’ or ‘tc’ but gives the vertical
     center in ‘lc’ or ‘rc’.)  The default is ‘lB’.

‘x, y’
     Specify an arbitrary point of rotation with ‘\rotatebox[x=TeX
     DIMENSION,y=TeX DIMENSION]{...}’ (*note Units of length::).  These
     give the offset from the box’s reference point.

‘units’
     This key allows you to change the default of degrees
     counterclockwise.  Setting ‘units=-360’ changes the direction to
     degrees clockwise and setting ‘units=6.283185’ changes to radians
     counterclockwise.

22.3.3 ‘\scalebox’
------------------

Synopses:

     \scalebox{HORIZONTAL FACTOR}{MATERIAL}
     \scalebox{HORIZONTAL FACTOR}[VERTICAL FACTOR]{MATERIAL}
     \reflectbox{MATERIAL}

   Scale the MATERIAL.

   This example halves the size, both horizontally and vertically, of
the first text and doubles the size of the second.

     \scalebox{0.5}{DRINK ME} and \scalebox{2.0}{Eat Me}

   If you do not specify the optional VERTICAL FACTOR then it defaults
to the same value as the HORIZONTAL FACTOR.

   You can use this command to resize a graphic, as with
‘\scalebox{0.5}{\includegraphics{lion}}’.  If you use the ‘graphicx’
package then you can accomplish the same thing with optional arguments
to ‘\includegraphics’ (*note \includegraphics::).

   The ‘\reflectbox’ command abbreviates ‘\scalebox{-1}[1]{MATERIAL}’.
Thus, ‘Able was I\reflectbox{Able was I}’ will show the phrase ‘Able was
I’ immediately followed by its mirror reflection.

22.3.4 ‘\resizebox’
-------------------

Synopses:

     \resizebox{HORIZONTAL LENGTH}{VERTICAL LENGTH}{MATERIAL}
     \resizebox*{HORIZONTAL LENGTH}{VERTICAL LENGTH}{MATERIAL}

   Given a size, such as ‘3cm’, transform MATERIAL to make it that size.
If either HORIZONTAL LENGTH or VERTICAL LENGTH is an exclamation
point ‘!’ then the other argument is used to determine a scale factor
for both directions.

   This example makes the graphic be a half inch wide and scales it
vertically by the same factor to keep it from being distorted.

     \resizebox{0.5in}{!}{\includegraphics{lion}}

   The unstarred form ‘\resizebox’ takes VERTICAL LENGTH to be the box’s
height while the starred form ‘\resizebox*’ takes it to be height+depth.
For instance, make the text have a height+depth of a quarter inch with
‘\resizebox*{!}{0.25in}{\parbox{1in}{This box has both height and
depth.}}’.

   You can use ‘\depth’, ‘\height’, ‘\totalheight’, and ‘\width’ to
refer to the original size of the box.  Thus, make the text two inches
wide but keep the original height with ‘\resizebox{2in}{\height}{Two
inches}’.

23 Insertions spéciales
***********************

LaTeX fournit des commandes pour insérer les caractères qui ont une
signification spéciale mais ne correspondent à aucun caractère simple
que vous pouvez taper.

23.1 Caractères réservés
========================

LaTeX réserve les caractères suivant à un usage spécial (par exemple, le
signe pourcent ‘%’ sert aux commentaires) c’est pourquoi on les appelle
“caractères réservés” ou “caractères spéciaux”.  Ils sont chacun l’objet
d’une discussion ailleurs dans ce manuel.

     # $ % & { } _ ~ ^ \

   Si vous voulez qu’un caractère réservé soit imprimé comme lui-même,
dans la même police que le corps du texte, alors pour tous les
caractères hormis les trois derniers de cette liste il suffit de les
faire précéder d’une contr’oblique ‘\’.  Ainsi ‘\$1.23’ produit ‘$1.23’
en sortie.

   Quant aux trois derniers caractères, pour faire un tilde dans la
police du corps du texte utilisez ‘\~{}’ (sans les accolades cela
mettrait un accent tilde sur le caractère suivant).  De même pour faire
un accent circonflexe dans la police du corps du texte utilisez ‘\^{}’.
Une contr’oblique dans la police du corps de texte se fait avec
‘\textbackslash{}’.

   Pour produire les caractères réservés dans la police tapuscrite
utilisez ‘\verb!!’ comme ci-dessous (la double contr’oblique ‘\\’ n’est
là que pour aller à la ligne en sortie) :

     \begin{center}
       \# \$ \% \& \{ \} \_ \~{} \^{} \textbackslash \\
       \verb!# $ % & { } _ ~ ^ \!
     \end{center}

   Dans cet exemple la double contr’oblique ‘\\’ n’est là que pour
sauter à la ligne.

23.2 Capitales et bas de casse
==============================

Synopsis :

     \uppercase{TEXTE}
     \lowercase{TEXTE}
     \MakeUppercase{TEXTE}
     \MakeLowercase{TEXTE}

   Change la casse des caractères.  Les commandes primitives de TeX
‘\uppercase’ et ‘\lowercase’ ne fonctionnent que pour les 26 lettres
sans diacritiques a-z et A-Z. Les commandes LaTeX ‘\MakeUppercase’ et
‘\MakeLowercase’ changent aussi les caractères accessibles par des
commandes telles que ‘\ae’ ou ‘\aa’.  Ces commandes ‘\MakeUppercase’ et
‘\MakeLowercase’ sont robustes, mais elles ont des arguments mouvants
(*note \protect::).

   Ces commandes ne changent pas la casse des lettres utilisées dans le
nom d’une commande au sein de TEXTE.  Mais par contre elles changent la
casse de tout autre lettre latine au sein de l’argument TEXTE.  Ainsi,
‘\MakeUppercase{Soit $y=f(x)$’} produit ‘SOIT Y=F(X)’.  Un autre exemple
est que le nom de tout environnement est changé, de sorte que
‘\MakeUppercase{\begin{tabular} ... \end{tabular}}’ produit une erreur
puisque la première moitié est changée en ‘\begin{TABULAR}’.

   LaTeX utilise la même table pour changer la casse tout au long du
document.  La table utilisée est conçue pour le codage T1 ; ceci
fonctionne bien avec les polices standardes de TeX pour tous les
alphabets latins, mais cause des problèmes avec d’autres alphabets.

   Pour changer la casse du texte qui résulte d’une macro au sein de
TEXTE il est nécessaire de faire un développement.  Dans l’exemple qui
suit la macro ‘\Nomecole’ produit ‘UNIVERSITÉ DE MATHÉMATIQUES’.

     \newcommand{\nomecole}{Universit\'e de math\'ematiques}
     \newcommand{\Nomecole}{\expandafter\MakeUppercase\expandafter{\nomecole}}

   Le paquetage ‘textcase’ comble certaines des lacunes des commandes
standardes ‘\MakeUppercase’ et ‘\MakeLowerCase’ de LaTeX.

   Pour mettre en capitale seulement la première lettre d’un mot, on
peut utiliser le paquetage ‘mfirstuc’.

   Gérer toutes les règles concernant la casse spécifiée par Unicode,
par ex.  pour les scripts non latins, est une tâche bien plus
conséquente que ce qui avait été considéré dans les TeX et LaTeX
d’origine.  Cela a été implémenté dans le paquetage ‘expl3’ à compter de
2020.  L’article « Case changing: From TeX primitives to the Unicode
algorithm », (Joseph Wright, ‘TUGboat’ 41:1,
<https://tug.org/TUGboat/tb41-1/tb127wright-case.pdf>), donne un bon
aperçu du sujet, passé et présent.

23.3 Symboles appelés par leur position dans une police
=======================================================

Vous pouvez accéder à n’importe quel caractère de la police courante en
utilisant son numéro avec la commande ‘\symbol’.  Par exemple, le
caractère espace visible utilisé dans la commande ‘\verb*’ a le code
décimal 32 dans la police standarde tapuscrite Compuer Modern, ainsi on
peut le taper avec ‘\symbol{32}’.

   Vous pouvez également spécifier le numéro en octal (base 8) en
utilisant un préfixe ‘'’, ou en hexadécimal (base 16) avec un préfixe
‘"’, ainsi l’espace visible de code 32 en décimal pourrait tout aussi
bien être écrit comme ‘\symbol{'40}’ ou ‘\symbol{"20}’.

23.4 Symboles en texte
======================

LaTeX fournit des commandes pour générer divers symboles qui ne sont pas
des lettres dans le cours sein du texte.  Certaines d’entre elles, en
particulier les plus obscures, ne sont pas disponible en OT1.  Depuis la
parution de février 2020 de LaTeX tous ces symboles sont disponibles par
défaut ; avant cela, il était nécessaire d’utiliser le paquetage
‘textcomp’ pour certains d’enter eux (techniquement, ce qui sont dans le
codage de police ‘TS1’).

‘\copyright’
‘\textcopyright’
     Le symbole « droit d’auteur », ©.

‘\dag’
     Le symbole obèle (dans le texte).

‘\ddag’
     Le symbole double obèle (dans le texte).

‘\LaTeX’
     Le logo LaTeX.

‘\LaTeXe’
     Le logo LaTeX2e.

‘\guillemotleft («)’
‘\guillemotright (»)’
‘\guilsinglleft (‹)’
‘\guilsinglright (›)’
     Guillemets à chevron double et simple, utilisés communément en
     français : «, », ‹, ›.

‘\ldots’
‘\dots’
‘\textellipsis’
     Des points de suspension (trois points sur la ligne de base) :
     ‘...’.  ‘\ldots’ et ‘\dots’ peuvent également être utilisés en mode
     mathématique.

‘\lq’
     guillemet-apostrophe simple de gauche (ouvrant) : ‘.

‘\P’
‘\textparagraph’
     Signe paragraphe : ¶ (pied-de-mouche).

‘\pounds’
‘\textsterling’
     Livre sterling anglais : £.

‘\quotedblbase („)’
‘\quotesinglbase (‚)’
     Guillemets-virgule inférieur double et simple : „ et ‚.

‘\rq’
     Guillemet-apostrophe simple de droite (fermant) : ’.

‘\S’
     \itemx \textsection Signe section : §.

‘\TeX’
     Le logo TeX.

‘\textasciicircum’
     circonflexe ASCII : ^.

‘\textasciitilde’
     tilde ASCII : ~.

‘\textasteriskcentered’
     Astérisque centré : *.

‘\textbackslash’
     Contr’oblique : \.

‘\textbar’
     Barre verticale : |.

‘\textbardbl’
     Barre verticale double.

‘\textbigcircle’
     Symbole grand rond.

‘\textbraceleft’
     Accolade gauche : {.

‘\textbraceright’
     Accolade droite : }.

‘\textbullet’
     Puce : •.

‘\textcircled{LETTRE}’
     LETTRE dans un cercle, comme dans ®.

‘\textcompwordmark’
‘\textcapitalcompwordmark’
‘\textascendercompwordmark’
     Marque de mot composé (invisible).  La forme ‘\textcapital...’ à la
     hauteur de capitale de la fonte, alors que la forme
     ‘\textascender...’ a la hauteur de hampe.

‘\textdagger’
     Obèle : \dag.

‘\textdaggerdbl’
     Double-obèle : \ddag.

‘\textdollar (ou ‘\$’)’
     Signe Dollar : $.

‘\textemdash (ou ‘---’)’
     Cadratin : —.  Utilisé pour la ponctuation, d’ordinaire similaire à
     une virugules ou des parenthèse comme dans « ‘Les éliminatoires ---
     si vous assez de chance pour y arriver --- c'est comme si ça se
     passait d'un trait.’ »

‘\textendash (ou ‘--’)’
     Demi cadratin : –.  Utilisé pour les plages en anglais comme dans
     « ‘see pages 12--14’ ».

‘\texteuro’
     Le symbole monétaire Euro : €.

     Pour un dessin alternatif du glyphe, essayez le paquetage
     ‘eurosym’ ; de plus, la plupart des polices de nos jour sont
     fournies avec leur propre symbole Euro (Unicode U+20AC).

‘\textexclamdown (ou ‘!`’)’
     Point d’exclamation culbuté : ¡.

‘\textgreater’
     Supérieur à : >.

‘\textless’
     Inférieur à : <.

‘\textleftarrow’
     Flèche gauche.

‘\textordfeminine’
‘\textordmasculine’
     Symboles ordinaux féminin et masculin : ª, º.

‘\textperiodcentered’
     Point centré : ·.

‘\textquestiondown (ou ‘?`’)’
     Point d’interrogation culbuté : ¿.

‘\textquotedblleft (ou ‘``’)’
     Guillemet-apostrophe double culbuté : “.

‘\textquotedblright (ou ‘''’)’
     Guillemet-apostrophe de droite double : ”.

‘\textquoteleft (ou ‘`’)’
     Guillemet-apostrophe simple culbuté : ‘.

‘\textquoteright (ou ‘'’)’
     Guillemet-apostrophe simple : ’.

‘\textquotesingle’
     Guillemet-apostrophe simple droit.  (Du codage TS1.)

‘\textquotestraightbase’
‘\textquotestraightdblbase’
     Guillemets droit simple et double sur la ligne de base.

‘\textregistered’
     Symbole « marque déposée » : ®.

‘\textrightarrow’
     Flèche droite.

‘\textthreequartersemdash’
     Cadratin « trois quarts ».

‘\texttrademark’
     Symbole marque de commerce : ™.

‘\texttwelveudash’
     Deux-tiers cadratin.

‘\textunderscore’
     Tiret bas : _.

‘\textvisiblespace’
     Symbole espace visible.

23.5 Accents
============

LaTeX a une prise en charge très large de beaucoup des scripts et
langages du monde, à travers ce qu’offre le paquetage ‘babel’.  Cette
section ne tente pas de couvrir la totalité de cette prise en charge.
Elle liste simplement les commandes LaTeX cœur pour créer des caractères
accentués, et plus généralement des caractères portant un signe
diacritique.

   Les commandes ‘\capital...’ produisent des formes alternatives
pouvant être utilisées avec les lettres capitales.  Elles ne sont pas
disponible avec l’OT1.

‘\"’
‘\capitaldieresis’

     Produit une tréma, comme dans ö.

‘\'’
‘\capitalacute’
     Produit un accent aigu, comme dans ó.  Dans l’environnement
     ‘tabbing’, pousse la colonne courante à droite de la colonne
     précédente (*note tabbing::).

‘\.’
     Produit un point suscrit à la lettre qui suit, comme dans ȯ.

‘\=’
‘\capitalmacron’
     Produit un macron (une barre) suscrit à la lettre qui suit, comme
     dans ō.

‘\^’
‘\capitalcircumflex’
     Produit un accent circonflexe (un chapeau) suscrit à la lettre qui
     suit, comme dans ô.

‘\`’
‘\capitalgrave’
     Produit un accent grave suscrit à la lettre qui suit, comme dans ò.
     Au sein de l’environnement ‘tabbing’, déplace le texte qui suit à
     la marge de droite (*note tabbing::).

‘\~’
‘\capitaltilde’
     Produit un diacritique tilde suscrit à la lettre qui suit, comme
     dans ñ.

‘\b’
     Produit un diacritique barre souscrite à la lettre qui suit, comme
     dans o̲.  Voir aussi ‘\underbar’ ci-après.

‘\c’
‘\capitalcedilla’
     Produit une cedille souscrite à la lettre qui suit, comme dans ç.

‘\d’
‘\capitaldotaccent’
     Produit un point souscrit à la lettre qui suit, comme dans ọ.

‘\H’
‘\capitalhungarumlaut’
     Produit un long tréma hongrois suscrit à la lettre qui suit, comme
     dans ő.

‘\i’
     Produit un i sans point, comme dans ‘ı’.

‘\j’
     Produit un j sans point, comme dans ‘j’.

‘\k’
‘\capitalogonek’
     Produit un ogonek, comme dans ‘ǫ’.  Non disponible dans le codage
     OT1.

‘\r’
‘\capitalring’
     Produit un rond en chef, comme dans ‘o̊’.

‘\t’
‘\capitaltie’
‘\newtie’
‘\capitalnewtie’
     Produit un tirant suscrit (double brève renversée), comme dans
     ‘oo͡’.  La forme ‘\newtie’ est centrée dans sa boîte.

‘\u’
‘\capitalbreve’
     Produit un accent brève, comme dans ‘ŏ’.

‘\underbar’
     Ce n’est pas vraiement un diacritique.  Produit une barre
     au-dessous de l’argument texte.  L’argument est toujours traité en
     mode horizontal.  La barre est toujours à une position fixée sous
     la ligne de base, de la sorte elle traverse les descentes.  Voir
     aussi ‘\underline’ dans *note Math miscellany::.  Voir aussi ‘\b’
     ci-avant.

‘\v’
‘\capitalcaron’
     Produit un accent háček (caron), comme dans ‘ǒ’.

23.6 Lettres latines supplémentaires
====================================

Voici les commandes de base de LaTeX pour insérer des caractères
utilisés généralement utilisés dans des langages autres que l’anglais.

‘\aa’
‘\AA’
     å et Å.

‘\ae’
‘\AE’
     æ et Æ.

‘\dh’
‘\DH’
     Lettre islandaise eth : ð et Ð. Non disponible dans le codage OT1,
     il vous faut le paquetage ‘fontenc’ pour sélectionner un autre
     codage de police, tel que T1.

‘\dj’
‘\DJ’
     d et D barre, lettre d capitale et bas-de-casse avec une barre
     traversant la hampe.  Non disponible dans le codage OT1, il vous
     faut le paquetage ‘fontenc’ pour sélectionner un autre codage de
     police, tel que T1.

‘\ij’
‘\IJ’
     ij et IJ (à ceci près que les deux lettre apparaissent plus liées
     qu’ici).

‘\l’
‘\L’
     ł et Ł.

‘\ng’
‘\NG’
     Lettre eng laponais, utilisé aussi en phonétique.  Non disponible
     dans le codage OT1, il vous faut le paquetage ‘fontenc’ pour
     sélectionner un autre codage de police, tel que T1.

‘\o’
‘\O’
     ø et Ø.

‘\oe’
‘\OE’
     œ et Œ.

‘\ss’
‘\SS’
     ß et SS.

‘\th’
‘\TH’
     Lettre islandaise thorn : þ et Þ. Non disponible dans le codage
     OT1, il vous faut le paquetage ‘fontenc’ pour sélectionner un autre
     codage de police, tel que T1.

23.7 ‘\rule’
============

Synopsis :

     \rule[ÉLÉVATION]{LARGEUR}{ÉPAISSEUR}

   la commande ‘\rule’ produit un “filet”, c.-à-d. une ligne ou un
rectangle.  Les arguments sont :

ÉLÉVATION
     De combien élever le filet (optionnel).

LARGEUR
     La longueur du filet (obligatoire).

ÉPAISSEUR
     L’épaisseur du filet (obligatoire).

23.8 ‘\today’
=============

La commande ‘\today’ produit la date d’aujourd’hui, par défaut dans le
format ‘MOIS JJ, AAAA’ ; par exemple, ‘July 4, 1976’.  Elle utilise les
compteurs prédéfinis ‘\day’, ‘\month’, et ‘\year’ (*note \day \month
\year::) pour faire cela.  Elle n’est pas mise à jour durant l’execution
de la compilation.

   Les extensions multilingues comme entre autres le paquetage ‘babel’
ou la classe ‘lettre’ localisent ‘\today’.  Par exemple le code suivant
produit ‘4 juillet 1976’ :

     \year=1976 \month=7 \day=4
     \documentclass{minimal}
     \usepackage[french]{babel}
     \begin{document}
     \today
     \end{document}

   Le paquetage ‘datetime’, entre autres, produit un large choix
d’autres formats de date.

24 Partitionner le fichier d’entrée
***********************************

LaTeX vous permet de partitionner un document de grande taille en
plusieurs plus petits.  Ceci peut simplifier son édition et permette à
plusieurs auteurs d’y travailler.  Cela peut aussi accélerer le
traitement.

   Indépendamment du nombre de fichiers distincts que vous utilisez, il
y a toujours un seul “fichier racine” sur lequel la compilation LaTeX
démarre.  L’exemple ci-dessous illuste un tel fichier avec cinq fichiers
inclus.

     \documentclass{book}
     \includeonly{
       % mettre en commentaire les lignes ci-dessous pour ne pas compiler le fichier
       pref,
       chap1,
       chap2,
       append,
       bib
       }
     \begin{document}
     \frontmatter
     \include{pref}
     \mainmatter
     \include{chap1}
     \include{chap2}
     \appendix
     \include{append}
     \backmatter
     \include{bib}
     \end{document}

Dans cet example on prend le matériel de ‘pref.tex’, ‘chap1.tex’,
‘chap2.tex’, ‘append.tex’, et ‘bib.tex’.  Si vous compilez ce fichier,
et ensuite mettez en commentaire toutes les lignes au sein de
‘\includeonly{...}’ hormis ‘chap1’, et compilez de nouveau, alors LaTeX
traite seulement le matériel du premier chapitre.  Ainsi, la sortie
apparaît plus rapidement et est plus courte à imprimer.  Cependant,
l’avantage de la commande ‘\includeonly’ est que LaTeX retient les
numéros de page et toute l’information de renvoi des autres parties du
document de sorte qu’elles apparaissent correctement en sortie.

   *Note Larger book template:: pour un autre exemple de ‘\includeonly’.

24.1 ‘\endinput’
================

Synopsis :

     \endinput

   Quand vous écrivez ‘\include{nomfichier}’, alors au sein de
‘nomfichier.tex’ le matériel qui vient après ‘\endinput’ n’est pas
inclus.  Cette commande est optionnelle ; si ‘nomfichier.tex’ ne
comprend pas de ‘\endinput’ alors LaTeX lit tout le fichier.

   Par exemple, supposons que le fichier racine d’un document a un
‘\input{chap1}’ que ce le contenu de ‘chap1.tex’ est ce qui suit :

     \chapter{One} Ce matériel apparaît dans le document.  \endinput Ceci
     n'apparaît pas.

   Ceci peut être utile pour placer de la documentation ou des
commentaire à la fin d’un fichier, ou pour éviter des caractères
indésirable qui pourraît s’ajouter si le fichier est transmis dans le
corps d’un courriel.  C’est également utile pour déboguer : une
stratégie pour localiser des erreurs est de placer un ‘\endinput’ à
mi-chemin en cours des fichiers inclus et de voir si l’erreur disparaît.
Ensuite, sachant quelle moitié contient l’erreur, en déplaçant le
‘\endinput’ à mi-chemin de cette zone circonscrit de plus près l’endroit
où elle se trouve.  Ainsi on trouve rapidement la ligne fautive.

   Après avoir lu ‘\endinput’, LaTeX continue à lire jusqu’à la fin de
la ligne, ansi il est possible de faire suivre cette ligne par
quelque-chose qui sera tout de même lu.  Ceci vous permet entre autre de
fermer un ‘\if...’ par un ‘\fi’.

24.2 ‘\include’ & ‘\includeonly’
================================

Synopsis :

     \includeonly{  % dans le préambule du document
       ...
       NOMFICHIER,
       ...
       }
       ...
     \include{NOMFICHIER}  % dans le corps du document

   Apporte du matériel d’un fichier externe ‘NOMFICHIER.tex’ dans un
document LaTeX.

   La commande ‘\include’ fait trois choses : elle exécute ‘\clearpage’
(*note \clearpage & \cleardoublepage::), puis elle insère le matériel à
partir du fichier ‘NOMFICHIER.tex’ dans le document, ensuite fait encore
un ‘\clearpage’.  Cette commande ne peut apparaître que dans le corps du
document.

   La commande ‘\includeonly’ contrôle quels fichiers seront lus par
LaTeX lors des commandes ‘\include’ suivantes.  Sa liste de noms de
fichier est séparée par des virgules, et la commande ne peut apparaître
que dans le préambule, ou même plus tôt, par ex.  dans la ligne de
commande : elle ne peut pas apparaître dans le corps du document.

   Dans le document racine en exemple ci-dessous, ‘constitution.tex’, on
inclut trois fichiers, ‘preambule.tex’, ‘articles.tex’, et
‘amendements.tex’.

     \documentclass{book}
     \includeonly{
       preambule,
       articles,
       amendements
       }
     \begin{document}
     \include{preambule}
     \include{articles}
     \include{amendements}
     \end{document}

Le fichier ‘preambule.tex’ ne contient aucun code spécial ; vous avez
juste extrait ce chapitre de ‘consitution.tex’ pour le mettre dans un
fichier séparé pour rendre son édition plus commode.

     \chapter{Préambule}
     Le peuple français proclame solennellement son attachement aux Droits de
     l’Homme et aux principes de la souveraineté nationale tels qu’ils ont
     été définis par la Déclaration de 1789, ...

Exécuter LaTeX sur ‘constitution.tex’ fait apparaître le matériel issu
de ces trois fichiers dans le document mais génère également les
fichiers auxiliaires ‘preamble.aux’, ‘articles.aux’, et
‘amendements.aux’.  Ceux-ci contiennent de l’information telle que les
numéros de page et les renvois (*note Cross references::).  Si
maintenant vous mettez en commentaire les lignes de ‘\includeonly’
contenant ‘preambule’ et ‘amendements’ et exécutez LaTeX de nouveau
alors le document résultant ne contiendra que le matériel issu de
‘articles.tex’, mais pas celui de ‘preamblue.tex’ ni de
‘amendements.tex’.  Néanmois, la totalité de l’information auxiliaire
issue des fichiers omis est toujours là, y compris le numéro de la page
où commence le chapitre.

   S’il n’y a pas de ‘\includeonly’ dans le préambule du document, alors
LaTeX inclut tous les fichiers demandés par des commandes ‘\include’.

   La commande ‘\include’ fabrique une nouvelle page.  Pour éviter cela,
voir *note \input:: (ce qui, cependant, ne retient pas l’information
auxiliaire).

   *Note Larger book template:: pour un autre exemple utilisant
‘\include’ et ‘\includeonly’.  Cet exemple utilise également ‘\input’
pour certain matériel qui ne débute pas nécessairement sur une nouvelle
page.

   Les noms de fichiers peuvent impliquer un chemin.

     \documentclass{book}
     \includeonly{
       chapitres/chap1,
       }
     \begin{document}
     \include{chapitres/chap1}
     \end{document}

   Pour rendre votre document portable vis à vis des diverses
distributions et plateformes vous devriez éviter les espaces dans les
noms de fichier.  Traditionnnelement on utilise des tirets de 6 ou de 8
à la place.  Néanmoins, pour le nom ‘amo amas amat’, ce qui suit
fonctionne sous TeX Live sur GNU/Linux:

     \documentclass{book}
     \includeonly{
       "amo\space amas\space amat"
       }
     \begin{document}
     \include{"amo\space amas\space amat"}
     \end{document}

   et ceci fonctionne sous MiKTeX sur Windows:

     \documentclass{book}
     \includeonly{
       {"amo amas amat"}
       }
     \begin{document}
     \include{{"amo amas amat"}}
     \end{document}

   Vous ne pouvez pas utiliser ‘\include’ au sein d’un fichier qui
lui-même est inclus via ‘\include’, sans quoi vous obtenez l’erreur
‘LaTeX Error: \include cannot be nested’.  La commande ‘\include’ ne
peut pas apparaître dans le préambule ; sans quoi vous obtenez l’erreur
‘LaTeX Error: Missing \begin{document}’.

   Si un fichier que vous incluez par ‘\include’ n’existe pas, par
exemple si vous tapez la commande ‘\include{athiesme}’ par erreur à la
place de ‘\include{atheisme}’, alors LaTeX ne produit pas une erreur
mais un avertissement ‘No file athiesme.tex.’ (Il crée également le
fichier ‘athiesme.aux’).

   Si vous faites un ‘\include’ du fichier racine dans lui-même alors
vous obtenez tout d’abord ‘LaTeX Error: Can be used only in preamble’.
Les exécutions suivantes donnent ‘TeX capacity exceeded, sorry [text
input levels=15]’.  Pour réparer cela, vous devez enlever l’inclusion
‘\include{RACINE}’ mais aussi détruire le fichier ‘RACINE.aux’ et
exécuter de nouveau LaTeX.

24.3 \input
===========

Synopsis :

     \input{NOMFICHIER}

   La commande ‘\input’ a pour effet que le NOMFICHIER spécifié soit lu
et traité comme si son contenu était inséré dans le fichier courant à
cet endroit.

   Si NOMFICHIER ne se termine pas en ‘.tex’ (par ex., ‘toto’ ou
‘toto.tata’), on essaie en premier en ajoutant cette extension
(‘toto.tex’ ou ‘toto.tata.tex’).  Si aucun fichier n’est trouvé avec ce
nom, alors on essaie le NOMFICHIER original (c.-à-d. ‘toto’ ou
‘toto.tata’).

25 Parties pré/post-liminaires
******************************

25.1 Table des matières etc.
============================

Synopsis, l’un parmi ceux qui suivent :

     \tableofcontents
     \listoffigures
     \listoftables

   Produit une table des matières, ou une liste des figures, ou une
liste des tableaux.  Placez la commande à l’endroit même où vous voulez
que la table ou liste apparaisse.  Vous n’avez pas à la renseigner ; par
exemple, typiquement les entrées de la table des matières sont
automatiquement générées à partir des commandes de rubricage ‘\chapter’,
etc.

   L’exemple ci-dessous illustre la première commande,
‘\tableofcontents’.  LaTeX produit une table des matières sur la
première page du livre.

     \documentclass{book}
     % \setcounter{tocdepth}{1}
     \begin{document}
     \tableofcontents\newpage
       ...
     \chapter{...}
       ...
     \section{...}
       ...
     \subsection{...}
       ...
     \end{document}

En décommentant la deuxième ligne on peut limiter la table à ne lister
que les rubriques issues de ‘\chapter’ et ‘\section’, mais pas celle
issue de ‘\subsection’, parce que la commande ‘\section’ a pour
niveau 1.  *Note Sectioning:: pour les numéros de niveaux des rubriques.
Pour plus ample information sur ‘tocdepth’ *note Sectioning/tocdepth::.

   Un autre exemple de l’utilisation de ‘\tableofcontents’ est dans
*note Larger book template::.

   Si vous désirez un saut de page après la table des matières, insérez
une commande ‘\newpage’ après la commande ‘\tableofcontents’, comme
ci-dessus.

   Pour fabriquer la table des matières, LaTeX stocke l’information dans
un fichier auxiliaire nommé ‘FICHIER-RACINE.toc’ (*note Splitting the
input::).  Par exemple, le fichier LaTeX ‘test.tex’ ci-dessous :

     \documentclass{article}
     \begin{document}
     \tableofcontents\newpage
     \section{Premièrement}
     \subsection{Deuxièmement}
       ...

écrit la ligne suivante dans ‘test.toc’ :

     \contentsline {section}{\numberline {1}Premièrement}{2}
     \contentsline {subsection}{\numberline {1.1}Deuxièmement}{2}

L’indication ‘section’ ou ‘subsection’ donne le type de rubrique.  Le
crochet ‘\numberline’ vous permet de changer la façon dont l’information
apparaît au sein de la table des matières.  Son unique argument, ‘1’ ou
‘1.1’, est le numéro de la rubrique alors que le reste du deuxième
argument de ‘\contentsline’, ‘Premièrement’ ou ‘Deuxièmement’, est le
titre.  Finalement, le troisième argument, ‘2’, est le numéro de la page
à laquelle les rubriques débutent.

   Une conséquence de cette stratégie de stockage de fichier auxiliaire
est que pour obtenir correctement la page de table des matières vous
devez exécuter LaTeX deux fois, une fois pour stocker l’information et
une fois pour l’obtenir.  En particulier, la première fois que vous
exécutez LaTeX sur un nouveau document, la page de table des matières
est vide hormis le titre ‘Table des matières’.  Il suffit de l’exécuter
de nouveau.

   Les commandes ‘\listoffigures’ et ‘\listoftables’ produisent une
liste des figures et une liste des tables.  Elles fonctionnent de la
même façon que les commandes pour la table des martières ; notamment
elles fonctionnent avec l’information stockée dans des fichiers ‘.lof’
et ‘.lot’.

   Pour modifier le titre de la page de table des matières, inspirez
vous la la première ligne de l’exemple suivant :

     \renewcommand{\contentsname}{Table des matières}
     \renewcommand{\listfigurename}{Tracé de courbes}
     \renewcommand{\listtablename}{Tableaux}


   De même, les deux autres lignes s’occupent des deux autres.  Des
paquetages d’internationalisation tels que ‘babel’ ou ‘polyglossia’
modifient les titres en fonction de la langue de base sélectionnée.

   Le CTAN a beaucoup de paquetages traitant de la table des matières et
des listes de figures et de tableaux.  L’un d’eux bien commode pour
ajuster certains aspects du traitement par défaut, tels que
l’espacement, est ‘tocloft’.  Et ‘tocbibbind’ permet d’ajouter
automatiquement la bibliograpghie, les indexes, etc.  à la table des
matières.

25.1.1 ‘\addcontentsline’
-------------------------

Synopsis :

     \addcontentsline{EXT}{UNIT}{TEXTE}

   La commande ‘\addcontentsline’ ajoute une entrée a la liste ou table
specifiée où :

EXT
     L’extension de nom de fichier du fichier dans lequel l’information
     doit être écrite, typiquement c’est l’une des trois suivante ::
     ‘toc’ pour la table des matière (« table of contents » en langue
     anglaise), ‘lof’ pour la liste des figures (« list of figures »),
     ou ‘lot’ pour la liste des tableaux (« list of tables »).

UNIT
     Le nom de l’unité sectionnelle à ajouter, typiquement l’une des
     suivantes, selon la valeur de l’argument EXT :

     ‘toc’
          Les unités sectionnelles : ‘part’, ‘chapter’, ‘section’,
          ‘subsection’, ‘subsubsection’.
     ‘lof’
          Pour la liste des figures : ‘figure’.
     ‘lot’
          Pour la liste des tableaux : ‘table’.

TEXTE
     Le texte de l’entrée.

   Ce qui est écrit dans le fichier ‘.EXT’ est la commande
‘\contentsline{UNIT}{TEXTE}{NUMÉRO}’, où ‘NUMÉRO’ est la valeur courante
du compteur ‘UNIT’.

25.1.2 ‘\addtocontents’
-----------------------

La commande ‘\addtocontents’{EXT}{TEXTE} ajoute du texte (ou des
commandes de formatage) directement au fichier ‘.EXT’ qui génère la
tables des matières, ou la liste des figures ou des tableaux.  generates
the table of contents or listes of figures or tables.

EXT
     L’extension de nom de fichier du fichier dans lequel l’information
     est à écrire : ‘toc’ (table des matières), ‘lof’ (liste des
     figures), ou ‘lot’ (liste des tableaux).

TEXTE
     Le texte à écrire.

25.1.3 ‘\nofiles’
-----------------

Synopsis :

     \nofiles

   Empêche LaTeX d’écrire quelque fichier auxiliaire que ce soit.  Les
seules sorites seront les fichiers ‘.log’ et ‘.pdf’ (ou ‘.dvi’).  Cette
commande ne peut être placée que dans le preambule.

   À cause de la commande ‘\nofiles’ dans cet exemple aucun fichier
‘.toc’ n’est produit.

     \documentclass{book}
     \nofiles
     \begin{document}
     \tableofcontents\newpage
     \chapter{...}
       ...

LaTeX n’efface pas les fichiers auxiliaires existants, de sorte que si
vous insérer la commande ‘\nofiles’ après avoir compilé le fichier et
obtenu un fichier ‘.toc’ alors la page de table des matières contiendra
l’ancienne information.

25.2 Glossaires
===============

La commande ‘\makeglossary’ active la création des glossaires.

   La commande ‘\glossary{TEXTE}’ écrit un article de glossaire pour
TEXTE dans un fichier auxiliaire nommé avec l’extension ‘.glo’.

   Plus précisément, ce qui est écrit est la commande
‘\glossaryentry{TEXTE}{NUMPAGE}’, où NUMPAGE est la valeur courante de
‘\thepage’.

   Le paquetage ‘glossary’ disponible sur le CTAN fournit une prise en
charge de glossaires plus élaborée.

25.3 Index
==========

La commande ‘\makeindex’ active la création d’index.  Placez là dans le
préambule.

   La commande ‘\index{TEXTE}’ écrit un article d’index pour TEXTE dans
un fichier auxiliaire nommé avec une extention ‘.idx’.

   Plus précisément, ce qui est écrit est la commande
‘\indexentry{TEXTE}{NUMPAGE}’, où NUMPAGE est la valeur courante de
‘\thepage’.

   Pour générer un article d’index pour « toto » qui dit « Voir titi »,
utilisez une barre verticale : ‘\index{toto|see{titi}}’.  Utilisez
‘seealso’ au lieu de ‘see’ pour fabriquer un article en « Voir aussi ».

   Le texte « Voir » est défini par la macro ‘\seename’, et le texte
« Voir aussi » par la macro ‘\alsoname’.  Ils peuvent être redéfinis
pour d’autres langages.

   Le fichier en ‘.idx’ généré est ensuite trié avec une commande
externe, d’ordinaire soit ‘makeindex’
(<http://mirror.ctan.org/indexing/makeindex>) ou la commande (
multi-lingue) ‘xindy’ (<http://xindy.sourceforge.net>).  Ceci résulte en
un fichier en ‘.ind’, ce qui peut ensuite être lu pour composer l’index.

   L’index est d’ordinaire généré avec la commande ‘\printindex’.
Celle-ci est définie dans le paquetage ‘makeidx’, ainsi vous devez
mettre ‘\usepackage{makeidx}’ dans le préambule.

   La longueur élastique ‘\indexspace’ est insérée avant chaque nouvelle
lettre dans l’index imprimé ; sa valeur par défaut est ‘10pt plus5pt
minus3pt’.

   Le paquetage ‘showidx’ a pour effet que chaque article de l’index est
affiché dans la marge de la page où l’article apparaît.  Ceci peut aider
à la préparation de l’index.

   Le paquetage ‘multind’ prend en charge la pluralité des index.  Voir
aussi l’article de la FAQ TeX FAQ à ce propos,
<http://www.tex.ac.uk/cgi-bin/texfaq2html?label=multind>.

26 Des lettres
**************

Synopsis :

     \documentclass{letter}
     \address{ADRESSE EXPÉDITEUR}
     \signature{NOM DE L'EXPÉDITEUR}
     \begin{document}
     \begin{letter}{ADRESSE DESTINATAIRE}
     \opening{APOSTROPHE}
       CORPS-DE-LA-LETTRE
     \closing{TEXTE DE SALUTATION}
     \end{letter}
       ...  encore des lettres ...
     \end{document}

   Produit une ou plusieurs lettres.

   Chaque lettre est dans un environnement séparé ‘letter’, dont
l’argument ADRESSE DESINATAIRE contient souvent plusieurs lignes
séparées par une double contr’oblique (‘\\’).  Par exemple, vous
pourriez avoir :

      \begin{letter}{M. Joseph Fabre \\
           25 rue de la République\\
           35700 Rennes}
        ...
      \end{letter}

   Le début de l’environnement ‘letter’ reinitialise le numéro de page à
1, et le numéro de note en bas de page à 1 aussi.

   Les ADRESSE EXPÉDITEUR et NOM DE L’EXPÉDITEUR sont communs à toutes
les lettres, qu’il y en ait une ou plus, ainsi il est préférable de
mettre ces déclarations dans le préambule.  Comme avec l’adresse du
destinataire, souvent ADRESSE EXPÉDITEUR contient plusieurs lignes
séparées par une double contr’oblique ‘\\’.  LaTeX place le NOM DE
L’EXPÉDITEUR sous la salutation, après un espace vertical pour la
signature manuscrite traditionnelle ; il peut aussi contenir plusieurs
lignes.

   Le corps de chaque environnement ‘letter’ commence par une commande
‘\opening’ obligatoire telle que ‘\opening{Madame, Monsieur,}’.  Le
texte CORPS-DE-LA-LETTRE est du code LaTeX ordinaire et peut donc tout
contenir de la liste énumérée à des formules mathématique en hors texte,
à ceci près que la commandes de rubricage telles que ‘\chapter’ qui
n’ont pas lieu d’être au sein d’une lettre sont indisponibles.  Chaque
environnement ‘letter’ se termine typiquement par une commande
‘\closing’ telle que dans ‘\closing{Je vous prie, Madame, Monsieur,
d'agréer l'expression de mes sentiments les meilleurs.}’.

   Du matériel suppélementaire peut venir après le ‘\closing’.  Vous
pouvez préciser qui est en copie de la lettre avec une commande comme
‘\cc{Le Patron\\Le Patron du Patron}’.  Il y a une commande ‘\encl’
similaire pour spécifier une liste de pièces jointes.  Et, vous pouvez
ajouter un postscriptum avec ‘\ps’.

   Par défaut LaTeX renfonce la signature et la salutation ‘\closing’ la
précédant d’une longueur valant ‘\longindentation’.  Celle-ci vaut par
défaut ‘0.5\textwidth’.  Pour les aligner à gauche, il suffit de
spécifier ‘\setlength{\longindentation}{0em}’ dans votre préambule.

   Pour fixer la date utilisez quelque-chose comme
‘\renewcommand{\today}{2015-10-12}’.  En plaçant ce code dans votre
préambule, il s’appliquera à toutes les lettres du document.

   Cet exemple est avec un seul environnement ‘letter’.  Les trois
lignes marquées en commentaire comme optionnelles sont typiquement
omises.

     \documentclass{letter}
     \usepackage[T1]{fontenc}
     \usepackage{french}
     \address{Rue de l'expéditeur \\ Ville de l'expéditeur}
     \signature{Nom de l'expéditeur\\ Titre de l'expéditeur}
     % optionnel : \location{Boîte Postale 13}
     % optionnel : \telephone{(102) 555-0101}
     \begin{document}
     \begin{letter}{Nom du destinataire \\ Adresse du destinataire}
     \opening{Monsieur,}
     % optionnel : \thispagestyle{firstpage}
     I ne suis pas intéressé à faire affaire avec vous.
     \closing{Je vous prie, Monsieur, de recevoir mes salutations distinguées.}
     \end{letter}
     \end{document}

   Ces commandes sont utilisées avec la classe ‘letter’.

26.1 ‘\address’
===============

Synopsis :

     \address{ADRESSE-EXPÉDITEURS}

   Spécifie l’adresse de retour telle qu’elle apparaît sur la lettre et
sur l’enveloppe.  Séparez des lignes multiples au sein de
ADRESSE-EXPÉDITEURS avec une double contr’oblique ‘\\’.

   Parce qu’elle peut s’appliquer à des lettres multiples cette
déclaration est souvent placée dans le préambule.  Toutefois elle peut
être faite n’importe où, y compris au sein d’un environnement ‘letter’
individuel.

   Cette commande est optionnelle : sans la déclaration ‘\address’ la
lettre est formatée avec un espace à blanc en haut de sorte à pouvoir
être imprimée sur du papier à en-tête pré-imprimé.  (*Note Overview::,
pour les détails concernant votre implémentation locale).  Avec la
déclaration ‘\address’, elle est formatée comme une lettre personnelle.

26.2 ‘\cc’
==========

Synopsis :

     \cc{PREMIER NOM\\...}

   Produit une liste de noms de personnes mis en copie de la lettre.
Cette commande est optionnelle.  Si elle est présente, alors elle vient
typiquement après le ‘\closing’.  En cas de ligne multiple, séparez les
avec une double contr’oblique ‘\\’, comme dans :

     \cc{Président \\
         Vice-président}

26.3 ‘\closing’
===============

Synopsis :

     \closing{TEXTE}

   D’ordinaire à la fin d’une lettre, au dessus de la signature
manuscrite, il y a un ‘\closing’ (bien que cette commande soit
optionnelle).  Par exemple :

     \closing{Je vous prie, Madame, Monsieur, d'agréer l'expression de ma
        confiance.}

26.4 ‘\encl’
============

Synopsis :

     \encl{LIGNE1\\LIGNE2}

   Déclare une liste d’une ou plus de pièces jointes.

26.5 ‘\location’
================

Synopsis :

     \location{TEXTE}

   Le TEXTE apparaît centré au bas de chaque page.  Il apparaît
seulement si le style de la page est ‘firstpage’.

26.6 ‘\makelabels’
==================

Synopsis :

     \makelabels

   Crée une feuille d’étiquettes d’adresses à partir des adresses des
destinataires, une pour chaque lettre.  Cette feuille sera sortie avant
les lettres, avec dans l’idée de la copier sur une feuille vierge de
vignettes autocollantes.  Cette commande est à mettre dans le préambule.

   Vous pouvez personnaliser les étiquettes en redéfinissant les trois
commandes ‘\startlabels’, ‘\mlabel’ et ‘\returnaddress’ dans le
préambule.  Ces commandes ne sont pas à appeler directement par
l’utilisateur, c’est la classe ‘letter’ qui les appelle.  La commande
‘\startlabels’ compose la page sur laquelle les étiquettes sont
imprimées en termes de largeur, de hauteur, et de nombre de colonnes,
etc.  La commande ‘\mlabel{ADRESSE EXPÉDITEUR}{ADRESSE DESTINATAIRE}’
est appelée pour chaque lettre du document avec deux arguments :

   • Le premier, ADRESSE EXPÉDITEUR, est le contenu courant de la macro
     ‘\returnaddress’
   • Le second, ADRESSE DESTINATAIRE, est l’adresse du destinataire
     telle que passée en argument à l’environnement ‘letter’.

   La définition par défaut de ‘\mlabel’ ignore le premier argument,
c’est à dire que si vous placez seulement un ‘\makelabels’ dans le
préambule, la feuille d’étiquettes ne contiendra des étiquettes que pour
les destinataires.

   Si vous désirez imprimer une étiquette d’adresse expéditeur et
d’adresse destinataire pour chaque lettre, vous devez faire deux
choses :
  1. La première est de redéfinir ‘\mlabel’ pour fabriquer deux
     étiquettes au lieu d’une, vous pouvez pour cela mettre ce qui suit
     dans le préambule :

          \newcommand*\originalMlabel{}
          \let\originalMlabel\mlabel
          \def\mlabel#1#2{\originalMlabel{}{#1}\originalMlabel{}{#2}}

     Ceci ne suffit toutefois pas, parce que la première des deux
     étiquettes est vide, vu que la définition par défaut de
     ‘\returnaddress’ l’est.
  2. La seconde est de redéfinir ‘\returnaddress’ pour contenir
     l’adresse de l’expéditeur, vous pouvez faire cela en plaçant dans
     le préambule :

          \renewcommand*\returnaddress{\protect\fromname\\\protect\fromaddress}

26.7 ‘\name’
============

‘\name{June Davenport}’

   Le nom de l’expéditeur, à imprimer sur l’enveloppe avec l’adresse de
retour.

26.8 ‘\opening{TEXTE}’
======================

Synopsis :

     \opening{TEXTE}

   Cette commande est obligatoire.  Elle commence la lettre, en suivant
le ‘\begin{letter}{...}’.  L’argument obligatoire TEXTE est le texte
d’“appel” de votre lettre.  Par exemple :

     \opening{Dear John,}

26.9 ‘\ps’
==========

Synopsis :

     \ps{TEXTE}

   Utilisez la commande ‘\ps’ pour commencer un postscriptum dans une
lettre, après ‘\closing’.

26.10 ‘\signature{TEXTE}’
=========================

Synopsis :

     \signature{PREMIÈRE LIGNE \\
                 ... }

   Le nom de l’expéditeur.  Cette commande est optionnelle, quoique son
inclusion soit habituelle.

   Le texte de l’argument apparaît à la fin de la lettre, après la
clôture et après une espace verticale pour la signature manuscrite
traditionnelle.  Séparez des lignes multiples avec une double
contr’oblique ‘\\’.  Par exemple :

     \signature{J Fred Muggs \\
                White House}

   La valeur par défault de LaTeX pour l’espace verticale space du texte
de ‘\closing’ au texte de ‘\signature’ est ‘6\medskipamount’, ce qui
vaut six fois 0,7em.

   Cette commande est d’ordinaire dans le preambule, de sorte à
s’appliquer à toutes les lettres du document.  Pour qu’elle ne
s’applique qu’à une seule lettre, placez la au sein d’un environnement
‘letter’ et avant le ‘\closing’.

   Vous pouvez inclure un graphique dans la signature, par exemple avec
‘\signature{\vspace{-6\medskipamount}\includegraphics{sig.png}\\ My
name}’ (ceci nécessite d’écrire ‘\usepackage{graphicx}’ dans le
préambule).

26.11 ‘\telephone’
==================

Synopsis :

   ‘\telephone{NUMÉRO}’

   C’est le numéro de telephone de l’expéditeur.  Déclaré typiquement
dans le préambule, où il s’applique à toutes les lettres.  Ceci apparaît
seulement si le style de page (‘pagestyle’) ‘firstpage’ est sélectionné.
Dans ce cas, il apparaît en bas à droite de la page.

27 Entrée/sortie console
************************

27.1 ‘\openin’ & ‘\openout’
===========================

Synopsis :

     \openin NUMÉRO=NOMFICHIER

   ou :

     \openout NUMÉRO=NOMFICHIER

   Ouvre un fichier pour y lire, ou pour y écrire.  Le NUMÉRO doit être
entre 0 et 15, comme dans ‘\openin3’ (dans LuaLaTeX NUMÉRO peut être
entre 0 et 255).

   Ici TeX ouvre le fichier le fichier ‘presidents.tex’ en lecture.

     \newread\fichierpresidents
     \openin\fichierpresidents=presidents
     \typeout{fichierpresidents vaut \the\fichierpresidents}
     \read\fichierpresidents to\presidentligne
     \typeout{\presidentligne}

La commande ‘\newread’ alloue des numéros de flux d’entrée de 0 à 15 (il
y a aussi une commande ‘\newwrite’).  La variable ‘\fichierpresidents’
est plus facile à mémoriser mais sous le capot ce n’est rien de plus
qu’un numéro ; le premier ‘\typeout’ donne queleque-chose du genre de
‘fichierpresidents vaut 1’.  De plus, ‘\newread’ garde la trace de
l’allocation de sorte que si vous en utilisez trop alors vous obtiendrez
une erreur du genre de ‘! No room for a new \read’.  Le second
‘\typeout’ produit la première ligne du fihcier, quelque-chose du genre
de ‘1 Bonaparte, Louis-Napoléon’.

   D’ordinaire TeX n’essaie pas d’ouvrir le fichier jusqu’à la prochaine
éjection de page.  Pour changer cela, utilisez ‘\immediate\openin
NUMÉRO=NOMFICHIER’ ou ‘\immediate\openout NUMÉRO=NOMFICHIER’.

   Fermez les fichiers avec ‘\closein NUMÉRO’ et ‘\closeout NUMÉRO’.

   La façon dont LaTeX manipule les noms de fichiers varie selon les
distributions, et peut même varier d’une version à l’autre d’une même
distribution.  Si le nom de fichier n’a pas d’extension alors TeX y
ajoute un ‘.tex’.  L’exemple suivant crée ‘presidents.tex’, y écrit une
ligne, et le ferme.

     \newwrite\fichierpresidents
     \openout\fichierpresidents=presidents
     \write\fichierpresidents{1 Bonaparte, Louis-Napoléon}
     \closeout\fichierpresidents

Mais les noms de fichier avec un point peuvent causer des problèmes : si
TeX tombe sur un NOMFICHIER comme ‘presidents.dat’ il se peut qu’il
cherche d’abord ‘presidents.dat.tex’ et ensuite ‘presidents.dat’, ou
bien le contraire.  La documentation de votre distribution devrait en
dire plus, et si cela fonctionne pour vous tant mieux, mais pour assurer
une portabilité complète le mieux et d’utiliser des noms de fichier ne
contenant que les vingt-six lettres ASCII (insensible à la casse
case-sensitive) et les dix chiffres, ainsi que les tiret de 8 ‘_’ et de
6 ‘-’, et en particulier sans point ni espace.

   Pour ‘\openin’, si TeX ne peut pas trouver le fichier alors il ne
produit pas une erreur.  Il ne fait que considérer que ce flux n’est pas
ouvert (ce qu’on peut vérifier avec ‘\ifeof’ ; on peut également
recourir à la commande ‘\InputIfFileExists’, *note Class and package
commands::).  Si vous essayer d’utiliser le même numéro deux fois, LaTeX
ne produit pas d’erreur.  Si vous essayer d’utiliser un mauvais numéro,
alors vous obtiendrez un message d’erreur du genre de ‘! Bad number
(16). <to be read again> = l.30 \openin16=test.jh’.

27.2 ‘\read’
============

Synopsis :

     \read NUMÉRO toMACRO

   Fait que la commande MACRO contienne la ligne suivante d’entrée du
flux de texte NUMÉRO, comme dans ‘\read5 to\data’.

   L’exemple suivant ouvre le fichier ‘mel.tex’ en lecture, me le
contenu de la première ligne dans la commande ‘\courriel’, et ensuite
ferme le fichier.

     \newread\fichierreception
     \openin\fichierreception=mel
     \read\fichierreception to\courriel
     \typeout{Adresse mél : \courriel}
     \closein\fichierreception

   Si NUMÉRO est hors de l’intervalle de 0 à 15 ou si aucun fichier avec
ce numéro n’est ouvert, ou si le fichier est à sa fin, alors ‘\read’
prend son entrée à partir du terminal.  Notez, cependant, que la méthode
naturelle en LaTeX de prendre en entrée à partir du terminal est
‘\typein’ (*note \typein::).

   Pour lire un fichier entier en une fois utilisez ‘\input’ (*note
\input::) ou ‘\include’ (*note \include & \includeonly::).

   Une raison usuelle de vouloir lire d’un fichier de données est de
faire du publipostage.  CTAN a plusieurs paquetage pour cela ; parmi
lesquels ‘datatool’.

27.3 ‘\typein[CMD]{MSG}’
========================

Synopsis :

     \typein[\CMD]{MSG}

   ‘\typein’ tape MSG sur la console et fait que LaTeX s’arrête et
attend que vous saisisiez une ligne d’entrée, en la terminant par un
retour-chariot.  Si l’argument optionnel \CMD est omis, l’entrée tapée
est traitée comme si elle avec été incluse dans le fichier d’entrée à la
place de la commande ‘\typein’.  Si l’argument \CMD est présent, cela
doit être un nom de commande.  Ce nom de commande est alors défini, ou
redéfini, pour se développer en le texte en entrée qui a été tapé.

27.4 ‘\typeout{MSG}’
====================

Synopsis :

     \typeout{MSG}

   Tape ‘msg’ sur le terminal et dans le journal (fichier ‘log’).  Les
commandes dans ‘msg’ qui sont définis avec ‘\newcommand’ ou
‘\renewcommand’ (entre autres) sont remplacées par leurs définitions
avant d’être tapée.

   Les règles usuelles de LaTeX pour le traitement de plusieurs espaces
comme un seul espace et pour ignorer les espaces après un nom de
commande s’appliquent à ‘msg’.  Une commande ‘\space’ dans ‘msg’
provoque un unique espace tapé, indépendant des espaces qui l’entourent.
Un ‘^^J’ dans ‘msg’ tape un saut à la ligne.

27.5 ‘\write’
=============

Synopsis :

     \write NUMÉRO{CHAÎNE}

   Écrit CHAÎNE vers le fichier journal (‘.log’), vers le terminal, ou
vers un fichier ouvert par ‘\openout’.  Par exemple, ‘\write6’ écrit
vers le flux textuel numéro 6

   Si le code suivant apparaît dans le fichier ‘FICHIERBASE.tex’ alors
cela ouvre le fichier ‘FICHIERBASE.jh’, y écrit ‘Bonjour tout le
monde !’ et un saut le ligne, et ferme ce fichier.

     \newwrite\monfichier
     \immediate\openout\monfichier=\jobname.jh   % \jobname est le nom de base fichier racine
     ...
     \immediate\write\monfichier{Bonjour tout le monde !}
       ...
     \immediate\closeout\monfichier

Le ‘\newwrite’ alloue un numéro de flux, en lui donnant un nom
symbolique pour se faciliter la vie, de sorte que ‘flux
\newwrite\monfichier\the\monfichier’ produit quelque-chose du genre de
‘flux 3’.  Ensuite ‘\openout’ associe le numéro de flux avec le nom de
fichier fourni.  Et puis à la fin TeX exécute ‘\write3’ ce qui place la
chaîne dans le fichier.

   Typiquement NUMÉRO est compris entre 0 et 15, parce que typiquement
les auteurs LaTeX suivent l’exemple précédent et le numéro est alloué
par le système.  Si NUMÉRO est hors de l’intervalle de 0 à 15 ou si il
n’est pas associé à un fichier ouvert alors LaTeX écrit CHAÎNE vers le
fichier journal.  Si NUMÉRO est positif alors ne plus LaTeX écrit CHAÎNE
vers le terminal.  Ainsi, ‘test \write-1{Bonjour tout le monde !}’ place
‘Bonjour tout le monde !’ suivi d’un saut de ligne dans le fichier
journal (c’est cez que la commande ‘\wlog’ fait ; *note \wlog::).  Et
‘\write100{Bonjour tout le monde !}’ met la même chose dans le fichier
jornal mais aussi met ‘Bonjour tout le monde !’ suivi d’un saut de ligne
dans la sortie terminal.  (Mais 16, 17, et 18 sont des valeurs spéciales
de NUMÉRO ; voir ci-dessous.)

   Dans LuaTeX, au lieu de 16 flux de sortie il y en a 256 (*note TeX
engines::).

   Utilisez ‘\write\@auxout{CHAÎNE}’ pour écrire vers le fichier ‘.aux’
courant qui est associé soit au fichier racine soit au fichier inclus
courant ; et utilisez ‘\write\@mainaux{CHAÎNE}’ pour écrire le fichier
‘.aux’ principal.  Ces noms symboliques sont définis par LaTeX.

   Par défaut LaTeX n’écrit pas CHAÎNE vers le fichier immediatement.
C’est ainsi parce que, par exemple, vous pourriez avoir besoin de
‘\write’ pour sauvegarder le numéro de page courant, mais au moment où
TeX rencontre une commande ‘\write’ tpyiquement il ne connaît pas quel
est le numéro de page, puisque il n’a pas encore découpé la sortie en
pages.  Ainsi, vous utilisez ‘\write’ dans l’un des trois contextes
suivants :

     \immediate\write\@auxout{CHAÎNE}     %1
     \write\@auxout{CHAÎNE}               %2
     \protected@write\@auxout{}{CHAÎNE}   %3

  1. Avec le premier, LaTeX écrit CHAÎNE vers le fichier immédiatement.
     Toutes les macros dans CHAÎNE sont développées à fond (exactement
     comme dans ‘\edef’ de sorte que pour empêcher le développement vous
     devez utiliser ‘\noexpand’, un ‘toks’, etc.  mais avec la
     différence que vous devez utiliser ‘#’ au lieu de ‘##’).

  2. Avec le deuxième, CHAÎNE est stocké dans la liste courante des
     choses (comme un élémént « extraordinaire » de TeX) et conservé
     jusqu’à ce que la page soit éjectée et de la même manière les
     macros ne sont pas développées jusqu’à l’éjection (‘\shipout’).  Au
     moment du ‘\shipout’, CHAÎNE est développée à fond.

  3. Le troisième, ‘\protected@write’, est sembable au deuxième sauf que
     vous pouvez utiliser ‘\protect’ pour éviter le développement.  Le
     premier argument qui est en plus vous permet d’insérer locallement
     des définitions supplémentaires pour que plus de macros soient
     protégées ou pour avoir d’autres définitions spéciales pendant
     l’écriture.

   Voici un exemple simple de développement avec ‘\write’ dans lequel
CHAÎNE contient une séquence de contrôle ‘\triplex’ que l’on a définie
comme le texte ‘XYZ’ :

     \newwrite\fichierjh
     \openout\fichierjh=test.jh
     \newcommand{\triplex}{XYZ}
     \write\fichierjh{test \triplex test}

Ceci résulte en ce que le fichier ‘test.jh’ contienne le texte ‘test
XYZtest’ suivi d’un saut de ligne.

   Les cas où NUMÉRO vaut 16, 17, ou 18 sont spéciaux.  À cause du
comportement de ‘\write’ quand NUMÉRO est hors de l’intervalle de 0 à 15
qu’on a déjà décrit plus haut, dans Plain TeX ‘\write16’ et ‘\write17’
étaient parfois utilisés pour écrire dans le fichier journal et le
terminal ; toutefois, dans LaTeX, la façon naturelle de faire ceci est
d’utiliser ‘\typeout’ (*note \typeout::).  La commande ‘\write18’ est
encore plus spéciale ; les systèmes TeX modernes l’utilisent pour passer
des commandes au système d’exploitation (*note \write18::).

   D’ordinaire ‘\write’ produit en sortie une unique ligne.  On peut y
insérer un saut de ligne avec ‘^^J’.  Ainsi, l’exemple suivant produit
deux lignes dans le fichier journal :

     \wlog{Les lignes parallèles ont beaucoup en commun.^^JMais elles ne se
     rencontrent jamais.}

   Un cas usuel dans lequel des auteurs tentent d’écrire dans leur
propre fichier est pour les réponses à des exerccies, ou dans quelque
autre situation où vous désirer écrire en sortie verbatim, sans
développer les macros.  CTAN a plusieurs paquetages pour cela ; parmi
lesquels ‘answers’.

27.5.1 ‘\write’ et la sécurité
------------------------------

La possibilité d’écrire dans des fichier soulève des problèmes de
sécurtié.  Si vous compilez un fichier LaTeX téléchargé et qu’il écrase
votre fichier de mots de passe alors vous serez à juste titre embêté.

   Ainsi par défaut les systèmes TeX ne vous autorisent à ouvrir en
écriture que les fichiers qui sont dans le répertoire courant ou dans un
sousrépertoire.  L’exemple suivant

     \newwrite\fichierjh
     \openout\fichierjh=../test.jh

produit une erreur du genre de :
     Not writing to ../test.jh (openout_any = p).
     ! I can't write on file `../test.jh'

   Il est possible d’avoir une telle erreur lorsqu’on essaie d’utiliser
une commande telle que ‘\include{../nomfichier}’ puisque LaTeX va
essayer d’ouvrir ‘../filename.aux’.  La solution la plus simple est de
placer les fichiers inclus dans le même répertoire que le fichier
racine, ou dans des sous-répertoires.

27.5.2 ‘\message’
-----------------

Synopsis :

     \message{CHAÎNE}

   Écrit CHAÎNE vers le fichier journal en ‘.log’ et le terminal.

   Typiquement, les auteurs LaTeX utilisent ‘\typeout’ (*note
\typeout::) qui permet d’utiliser ‘\protect’ sur toute commande fragile
au sein de CHAÎNE (*note \protect::).  Mais la commande ‘\typeout’
insère un saut de ligne à la fin de CHAÎNE contrairement à ‘\message’,
aussi cette dernière peut être utile.

   Dans l’exemple ci-dessous dans le corps du document

     avant\message{Un Deux}\message{Trois}\message{Quatre^^JLes}
     \message{pouces vont se battre.}Après

dans certaines circonstances (voir ci-dessous) LaTeX écrit ce qui suit à
la fois vers le terminal et le fichier journal.

     Un Deux Trois Quatre
     Les pouces vont se battre.

Un ‘^^J’ produit un saut de ligne.  Aussi, dans le document en sortie,
on a entre ‘avant’ et ‘Après’ un seul espace (issu de la fin de ligne
suivant ‘Les}’).

   Alors que ‘\message’ vous permet de mieux contrôler le formatage, un
truc à piger c’est que LaTeX peut très bien bousiller ce formatage là en
insérant des sauts de ligne selon ce qu’il a déjà sorti.  Comparez ce
corps de document, où le ‘Deux’ a été déplacé, à celui donné en exemple
plus haut.

     avant\message{Un}\message{Deux Trois}\message{Quatre^^JLes}
     \message{pouces vont se battre.}Après

   La chose suivante peut se produire : lorsque LaTeX produit les
messages en sortie vers le terminal, le message avec ‘Un’ désormais plus
court tient à la fin de la ligne de terminal, et du coup LaTeX saute de
ligne juste après lui et avant le ‘Deux Trois’.  Ce saut de ligne
apparaît également dans le fichier journal.  Cette insertion de saut de
ligne peut déprendre de, par exemple, la longueur des noms complet des
fichiers inclus.  C’est pourquoi il est difficile de produire des lignes
formatées précisément et d’une façon qui soit portable, et de même de
demander que votre message commence au début d’une ligne.

27.5.3 ‘\wlog’
--------------

Synopsis :

     \wlog{CHAÎNE}

   Écrit CHAÎNE vers le fichier journal ‘.log’.

     \wlog{Pour tout n différent de 0, et tout x, (sin x)/n vaut six.}
     \wlog{Ben oui, il suffit de simplifier par n.}

   D’ordinaire CHAÎNE apparaît sur une seule ligne séparée.  Utilisez
‘^^J’ pour insérer un saut de ligne.

     \wlog{C'est Helvetica qui téléphone à Times Roman :}
     \wlog{Change de ligne !^^JJe t'entends très mal.}

27.5.4 ‘\write18’
-----------------

Synopsis :

     \write18{COMMANDE_SHELL}

   Émet une commande vers l’interpréteur du système d’exploitation.  Le
système d’exploitation exécute la commande et l’exécution de LaTeX est
bloquée jusqu’à ce que cela soit fini.

   La séquence suivante (sur Unix)

     \usepackage{graphicx}  % dans le préambule
       ...
     \newcommand{\numerofig}{1}
     \immediate\write18{cd pix && asy figure\numerofig}
     \includegraphics{pix\figure\numerofig.pdf}

exécute Asymptote (le programme ‘asy’) sur le fichier ‘pix/figure1.asy’,
de sorte que le document peut par la suite lire le graphique en
résultant (*note \includegraphics::).  Comme pour tout ‘\write’, ici
LaTeX développe les macros contenues dans COMMANDE_SHELL de sorte que
‘\numerofig’ est remplacé par ‘1’.

   Un autre exemple est que vous pouvez exécuter automatiquement BibTeX
au début de chaque exécution de LaTeX (*note Using BibTeX::) en incluant
‘\immediate\write18{bibtex8 \jobname}’ comme première ligne du fichier.
Notez que ‘\jobname’ se développe par défaut en le nom de base du
fichier racine, ou bien l’argument de l’option ‘--jobname’ si celle-ci
est passée sur la ligne de commande.

   Il peut arriver que vous ayez besoin de plusieurs étapes pour obtenir
l’information désirée.  L’exemple suivant insère en entrée une liste de
tous les fichiers PDF du répertoire courant (voir aussi ‘texosquery’
plus bas) :

     \immediate\write18{ls *.pdf > tmp.dat}
     \input{tmp.dat}

   Le comportement standard de tout ‘\write’ est d’attendre jusqu’à la
prochaine éjection de page avant de développer les macros ou d’écrire
dans le flux (*note \write::).  Mais il se peut que vous désiriez que
cela soit immédiat.  Pour cela, utilisez
‘\immediate\write18{COMMANDE_SHELL}’.

   Autoriser l’usage de commandes système au sein d’un fichier LaTeX
pose des problème de sécurité évidents.  Si vous télécharger un fichier
depuis la Toile et qu’il contient des commandes pour détruire tous vos
fichier, cela vous rendrait bien malheureux.  Le réglage standard dans
les distributions modernes est d’interdire l’accès complet à
l’interpréteur de commande du système d’exploitation.  Vous pouvez
l’autoriser, si vous êtes sûr qu’il n’y a pas de danger, en compilant
avec ‘latex --enable-write18 NOMFICHIER’ (*note Command line options::).
(L’option ‘--shell-escape’ est un synonyme dans TeX Live.)

   Au lieu de l’accès complet, les distributions modernes par défaut
utilisent une version restreinte qui permet à certaines commandes de
fonctionner, telles que celles qui font tourner Metafont pour générer
les polices manquantes, même si vous n’utilisez pas l’option
‘enable-write18’.  Par défaut cette liste de commandes autorisées est
courte et ne fait figurer que les commandes qui sont sous contrôle des
mainteneurs de la distribution (*note Command line options::).

   Certains paquetage ont besoin d’exécuter des commandes système
externes.  Par exemple ‘sagetex’ vous permet de faire faire des calcul
ou tracer des graphiques au logiciel de mathématiques Sage, puis
d’incorporer ces sorties dans votre document.  Pour cela vous devez
exécuter LaTeX avec la fonction ‘\write18’ pleinement débridée.

   Le texte COMMANDE_SHELL est toujours passé à ‘/bin/sh’ sur les
systèmes d’exploitation unixiens, et à l’interpréteur de commande DOS
‘cmd.exe’ sur Windows.  LaTeX ignore tout réglage d’un autre
interpréteur de commande par l’utilisateur, ainsi que la variable
d’environnement ‘SHELL’.

   Si votre besoin c’est d’avoir de l’information sur le système, comme
le nom du système d’exploitation, celui de la locale, ou le contenu d’un
répertoire, alors jeter un coup d’œil au paquetage ‘texosquery’ qui
fournit une interface commode et sûre pour cela, contrairement aux
exemples donnés plus haut utilisant ‘\write18’ à l’état brut :
<https://ctan.org/pkg/texosquery>.

28 Interface ligne de commande
******************************

Synopsis (depuis la ligne de commande d’un terminal) :

     pdflatex OPTIONS ARGUMENT

   Exécute LaTeX sur ARGUMENT.  À la place de ‘pdflatex’ vous pouvez
aussi utiliser ‘xelatex’, ou ‘lualatex’, ou ‘latex’.

   L’exemple suivant exécute LaTeX sur le fichier ‘these.tex’ produisant
en sortie ‘these.pdf’.

     pdflatex these

Notez que ‘.tex’ est l’extension par défault des noms de fichier.

   pdfTeX est une évolution du programme original TeX, comme le sont
XeTeX et LuaTeX (*note TeX engines::).  Ils sont complètement
rétrocompatibles.  Mais le programme original avait son propre format de
sortie, DVI, alors que les plus récents peuvent produire directement un
PDF en sortie.  Ceci leur permet de profiter des fonctions
supplémentaires des PDF tels que les hyperliens, la prise en charge de
formats modernes d’images tels que JPG et PNG, et les programmes de
visionnage que l’on trouve de partout.  En bref, si vous exécutez
‘pdflatex’ ou ‘xelatex’ ou ‘lualatex’ alors par défaut vous obtenez un
PDF et avez accès à toutes ses fonctions modernes.  Si vous exécutez
‘latex’, ou ‘dvilualatex’, alors vous obtenez un DVI. La description
faite ici suppose pdfLaTeX.

   *Note Command line options::, pour une sélection des options de ligne
de commande les plus utiles.  Quant à ARGUMENT, le cas habituel est
qu’il ne commence pas par une contr’oblique, dans ce cas le système le
prend pour un nom de fichier, et compile ce fichier.  Si ARGUMENT
commence avec une contr’oblique, alors le système l’interprète comme une
ligne d’entrée à LaTeX, ce qui peut être utilisé pour obtenir certains
effets spéciaux (*note Command line input::).

   Si vous ne donnez aucun arguments ni options alors ‘pdflatex’ invite
à saisir à partir du terminal.  Vous pouvez vous échapper de cela en
entrant ‘CTRL-D’.

   Si LaTeX trouve une erreur dans votre document alors par défaut il
s’arrête et vous interroge à ce propos.  *Note Recovering from errors::
pour un aperçu de quoi faire.

28.1 Options passées à la ligne de commande
===========================================

On décrit ici les options de ligne de commande qui sont pertinentes pour
rédaction ordinaire de documents.  Pour une liste complète, essayez
d’exécuter ‘latex --help’ depuis la ligne de commande.

   Les implementations permettent en général de spécifier les options de
ligne de commande avec un prefixe ‘-’ ou ‘--’.  C’est le cas à la fois
pour TeX Live (et MacTeX) et MiKTeX.  Ici on utilise les deux
conventions indistinctement.

‘-version’
     Affiche la version courante, comme ‘pdfTeX 3.14159265-2.6-1.40.16
     (TeX Live 2015/Debian)’ ainsi qu’une petite quantité d’information
     supplémentaire, et se termine.

‘-help’
     Produit un message bref d’utilisation servant d’aide-mémoire et se
     termine.

‘-interaction=MODE’
     zTeX compile un document en l’un parmi quatre modes possibles
     d’interaction : ‘batchmode’, ‘nonstopmode’, ‘scrollmode’,
     ‘errorstopmode’.  Dans le mode “errorstopmode” (le mode par
     défaut), TeX s’arrête à chaque erreur et demande une intervention
     de l’utilisateur.  Dans le mode “batchmode” il n’imprime rien sur
     le terminal, on défile sur les erreurs comme si l’utilisateur
     appuyait ‘RETURN’ à chaque erreur, et les fichiers manquants
     entrainent la terminaison de la tâche.  Dans le mode “nonstopmode”,
     les messages de diagnostic apparaissent sur le terminal mais comme
     dans le mode batch il n’y as pas d’interaction avec l’utilisateur.
     Dans le mode “scrollmode”, TeX s’arrête en cas de fichiers
     manquants ou d’entrée clavier, mais pour nulle autre raison.

     Par exemple, en démarrant LaTeX avec cette ligne de commande :

          pdflatex -interaction=batchmode NOMFICHIER

     on élimine la plupart des sorties terminal.

‘-jobname=CHAÎNE’
     Règle la valeur du “nom d’ouvrage” de TeX à la chaîne de caractères
     CHAÎNE.  Le fichier journal et le fichier de sortie s’appeleront
     ‘CHAÎNE.log’ et ‘CHAÎNE.pdf’.  *note Jobname::.

‘-output-directory=RÉPERTOIRE’
     Écrit les fichiers dans le répertoire RÉPERTOIRE.  Il doit déjà
     exister.  Ceci s’applique à tous les fichiers externes créés par
     TeX ou LaTeX, tels que le fichier ‘.log’ de l’exécution, les
     fichiers ‘.aux’, ‘.toc’, etc., créés par LaTeX, de même que le
     fichier de sortie principal ‘.pdf’ ou ‘.dvi’ lui-même.

     Lorsqu’il est spécifié, le répertoire de sortie RÉPERTOIRE est
     aussi vérifié en premier automatiquement pour tout fichier lu en
     entrée, de sorte que les fichiers externes peuvent être relus en
     entrée, si désiré.  Le vrai répertoire courant (dans lequel LaTeX
     été lancé) demeure inchangé, et est également vérifié pour trouver
     les fichiers en entrée.

‘--enable-write18’
‘--disable-write18’
‘--shell-escape’
‘--no-shell-escape’
     Activation et desactivation ‘\write18{COMMANDE_SHELL}’ (*note
     \write18::).  Les deux premières options sont prises en charge à la
     fois par TeX Live et MiKTeX, alors que les deux suivantes sont des
     synonymes pris en charge par TeX Live.

     Activer cette fonction a des implications lourdes de sécurité,
     puisque cela permet à un fichier LaTeX d’exécuter n’importe quelle
     commande.  Ainsi, par défaut, le ‘\write18’ non restreint n’est pas
     autorisé.  (Le réglage par défaut de TeX Live, MacTeX, et MiKTeX
     est d’autoriser l’exécution d’un nombre limité de programmes en
     relation avec TeX, et qu’elles distribuent).

     Pa exemple, si vous invoquez LaTeX avec l’option ‘no-shell-escape’,
     et que dans votre document vous appelez ‘\write18{ls -l}’, alors
     vous n’obtenez pas d’erreur mais votre fichier journal dit
     ‘runsystem(ls -l)...disabled’.

‘-halt-on-error’
     Arrête le traitement sur la première erreur.

‘-file-line-error’
‘-no-file-line-error’
     Active ou désactive le style ‘NOMFICHIER:NUMÉROLIGNE:ERREUR’ des
     messages d’erreur.  Ces options ne sont disponibles qu’avec TeX
     Live ou MacTeX.

28.2 Spécifier du code LaTeX sur la ligne de commande
=====================================================

Au sein de l’invocation de ligne de commande ‘pdflatex OPTIONS ARGUMENT’
vous pouvez spécifier du code LaTeX arbitraire en entrée en commençant
ARGUMENT par une contr’oblique.  Ceci permet de faire certains effets
spéciaux.

   Par exemple, ce fichier (qui utilise le paquetage ‘hyperref’ pour les
hyperliens) peut produire deux types de sortie, l’un pour l’impression
papier et l’autre pour une consultation PDF.

     \ifdefined\paperversion        % dans le préambule
     \newcommand{\urlcolor}{black}
     \else
     \newcommand{\urlcolor}{blue}
     \fi
     \usepackage[colorlinks=true,urlcolor=\urlcolor]{hyperref}
       ...
     \href{https://www.ctan.org}{CTAN}  % dans le corps
       ...

Lorsqu’on compile ce document ‘book.tex’ avec la ligne de commande
‘pdflatex book’ le lien ‘CTAN’ sera en bleu.  Mais si on le compile avec
‘pdflatex "\def\paperversion{}\input book.tex"’, alors le lien sera en
noir.  (Notez l’utilise des guillemets anglais pour empécher
l’interpretation des symboles par l’interpréteur de ligne de commande ;
votre système fait peut-être cela différemment).

   De même, à partir d’un seul fichier ‘principal.tex’ vous pouvez
compiler deux versions distinctes.

     pdflatex -jobname=etudiants "\def\etudiants{}\input{principal}"
     pdflatex -jobname=professeurs "\def\profs{}\input{principal}"

L’option ‘jobname’ est là parce que sinon les deux fichiers en sortie
s’appeleraient ‘principal.pdf’ et le second écraseraient le premier.

   Dans cet exemple on passe l’option ‘draft’ au paquetage ‘graphicx’ :

     pdflatex "\PassOptionsToPackage{draft}{graphicx}\input{aa.tex}"

de sorte que les fichiers graphiques ne sont lus que pour l’information
de dimension de boîte englobante, mais remplacés dans le PDF par une
boîte de même taille ne contenant que le nom de fichier, ce qui accélère
le temps de compilation, et économise l’encre d’imprimante.

   Un autre exemple classique est de cribler certains chapitres à la
compilation en les passant à ‘\includeonly’ dans la ligne de commande.
Ainsi, supposons qu’on a un fichier racine ‘livre.tex’ ainsi formé :

     \documentclass{book}
     \begin{document}
     \frontmatter
     \include{pref}
     \mainmatter
     \include{chap1}
     \include{chap2}
     \appendix
     \include{append}
     \backmatter
     \include{bib}
     \end{document}

   En compilant ‘livre.tex’ avec la ligne de commande suivante :

     pdflatex '\includeonly{chap1}\input{livre}

seul le chapitre contenu dans ‘chap1.tex’ sera produit en sortie.  *Note
Splitting the input::.

   Dans ce dernier exemple, on force la date au 14 juillet 1789 :

     pdflatex '\day=14 \month=7 \year=1789 \input revolution'

   Ainsi, si le fichier ‘revolution.tex’ contient ceci :

     \documentclass[french]{minimal}
     \usepackage{babel}
     \begin{document}
     \today\ c'est la révolution !
     \end{document}

alors vous aurez en sortie un truc du genre :

     14 juillet 1789 c’est la révolution !

28.3 Nom d’ouvrage de TeX
=========================

Quand vous exécutez ‘pdflatex OPTIONS ARGUMENT’, si ARGUMENT ne commence
pas par une contr’oblique alors TeX considère que c’est le nom du
fichier racine à lire en entrée.  Le nom du fichier racine, sans
l’extension ‘.tex’ si elle est donnée, définit alors le “nom d’ouvrage”,
celui-ci est utilisé pour nommer le fichier journal et le fichier de
sortie.

   Autrement, si ARGUMENT commence par une contr’oblique, il attend la
première instruction ‘\input’ et le nom du fichier en entrée devient le
nom d’ouvrage.

   Au sein du document, la variable ‘\jobname’ se développe dans le nom
d’ouvrage, avec la particularité que tous les caractères sont de catcode
11 (lettre).  Ainsi, si vous voulez utilisez le nom d’ouvrage comme une
condition, la solution la plus simple est d’utiliser une macro de text
du paquetage ‘xtring’ dans sa variante étoilée pour être insensible au
catcode.  Dans le texte suivant par exemple, la note en bas de page
« dont la Respublica Bananensis Francorum. » n’est présente que si le
nom de tâche commence par ‘moi-meme’.

     Si une démocratie est juste un régime où les citoyens votent alors
     toutes les républiques bananières\IfBeginWith*{\jobname}{moi-meme}%
     {\footnote{dont la Respublica Bananensis Francorum.}}{} sont des
     démocraties.

   Cela ne fonctionnerait pas si la version non étoilée de
‘\IfBeginWith’ était utilisée, parce que le ‘-’ dans ‘moi-meme’ a un
catcode 12, alors que dans ‘\jobname’, s’il s’y trouve, il a
nécessairement un catcode 11.

   Dans certains cas il peut être utile de fixer le nom de tâche à une
autre valeur que celle par défaut, l’option ‘--jobname’ permet de faire
cela, elle l’emporte sur le premier ‘\input’ et spécifie directement le
nom.  *Note Command line input::, pour un exemple d’usage, où l’on
génère deux fichiers ‘etudiants.pdf’ et ‘professeurs.pdf’ à partir d’un
même code source ‘principal.tex’.

   En l’absence d’option ‘--jobname’, la valeur initiale de ‘\jobname’
est ‘texput’, de sorte que si la compilation s’arrête avant le premier
‘\input’, le journal produit sera nommé ‘texput.log’.  Par exemple la
commande suivante :

     pdflatex "\nonstopmode\errmessage{\string\jobname\space vaut \jobname}"

   produira un journal ‘textput.log’ contenant le message d’erreur ‘!
\jobname vaut texput.’.

   Attention, le nom de tâche est également forcé à ‘texput’ si le
premier ‘\input’ est indirectement appelé par ‘\documentclass’ ou
‘\RequirePackage’.  Ainsi l’exemple suivant produira un fichier nommé
‘texput.pdf’ avec une version raisonnablement récente de LaTeX :

     pdflatex "\documentclass{minimal}\begin{document}Bonjour !\end{document}"

   mais avec une version plus ancienne le fichier de sortie se serait
nommé ‘minimal.pdf’, parce que le premier ‘\input’ appelé indirectement
par ‘\documentclass’ aurait été traité de la même façon que s’il
chargeait le fichier source racine.

   Voici un autre exemple de cela, ici on reprend l’exemple donné dans
*note Command line input:: où l’on passe sur la ligne de commande
l’option ‘draft’ au paquetage ‘graphicx’.  Mais au lieu de le faire avec
‘\PassOptionToPackage’, on le fait avec ‘\RequirePackage’, ce qui a
également pour effet que le paquetage ‘graphicx’ sera chargé en premier,
si ce n’était pas déjà le cas.

     pdflatex --jobname=aa "\RequirePackage[draft]{graphicx}\input{aa.tex}"

   L’option ‘--jobname=aa’ est nécessaire, car elle garantit que le
fichier de sortie se nommera bien ‘aa.pdf’, et non ‘texput.pdf’ avec une
version récente de LaTeX, ni ‘graphicx.pdf’ avec une version plus
ancienne.

28.4 Quand quelque chose se passe mal
=====================================

Si LaTeX trouve une erreur dans votre document alors il vous produit un
message d’erreur et vous invite à la saisie par un point
d’interrogation, ‘?’.  Par exemple, exécuter LaTeX sur ce fichier

     \newcommand{\NP}{\ensuremath{\textbf{NP}}}
     Le problème \PN{} est mis à prix à un million de dollars.

a pour effet qu’il affiche ceci, et attende une saisie :

     ! Undefined control sequence.
     l.5 Le problème \PN
                {} est mis à prix à un million de dollars.
     ?

Le plus simple est de saisir ‘x’ et ‘RETURN’ et de corriger la coquille.
Alternativement vous pourriez saisir ‘?’ et ‘RETURN’ pour voir les
autres options.

   Il y a deux autres scénarios.  Le premier est que vous ayez omis le
‘\end{document}’ ou fait une faute de frappe dessus.  Dans ce cas LaTeX
produit en invite ‘*’.  Vous pouvez revenir à la ligne de commande en
tapant ‘\stop’ et ‘RETURN’.

   Le dernier scénario est que vous ayez fait une faute de frappe sur le
nom de fichier.  Par exemple, au lieu de ‘pdflatex test’ vous auriez
tapé ‘pdflatex tste’.

     ! I can't find file `tste'.
     <*> tste

     (Press Enter to retry, or Control-D to exit)
     Please type another input file name:

Le plus simple est de saisir ‘CTRL D’ (en appuyant sur les touches
Control et d simultannément), et d’ensuite retaper la ligne de commande
correcte.

Annexe A Patrons de documents
*****************************

Bien qu’ils soient illustratifs, ces patrons de document vous seront
put-être utiles.  Davantage de ressources de patrons sont listées à
<https://tug.org/interest.html#latextemplates>.

A.1 Un patron ‘beamer’
======================

La classe ‘beamer’ crée des présentations en diapositives.  Elle a de
très nombreuses possibilités, mais voici un patron de base :

\documentclass{beamer}
\usepackage[latin1]{inputenc}

\title{Patron pour la classe Beamer}
\author{Alex L'Auteur}
\date{31 juillet 2020}

\begin{document}

\maketitle

% sans [fragile], n'importe quel code {verbatim} se prend des erreurs mystérieuses.
\begin{frame}[fragile]
 \frametitle{Première diapositive}

\begin{verbatim}
  C'est \verbatim!
\end{verbatim}

\end{frame}

\end{document}

   Le paquetage Beamer sur le CTAN : <https://ctan.org/pkg/beamer>.

A.2 Patron ‘article’
====================

Un patron simple pour un article.

\documentclass{article}
\title{Patron de la classe article}
\author{Alex Author}

\begin{document}
\maketitle

\section{Première section}
Du texte.

\subsection{Première section, première sous-section}
Encore du texte.

\section{Deuxième section}
Et du texte.

\end{document}

A.3 Un patron ‘book’
====================

Voici un patron simple pour un livre.  *Note Larger book template:: pour
un patron plus élaboré.

\documentclass{book}
\title{Le Patron de la classe book}
\author{Alex L'Auteur}

\begin{document}
\maketitle

\chapter{Premier}
Du texte.

\chapter{Second}
Et du texte.

\section{Un sujet secondaire}
La fin.

\end{document}

A.4 Un patron ‘book’ plus élaboré
=================================

Voici un patron quelque peu élaboré pour un livre.  *Note book
template:: pour un patron plus simple.

   Ce patron utilise un ‘\frontmatter’, ‘\mainmatter’, et ‘\backmatter’
pour contrôler la typographie des trois zones principales d’un livre
(*note \frontmatter & \mainmatter & \backmatter::).  Le livre a une
bibliographie et un index.

   Il est également à noter qu’il utilise ‘\include’ et ‘\includeonly’
(*note Splitting the input::).  Lorsque vous travaillez sur un chapitre
vous pouvez ne pas compiler tous les autres chapitres en mettant en
commentaire les entrées correspondantes dans les arguments de
‘\includeonly’.  Ceci accélère la compilation sans perdre aucune
information telle que les renvois.  (Le matériel qu’il n’est pas
nécessaire de mettre sur une nouvelle page est inclus avec ‘\input’ au
lieu de ‘\include’ ; mais ceci au dépens du bénéfice de maintenir les
valeurs de renvois).

\documentclass[titlepage]{book}
\usepackage{makeidx}\makeindex

\title{Book Class Template}
\author{Alex Author}

\includeonly{%
%  frontcover,
  preface,
  chap1,
% appenA,
  }

\begin{document}
\frontmatter
\include{frontcover}
  % maybe comment out while drafting:
\maketitle \input{dedication} \input{copyright}
\tableofcontents
\include{preface}

\mainmatter
\include{chap1}
...
\appendix
\include{appenA}
...

\backmatter
\bibliographystyle{apalike}
\addcontentsline{toc}{chapter}{Bibliography}
\bibliography
\addcontentsline{toc}{chapter}{Index}
\printindex
\include{backcover}
\end{document}

Annexe B Traduction de la licence
*********************************

La traduction qui suit est donnée uniquement à titre informatif, et ne
remplace pas le texte en anglais donné au début de ce document.

   Permission vous est donnée de distribuer des copies conformes de ce
manuel à condition que les mentions du droit d’auteur et de permission
soient préservées sur toutes les copies.

   Permission vous est donnée de copier et distribuer des versions
modifiées de ce manuel dans les conditions d’une copie conforme, à
condition que l’ensemble de l’ouvrage dérivé résultant soit distribué
sous les termes d’une mention de permission identique à celle-ci.

   Permission vous est donnée de copier et distribuer des traductions de
ce manuel dans une autre langue, dans les conditions ci-dessus pour les
versions modifiées.

Index des concepts
******************

* Menu:

* *, forme en * des commandes de rubricage: Sectioning.     (line  2152)
* *, invite:                             Recovering from errors.
                                                            (line 12747)
* -1, écrire dans le flux numéro:        \write.            (line 12167)
* .glo, fichier:                         Glossaries.        (line 11661)
* .idx, fichier:                         Indexes.           (line 11677)
* .ind, fichier:                         Indexes.           (line 11692)
* \include imbriqués non autorisés:      \include & \includeonly.
                                                            (line 11436)
* \write et sécurité:                    \write and security.
                                                            (line 12256)
* \write immédiat:                       \write.            (line 12200)
* \write retardé:                        \write.            (line 12206)
* \write, flux 16, 17, 18:               \write.            (line 12231)
* \write18, activation:                  Command line options.
                                                            (line 12533)
* ^^J, dans \write:                      \write.            (line 12240)
* a e liés:                              Additional Latin letters.
                                                            (line 11155)
* a rond-en-chef:                        Additional Latin letters.
                                                            (line 11151)
* a, e dans l’a:                         Additional Latin letters.
                                                            (line 11155)
* accent:                                Font styles.       (line  1320)
* accent <1>:                            Font styles.       (line  1398)
* accent aigu:                           Accents.           (line 11060)
* accent aigu en math:                   Math accents.      (line  8743)
* accent barre suscrite en math:         Math accents.      (line  8746)
* accent brève en math:                  Math accents.      (line  8749)
* accent caron:                          Accents.           (line 11141)
* accent caron en math:                  Math accents.      (line  8752)
* accent chapeau en math:                Math accents.      (line  8764)
* accent circonflexe:                    Accents.           (line 11074)
* accent circonflexe en math:            Math accents.      (line  8764)
* accent diérèse en math:                Math accents.      (line  8755)
* accent double-brève-renversée:         Accents.           (line 11124)
* accent grave en math:                  Math accents.      (line  8761)
* accent háček:                          Accents.           (line 11141)
* accent háček en math:                  Math accents.      (line  8752)
* accent macron en math:                 Math accents.      (line  8746)
* accent point:                          Accents.           (line 11065)
* accent point en chef:                  Accents.           (line 11065)
* accent point suscrit:                  Accents.           (line 11065)
* accent point suscrit en math:          Math accents.      (line  8758)
* accent rond en chef:                   Accents.           (line 11118)
* accent rond-en-chef en math:           Math accents.      (line  8773)
* accent tilde en math:                  Math accents.      (line  8776)
* accent tréma:                          Accents.           (line 11055)
* accent tréma en math:                  Math accents.      (line  8755)
* accent tréma hongrois:                 Accents.           (line 11102)
* accents:                               Accents.           (line 11042)
* Accents mathématiques:                 Math accents.      (line  8738)
* accentuées, lettres:                   Accents.           (line 11042)
* accentués, caractères:                 Accents.           (line 11042)
* accolade droite, dans le texte:        Text symbols.      (line 10936)
* accolade gauche, dans le texte:        Text symbols.      (line 10933)
* accéder à un caractère quelconque d’une police: Symbols by font position.
                                                            (line 10835)
* afficher du texte cité avec renfoncement de paragraphe: quotation & quote.
                                                            (line  4882)
* afficher un texte cité sans renfoncement de paragraphe: quotation & quote.
                                                            (line  4882)
* agrandir la page courante:             \enlargethispage.  (line  6351)
* align environnement, d’amsmath:        eqnarray.          (line  3461)
* alignement au moyen de tabbing:        tabbing.           (line  4920)
* aligner des équations:                 eqnarray.          (line  3461)
* aligner du texte dans des tableaux:    tabular.           (line  5368)
* aligner du texte en utilisant des taquets de tabulation: tabbing.
                                                            (line  4920)
* allure de police:                      Low-level font commands.
                                                            (line  1567)
* amsmath paquetage, remplaçant eqnarray: eqnarray.         (line  3461)
* annexes d’un livre:                    \frontmatter & \mainmatter & \backmatter.
                                                            (line  2654)
* anomalies, rapports:                   About this document.
                                                            (line   322)
* aperçu de LaTeX:                       Overview.          (line   359)
* appel:                                 \opening.          (line 11940)
* appendices:                            \appendix.         (line  2618)
* appendix:                              \appendix.         (line  2618)
* arguments mouvants:                    \protect.          (line  7152)
* arrière-plan coloré:                   Colored pages.     (line  9921)
* article d’index, « Voir » et « Voir aussi »: Indexes.     (line 11684)
* article d’une liste, compteur spécifiant: \usecounter.    (line  7252)
* articles numérotés, compteur spécifiant: \usecounter.     (line  7252)
* ASCII, circonflexe dans le texte:      Text symbols.      (line 10912)
* ASCII, tilde dans le texte:            Text symbols.      (line 10915)
* astérisque centré, dans le texte:      Text symbols.      (line 10918)
* aval, référence déclarée en:           Cross references.  (line  2925)
* avant parution, essais:                TeX engines.       (line   550)
* barre par-dessus, accent:              Accents.           (line 11069)
* barre au-dessous:                      Accents.           (line 11132)
* barre sousscite:                       Accents.           (line 11132)
* barre verticale double, dans le texte: Text symbols.      (line 10927)
* barre verticale, dans le texte:        Text symbols.      (line 10924)
* barre, diacritique:                    Accents.           (line 11069)
* barre, double verticale, dans le texte: Text symbols.     (line 10927)
* barre-souscrite, diacritique:          Accents.           (line 11089)
* Bas de casse:                          Upper and lower case.
                                                            (line 10782)
* bas de page, créer des notes:          Footnotes.         (line  6384)
* bas de page, des paramètres pour:      Page layout parameters.
                                                            (line  1773)
* bases de LaTeX:                        Overview.          (line   359)
* batchmode:                             Command line options.
                                                            (line 12495)
* beamer patron et classe:               beamer template.   (line 12776)
* bibliographie, créer (automatiquement): Using BibTeX.     (line  5864)
* bibliographie, créer (manuellement):   thebibliography.   (line  5673)
* bibTeX, utilisation:                   Using BibTeX.      (line  5864)
* Big point:                             Units of length.   (line  7455)
* bogues, rapports:                      About this document.
                                                            (line   322)
* Bonjour le monde:                      Starting and ending.
                                                            (line   388)
* book, annexes:                         \frontmatter & \mainmatter & \backmatter.
                                                            (line  2654)
* book, pièces postliminaires:           \frontmatter & \mainmatter & \backmatter.
                                                            (line  2654)
* book, pièces principales:              \frontmatter & \mainmatter & \backmatter.
                                                            (line  2654)
* book, pièces préliminaires:            \frontmatter & \mainmatter & \backmatter.
                                                            (line  2654)
* boîte:                                 \mbox & \makebox.  (line  9326)
* boîte englobante:                      \includegraphics.  (line 10398)
* boîte, allouer une nouvelle:           \newsavebox.       (line  6859)
* boîte, sauvegarde:                     \sbox & \savebox.  (line  9546)
* boîte, utilise une boîte sauvegardée:  \usebox.           (line  9661)
* boîtes:                                Boxes.             (line  9317)
* boîtes colorées:                       Colored boxes.     (line  9882)
* boîtes noires, en omettant:            Document class options.
                                                            (line   770)
* brève, accent:                         Accents.           (line 11129)
* brève, diacritique:                    Accents.           (line 11129)
* cadratin:                              Units of length.   (line  7474)
* cadratin <1>:                          Text symbols.      (line 10961)
* cadratin, demi:                        Text symbols.      (line 10967)
* cadratin, deux tiers:                  Text symbols.      (line 11031)
* cadratin, trois-quarts:                Text symbols.      (line 11025)
* Capitales:                             Upper and lower case.
                                                            (line 10782)
* caractères latins non diacrités:       Additional Latin letters.
                                                            (line 11146)
* caractères réservés:                   Reserved characters.
                                                            (line 10747)
* caractères speciaux:                   Additional Latin letters.
                                                            (line 11146)
* caractères spéciaux:                   Reserved characters.
                                                            (line 10747)
* caron, diacritique:                    Accents.           (line 11141)
* Casse de caractères:                   Upper and lower case.
                                                            (line 10782)
* catcode:                               \makeatletter & \makeatother.
                                                            (line  6709)
* catégorie, code de caractère:          \makeatletter & \makeatother.
                                                            (line  6709)
* Centimètre:                            Units of length.   (line  7460)
* centrer du texte, déclaration pour:    \centering.        (line  3232)
* centrer du texte, environnement pour:  center.            (line  3183)
* centré, astérisque, dans le texte:     Text symbols.      (line 10918)
* centré, point, dans le texte:          Text symbols.      (line 10994)
* Changer la casse de caractères:        Upper and lower case.
                                                            (line 10782)
* chapeau, accent:                       Accents.           (line 11074)
* chapitre:                              Sectioning.        (line  2126)
* chapitre <1>:                          \chapter.          (line  2280)
* chapter:                               Sectioning.        (line  2126)
* chargement des paquetages supplémentaires: Additional packages.
                                                            (line   814)
* chevron double, guillemets:            Text symbols.      (line 10877)
* chevron droit, guillemets:             Text symbols.      (line 10877)
* chevron gauche, guillemets:            Text symbols.      (line 10877)
* chevron simple, guillemets:            Text symbols.      (line 10877)
* chiffres de revêtement:                Font styles.       (line  1374)
* chiffres de style ancien:              Font styles.       (line  1374)
* chiffres de style ancien,:             Font styles.       (line  1374)
* Cicero:                                Units of length.   (line  7469)
* circonflexe ASCII, dans le texte:      Text symbols.      (line 10912)
* circonflexe, accent:                   Accents.           (line 11074)
* circonflexe, diacritique:              Accents.           (line 11074)
* citation:                              quotation & quote. (line  4882)
* classe de document, commandes:         Class and package construction.
                                                            (line   829)
* classe de document, définition:        Starting and ending.
                                                            (line   397)
* classe et paquetage, commandes:        Class and package commands.
                                                            (line   908)
* classe et paquetage, différence:       Class and package construction.
                                                            (line   841)
* classe et paquetage, structure:        Class and package structure.
                                                            (line   857)
* classe, disposition du fichier:        Class and package structure.
                                                            (line   857)
* classe, fichier d’exemple:             Class and package structure.
                                                            (line   893)
* classe, options:                       Class and package structure.
                                                            (line   857)
* classe, options <1>:                   Class and package commands.
                                                            (line   974)
* classes de documents:                  Document classes.  (line   679)
* clause at, au sein d’une définition de police: \newfont.  (line  7120)
* clef de référence bibiliographique:    \bibitem.          (line  5742)
* CLI:                                   Command line interface.
                                                            (line 12430)
* code de catégorie de caractère:        \makeatletter & \makeatother.
                                                            (line  6709)
* code entré sur la ligne de commande:   Command line input.
                                                            (line 12566)
* code source, composer du:              verbatim.          (line  5997)
* color options du paquetage:            Color package options.
                                                            (line  9692)
* color, commandes du paquetage:         Commands for color.
                                                            (line  9787)
* coloré, texte:                         Colored text.      (line  9813)
* colorée, page:                         Colored pages.     (line  9921)
* colorées, boîtes:                      Colored boxes.     (line  9882)
* commande de longueur:                  \setlength.        (line  7500)
* commande longue:                       Class and package commands.
                                                            (line   930)
* commandes de fontes de bas niveau:     Low-level font commands.
                                                            (line  1480)
* commandes de fontes, de bas niveau:    Low-level font commands.
                                                            (line  1480)
* commandes de mise en page:             Layout.            (line  1631)
* commandes de rubricage,:               Sectioning.        (line  2126)
* commandes des classes de document:     Class and package construction.
                                                            (line   829)
* commandes exécutées depuis LaTeX:      \write18.          (line 12347)
* commandes fragiles:                    \protect.          (line  7140)
* commandes pour classe ou paquetage:    Class and package commands.
                                                            (line   908)
* commandes robustes:                    \protect.          (line  7140)
* commandes, définir de nouvelles:       \providecommand.   (line  6678)
* commandes, en définir de nouvelles:    \newcommand & \renewcommand.
                                                            (line  6573)
* commandes, paquetage graphics:         Commands for graphics.
                                                            (line 10270)
* commandes, syntaxe des:                LaTeX command syntax.
                                                            (line   573)
* commandes, variantes étoilées:         \@ifstar.          (line  6746)
* commencer une nouvelle page:           \newpage.          (line  6315)
* commencer une nouvelles page et débourrer les flottant: \clearpage & \cleardoublepage.
                                                            (line  6301)
* commencer une page de droite:          \clearpage & \cleardoublepage.
                                                            (line  6301)
* compteurs, a list of:                  Counters.          (line  7193)
* compteurs, définir de nouveaux:        \newcounter.       (line  6825)
* compteurs, obtenir la valeur d’un:     \value.            (line  7263)
* compteurs, réglage:                    \setcounter.       (line  7293)
* configuration du paquetage graphics:   Graphics package configuration.
                                                            (line 10062)
* contr’oblique, dans le texte:          Text symbols.      (line 10921)
* copie, liste des personnes en, dans une lettre: \cc.      (line 11828)
* Correction italique:                   \/.                (line  9159)
* couleur:                               Color.             (line  9675)
* couleur <1>:                           Define colors.     (line  9792)
* couleur <2>:                           Colored text.      (line  9813)
* couleur <3>:                           Colored boxes.     (line  9882)
* couleur <4>:                           Colored pages.     (line  9921)
* couleur, définir:                      Define colors.     (line  9792)
* coupure de mot, empécher:              \mbox & \makebox.  (line  9326)
* créer des images:                      picture.           (line  4444)
* créer des tableaux:                    table.             (line  5306)
* crésure, discrétionnaire:              \discretionary.    (line  6193)
* CTAN:                                  CTAN.              (line   648)
* cédille, diacritique:                  Accents.           (line 11094)
* césure, définir:                       \hyphenation.      (line  6259)
* césure, empécher:                      \mbox & \makebox.  (line  9326)
* césure, forcer:                        \- (hyphenation).  (line  6180)
* DANTE e.V.:                            CTAN.              (line   663)
* date d’aujourd’hui:                    \today.            (line 11225)
* defining new environnements:           \newenvironment & \renewenvironment.
                                                            (line  6875)
* demi-cadratin:                         Text symbols.      (line 10967)
* deux-tiers cadratin:                   Text symbols.      (line 11031)
* diacritique barre-souscrite:           Accents.           (line 11089)
* diacritique brève:                     Accents.           (line 11129)
* diacritique caron:                     Accents.           (line 11141)
* diacritique circonflexe:               Accents.           (line 11074)
* diacritique cédille:                   Accents.           (line 11094)
* diacritique double-brève-renversée:    Accents.           (line 11124)
* diacritique háček:                     Accents.           (line 11141)
* diacritique macron-souscrit:           Accents.           (line 11089)
* diacritique ogonek:                    Accents.           (line 11113)
* diacritique point suscrit:             Accents.           (line 11065)
* diacritique point-souscrit:            Accents.           (line 11098)
* diacritique rond en chef:              Accents.           (line 11118)
* diacritique tilde:                     Accents.           (line 11085)
* diacritique tirant susscrit:           Accents.           (line 11124)
* diacritique tréma hongrois:            Accents.           (line 11102)
* diacrtique accent aigu:                Accents.           (line 11060)
* diacrtique tréma:                      Accents.           (line 11055)
* diacrtitiques, signes:                 Accents.           (line 11042)
* différence entre classe et paquetage:  Class and package construction.
                                                            (line   841)
* dilatation verticale infinie:          \vfill.            (line  9260)
* dimen TeX de base:                     Lengths.           (line  7338)
* discrétionnaire, césure:               \discretionary.    (line  6193)
* dollar, signe:                         Text symbols.      (line 10958)
* double obèle, dans le texte:           Text symbols.      (line 10865)
* double renvoi, résolution:             Output files.      (line   449)
* double, barre verticale, dans le texte: Text symbols.     (line 10927)
* double, guillemet-apostrophe culbuté:  Text symbols.      (line 11000)
* double, guillemet-apostrophe de droite: Text symbols.     (line 11003)
* double, obèle, dans le texte:          Text symbols.      (line 10955)
* double-brève-renversée, diacritique:   Accents.           (line 11124)
* droit d’auteur, symbole:               Text symbols.      (line 10859)
* droit, guillemet double sur la ligne de base: Text symbols.
                                                            (line 11016)
* droit, guillemet simple sur la ligne de base: Text symbols.
                                                            (line 11016)
* droit, guillemet-apostrophe simple:    Text symbols.      (line 11012)
* droite, accolade, dans le texte:       Text symbols.      (line 10936)
* droite, flèche, dans le texte:         Text symbols.      (line 11022)
* droite, guillemet anglais simple:      Text symbols.      (line 10903)
* droite, guillemet-apostrophe simple:   Text symbols.      (line 10903)
* débourrer les flottant et commencer une page: \clearpage & \cleardoublepage.
                                                            (line  6301)
* début de document, crochet:            \AtBeginDocument.  (line  3363)
* début et fin:                          Starting and ending.
                                                            (line   388)
* déclaration en aval de référence:      Cross references.  (line  2925)
* déclarative, forme des commandes de contrôle de la taille de police: Font sizes.
                                                            (line  1449)
* déclarative, forme des commandes de style de police: Font styles.
                                                            (line  1292)
* définir de nouveaux théorèmes:         \newtheorem.       (line  6986)
* définir de nouvelles polices:          \newfont.          (line  7101)
* définir une couleur:                   Define colors.     (line  9792)
* définir une nouvelle commande:         \newcommand & \renewcommand.
                                                            (line  6573)
* définir une nouvelle commande <1>:     \providecommand.   (line  6678)
* définitions:                           Definitions.       (line  6567)
* délimiteur nul:                        Math miscellany.   (line  8866)
* e dans l’a:                            Additional Latin letters.
                                                            (line 11155)
* e dans l’o:                            Additional Latin letters.
                                                            (line 11191)
* e-TeX:                                 TeX engines.       (line   490)
* em:                                    Units of length.   (line  7474)
* en-tête et pied de page en cours:      Page layout parameters.
                                                            (line  1773)
* en-tête, des paramètres pour:          Page layout parameters.
                                                            (line  1773)
* encerclée, lettre, dans le texte:      Text symbols.      (line 10942)
* englobante, boîte:                     \includegraphics.  (line 10398)
* entré, code sur la ligne de commande:  Command line input.
                                                            (line 12566)
* entrée Unicode, native:                TeX engines.       (line   479)
* entrée/sortie console:                 Terminal input/output.
                                                            (line 12003)
* environments:                          Environments.      (line  3044)
* environnement:                         Starting and ending.
                                                            (line   407)
* environnement simili-théorème:         \newtheorem.       (line  6986)
* environnements, defining:              \newenvironment & \renewenvironment.
                                                            (line  6875)
* EPS, fichiers:                         Graphics package configuration.
                                                            (line 10062)
* EPS, fichiers <1>:                     \includegraphics.  (line 10276)
* errorstopmode:                         Command line options.
                                                            (line 12495)
* espace vertical:                       \addvspace.        (line  9211)
* espace vertical avant les paragraphes: \parindent & \parskip.
                                                            (line  7605)
* espace vertical, insérer:              \addvspace.        (line  9211)
* espace verticale:                      \vspace.           (line  9286)
* espace visible:                        \verb.             (line  6054)
* espace visible, symbole, dans le texte: Text symbols.     (line 11037)
* espacement au sein du mode mathématique: Spacing in math mode.
                                                            (line  8790)
* espacement inter-phrase:               \frenchspacing.    (line  9138)
* espaces:                               Spaces.            (line  9043)
* eszet lettre allemande:                Additional Latin letters.
                                                            (line 11195)
* eth islandais:                         Additional Latin letters.
                                                            (line 11159)
* eth, lettre islandaise:                Additional Latin letters.
                                                            (line 11159)
* euro, symbole:                         Text symbols.      (line 10971)
* exploitation, information système de:  \write18.          (line 12420)
* exposant:                              Subscripts & superscripts.
                                                            (line  7703)
* extension, structure:                  Class and package structure.
                                                            (line   857)
* externes, commandes:                   \write18.          (line 12347)
* fabriquer une boîte:                   \mbox & \makebox.  (line  9326)
* fabriquer une page de titre:           titlepage.         (line  5956)
* Faire des paragraphes:                 Making paragraphs. (line  7568)
* famille de polices:                    Low-level font commands.
                                                            (line  1496)
* fermant, guillemet anglais simple:     Text symbols.      (line 10903)
* fermant, guillemet-apostrophe simple:  Text symbols.      (line 10903)
* fichier auxiliaire:                    Output files.      (line   449)
* fichier d’entrée:                      Splitting the input.
                                                            (line 11248)
* fichier de transcription:              Output files.      (line   443)
* fichier externe, écrire:               filecontents.      (line  3578)
* fichier format TeX:                    TeX engines.       (line   479)
* fichier journal:                       Output files.      (line   443)
* fichier racine:                        Splitting the input.
                                                            (line 11254)
* fichier, lecture d’un:                 \read.             (line 12075)
* fichiers source, rendre autonomes:     filecontents.      (line  3615)
* figures, insertion:                    figure.            (line  3520)
* figures, notes en bas de page au sein des: minipage.      (line  4386)
* file, closing:                         \openin & \openout.
                                                            (line 12006)
* file, opening:                         \openin & \openout.
                                                            (line 12006)
* fin d’une lettre:                      \closing.          (line 11843)
* fin document, crochet:                 \AtEndDocument.    (line  3377)
* fin et début:                          Starting and ending.
                                                            (line   388)
* flèche droite, dans le texte:          Text symbols.      (line 11022)
* flèche gauche, left, dans le texte:    Text symbols.      (line 10987)
* fonctions mathématiques:               Math functions.    (line  8630)
* force, option de filecontents:         filecontents.      (line  3603)
* format LaTeX, fichier (.fmt):          TeX engines.       (line   479)
* format TeX, fichier (.fmt):            TeX engines.       (line   479)
* forme déclarative des commandes de contrôle de la taille de police: Font sizes.
                                                            (line  1449)
* forme déclarative des commandes de style de police: Font styles.
                                                            (line  1292)
* forme en * de commandes de rubricage:  Sectioning.        (line  2152)
* forme en * des commandes d’environnement: \newenvironment & \renewenvironment.
                                                            (line  6885)
* forme en *, définir de nouvelles commandes: \newcommand & \renewcommand.
                                                            (line  6586)
* forme par environnement des commandes de contrôle de la taille de police: Font sizes.
                                                            (line  1463)
* forme étoilée de commandes de rubricage: Sectioning.      (line  2152)
* forme étoilée des commandes d’environnement: \newenvironment & \renewenvironment.
                                                            (line  6885)
* forme étoilée, définir de nouvelles commandes: \newcommand & \renewcommand.
                                                            (line  6586)
* formules en ligne:                     math.              (line  4262)
* formules mathématiques:                Math formulas.     (line  7665)
* formules, environnement pour:          equation.          (line  3500)
* formules, math:                        Math formulas.     (line  7665)
* fragile, commande:                     \protect.          (line  7140)
* français, guillemets:                  Text symbols.      (line 10877)
* féminin, symbole ordinal:              Text symbols.      (line 10991)
* gauche, accolade, dans le texte:       Text symbols.      (line 10933)
* gauche, flèche, dans le texte:         Text symbols.      (line 10987)
* gauche, guillemet-apostrophe simple de: Text symbols.     (line 10888)
* globales, options:                     Additional packages.
                                                            (line   822)
* glossaires:                            Glossaries.        (line 11659)
* glue TeX de base:                      Lengths.           (line  7338)
* graisses de police:                    Low-level font commands.
                                                            (line  1535)
* Grand rond, symbole, dans le texte:    Text symbols.      (line 10930)
* graphics:                              Graphics package configuration.
                                                            (line 10062)
* graphics, commandes du paquetage:      Commands for graphics.
                                                            (line 10270)
* graphics, options du paquetage:        Graphics package options.
                                                            (line  9985)
* graphics, paquetage:                   Graphics.          (line  9943)
* graphics, paquetage <1>:               Graphics package configuration.
                                                            (line 10062)
* graphics, paquetage <2>:               \includegraphics.  (line 10276)
* graphics, resizing:                    \scalebox.         (line 10683)
* graphics, resizing <1>:                \resizebox.        (line 10711)
* graphics, scaling:                     \scalebox.         (line 10683)
* graphics, scaling <1>:                 \resizebox.        (line 10711)
* graphiques:                            Graphics.          (line  9943)
* graphiques <1>:                        \includegraphics.  (line 10276)
* graphiques, paquetages:                \line.             (line  4715)
* gras:                                  Font styles.       (line  1392)
* gras machine à écrire, éviter:         description.       (line  3287)
* gras tapuscrit, éviter:                description.       (line  3287)
* grave accent:                          Accents.           (line 11079)
* guillemet droit double sur la ligne de base: Text symbols.
                                                            (line 11016)
* guillemet droit simple sur la ligne de base: Text symbols.
                                                            (line 11016)
* guillemet-apostrophe de droite double: Text symbols.      (line 11003)
* guillemet-apostrophe double culbuté:   Text symbols.      (line 11000)
* guillemet-apostrophe simple:           Text symbols.      (line 11009)
* guillemet-apostrophe simple culbuté:   Text symbols.      (line 11006)
* guillemet-apostrophe simple droit:     Text symbols.      (line 11012)
* guillemet-virgule inférieur double:    Text symbols.      (line 10900)
* guillemet-virgule inférieur simple:    Text symbols.      (line 10900)
* guillemets double:                     Text symbols.      (line 10877)
* guillemets français:                   Text symbols.      (line 10877)
* guillemets simple:                     Text symbols.      (line 10877)
* guillemets-virgule inférieurs, simple et double: Text symbols.
                                                            (line 10900)
* i sans point:                          Accents.           (line 11106)
* i sans point en math:                  Math accents.      (line  8767)
* Icelandic thorn:                       Additional Latin letters.
                                                            (line 11199)
* ici, placer les flottants:             Floats.            (line  2018)
* images, créer:                         picture.           (line  4444)
* imbrication de \include non autorisée: \include & \includeonly.
                                                            (line 11436)
* implémentations de TeX:                TeX engines.       (line   479)
* importer des graphiques:               \includegraphics.  (line 10276)
* inclure des graphiques:                \includegraphics.  (line 10276)
* index:                                 Indexes.           (line 11674)
* indice inférieur:                      Subscripts & superscripts.
                                                            (line  7703)
* indice supérieur:                      Subscripts & superscripts.
                                                            (line  7703)
* inférieur à, symbole dans le texte:    Text symbols.      (line 10984)
* inférieur, guillemet-virgule double:   Text symbols.      (line 10900)
* inférieur, guillemet-virgule simple:   Text symbols.      (line 10900)
* insérer des figures:                   figure.            (line  3520)
* interligne double:                     Low-level font commands.
                                                            (line  1599)
* interpréteur de commandes du système d’exploitation, accès à: \write18.
                                                            (line 12347)
* invite *:                              Recovering from errors.
                                                            (line 12747)
* italique:                              Font styles.       (line  1401)
* j sans point:                          Accents.           (line 11109)
* j sans point en math:                  Math accents.      (line  8770)
* jobname:                               Command line options.
                                                            (line 12514)
* journal, écrire vers le fichier:       \write.            (line 12167)
* JPEG, fichiers:                        Graphics package configuration.
                                                            (line 10062)
* JPEG, fichiers <1>:                    \includegraphics.  (line 10276)
* JPG, fichiers:                         Graphics package configuration.
                                                            (line 10062)
* JPG, fichiers <1>:                     \includegraphics.  (line 10276)
* jsutifier à gauche du texte, environnement pour: flushleft.
                                                            (line  3645)
* justification, drapeau droit:          \raggedright.      (line  3676)
* justification, drapeau gauche:         \raggedleft.       (line  3737)
* justifier le texte à droite:           \raggedleft.       (line  3737)
* justifier à droite, environnement pour: flushright.       (line  3714)
* justifié à gauche du texte:            \raggedright.      (line  3676)
* Knuth, Donald E.:                      Overview.          (line   359)
* l polonais:                            Additional Latin letters.
                                                            (line 11177)
* L’équipe de projet LaTeX:              About this document.
                                                            (line   318)
* Lamport TeX:                           Overview.          (line   380)
* Lamport, Leslie:                       Overview.          (line   359)
* Largeurs de police:                    Low-level font commands.
                                                            (line  1548)
* LaTeX aperçu:                          Overview.          (line   359)
* LaTeX ou LaTeX2e, que choisir ?:       About this document.
                                                            (line   314)
* LaTeX, format, fichier (.fmt):         TeX engines.       (line   479)
* LaTeX, logo:                           Text symbols.      (line 10868)
* LaTeX2e logo:                          Text symbols.      (line 10871)
* lecture d’un fichier:                  \read.             (line 12075)
* Lettre grecques:                       Math symbols.      (line  7738)
* lettre ij, Holandais:                  Additional Latin letters.
                                                            (line 11172)
* lettres calligraphiques pour les mathématiques: Font styles.
                                                            (line  1395)
* lettres de script pour les mathématiques: Font styles.    (line  1395)
* lettres latines non diacritées:        Additional Latin letters.
                                                            (line 11146)
* lettres, commencer:                    \opening.          (line 11935)
* lettres, salutation:                   \closing.          (line 11843)
* lettres, écrire des:                   Letters.           (line 11717)
* ligne de commande:                     Command line interface.
                                                            (line 12430)
* ligne tabulée, tabbing:                tabbing.           (line  4993)
* lignes dans des tableaux:              tabular.           (line  5368)
* lire un fichier:                       \read.             (line 12075)
* liste des figures, fichier:            Output files.      (line   461)
* liste des personnes en copie, dans une lettre: \cc.       (line 11828)
* liste des tableaux, fichier:           Output files.      (line   461)
* listes d’articles:                     itemize.           (line  3768)
* listes d’articles, générique:          list.              (line  3873)
* listes de description, créer:          description.       (line  3256)
* listes non ordonnées:                  itemize.           (line  3768)
* listes à puces:                        itemize.           (line  3768)
* listes étiquetées, créer:              description.       (line  3256)
* lists of items, numbered:              enumerate.         (line  3394)
* livre, annexes:                        \frontmatter & \mainmatter & \backmatter.
                                                            (line  2654)
* livre, pièces postliminaires:          \frontmatter & \mainmatter & \backmatter.
                                                            (line  2654)
* livre, pièces principales:             \frontmatter & \mainmatter & \backmatter.
                                                            (line  2654)
* livre, pièces préliminaires:           \frontmatter & \mainmatter & \backmatter.
                                                            (line  2654)
* livre, symbole:                        Text symbols.      (line 10896)
* locale, information, du système:       \write18.          (line 12420)
* logo LaTeX:                            Text symbols.      (line 10868)
* logo LaTeX2e:                          Text symbols.      (line 10871)
* logo TeX:                              Text symbols.      (line 10909)
* longueur, ajouter à une:               \addtolength.      (line  7507)
* longueur, commande de:                 \setlength.        (line  7500)
* longueur, régler une:                  \setlength.        (line  7495)
* longueurs prédéfinies:                 Predefined lengths.
                                                            (line  7548)
* longueurs élastiques, définir de nouvelles: \newlength.   (line  6842)
* longueurs, allouer de nouvelles:       \newlength.        (line  6842)
* longueurs, définir et utiliser:        Lengths.           (line  7335)
* LuaTeX:                                TeX engines.       (line   509)
* LuaTeX, 256 flux de sortie dans:       \write.            (line 12180)
* m, largeur d’un:                       Units of length.   (line  7474)
* macron, diacritique:                   Accents.           (line 11069)
* macron-souscrit, diacritique:          Accents.           (line 11089)
* Madsen, Lars:                          eqnarray.          (line  3461)
* makeindex, programme:                  Indexes.           (line 11692)
* marge gauche:                          Page layout parameters.
                                                            (line  1835)
* marge gauche nominale:                 Page layout parameters.
                                                            (line  1838)
* marge supérieure:                      Page layout parameters.
                                                            (line  1932)
* marge supérieure nominale:             Page layout parameters.
                                                            (line  1935)
* marque de fabrique, symbole:           Text symbols.      (line 11028)
* marque déposée, symbole:               Text symbols.      (line 11019)
* masculin, symbole ordinal:             Text symbols.      (line 10991)
* math, accent aigu:                     Math accents.      (line  8743)
* math, accent barre suscrite:           Math accents.      (line  8746)
* math, accent brève:                    Math accents.      (line  8749)
* math, accent grave:                    Math accents.      (line  8761)
* math, accent macron:                   Math accents.      (line  8746)
* math, accent point suscrit:            Math accents.      (line  8758)
* math, accent rond-en-chef:             Math accents.      (line  8773)
* math, accents:                         Math accents.      (line  8738)
* math, fonctions:                       Math functions.    (line  8630)
* math, miscellanées:                    Math miscellany.   (line  8834)
* mathématiques gras:                    Font styles.       (line  1370)
* mathématiques, gras:                   Font styles.       (line  1370)
* matières, fichier:                     Output files.      (line   461)
* Millimètre:                            Units of length.   (line  7463)
* minipage, créer une:                   minipage.          (line  4275)
* mirrors of CTAN:                       CTAN.              (line   669)
* miscellanées en math:                  Math miscellany.   (line  8834)
* mise en page, les paramètres de:       Page layout parameters.
                                                            (line  1773)
* mode gauche-à-droite (left-to-right):  Modes.             (line  8923)
* mode LR:                               Modes.             (line  8923)
* mode math:                             Modes.             (line  8923)
* mode mathématique, entrer:             Math formulas.     (line  7665)
* mode mathématique, espacement:         Spacing in math mode.
                                                            (line  8790)
* mode paragraphe:                       Modes.             (line  8923)
* mode paragraphe <1>:                   \parbox.           (line  9449)
* modes:                                 Modes.             (line  8923)
* modèle de document:                    Document templates.
                                                            (line 12769)
* modèles de couleur:                    Color models.      (line  9734)
* monnaie, dollar:                       Text symbols.      (line 10958)
* monnaie, euro:                         Text symbols.      (line 10971)
* moteur pdfTeX:                         TeX engines.       (line   490)
* moteurs, TeX:                          TeX engines.       (line   479)
* motif courant de taquets de tabulation, tabbing: tabbing. (line  4998)
* mpfootnote, compteur:                  \footnote.         (line  6437)
* mu, unité mathématique:                Units of length.   (line  7487)
* multiplication discrétionnaire:        Math miscellany.   (line  8835)
* noheader, option de filecontents:      filecontents.      (line  3606)
* nom de fichier de la tâche courante:   Command line options.
                                                            (line 12514)
* nonstopmode:                           Command line options.
                                                            (line 12495)
* nosearch, option de filecontents:      filecontents.      (line  3609)
* note en bas de page, créer:            Footnotes.         (line  6384)
* note en bas de page, symboles au lieu de numéros: \footnote.
                                                            (line  6421)
* notes dans la marge:                   Marginal notes.    (line  7612)
* notes en bas de page au sein des figures: minipage.       (line  4386)
* Notes en bas de page, au sein d’une minipage: \footnote.  (line  6437)
* notes en bas de page, dans les titres de rubrique: Footnotes in section headings.
                                                            (line  6527)
* Notes en bas de page, dans un tableau: Footnotes in a table.
                                                            (line  6479)
* notes en bas de page, paramètres:      Footnote parameters.
                                                            (line  6550)
* Notes en marge:                        Marginal notes.    (line  7612)
* nouvelle commande, définition:         Class and package commands.
                                                            (line  1006)
* nouvelle commande, vérification:       Class and package commands.
                                                            (line   927)
* nouvelle commandes, définir:           \newcommand & \renewcommand.
                                                            (line  6573)
* nouvelle ligne, commencer une:         \\.                (line  6114)
* nouvelle ligne, commencer une (mode paragraphe): \newline.
                                                            (line  6157)
* nouvelle page, commencer:              \newpage.          (line  6315)
* nouvelles classes, commandes:          Class and package construction.
                                                            (line   829)
* nouvelles commandes, définir:          \providecommand.   (line  6678)
* numéro d’équation, omettre:            eqnarray.          (line  3487)
* numéro d’équation, renvoi:             \ref.              (line  3021)
* numéro de figure, renvoi:              \ref.              (line  3021)
* numéro de note en bas de page, renvoi: \ref.              (line  3021)
* numéro de page, renvoi:                \pageref.          (line  2999)
* numéro de rubrique, renvoi:            \ref.              (line  3021)
* numéros de rubrique, composition:      Sectioning.        (line  2195)
* numérotation de page, style:           \pagenumbering.    (line  9007)
* o e liés:                              Additional Latin letters.
                                                            (line 11191)
* o, e dans l’o:                         Additional Latin letters.
                                                            (line 11191)
* obèle double, dans le texte:           Text symbols.      (line 10955)
* obèle, dans le texte:                  Text symbols.      (line 10862)
* obèle, dans le texte <1>:              Text symbols.      (line 10952)
* officieuse, nature de ce document:     About this document.
                                                            (line   318)
* ogonek, diacritique:                   Accents.           (line 11113)
* open a file:                           \openin & \openout.
                                                            (line 12006)
* option stable du paquetage footmisc:   Footnotes in section headings.
                                                            (line  6531)
* options de classe:                     Document class options.
                                                            (line   721)
* options de classe <1>:                 Class and package commands.
                                                            (line   974)
* options de classe de document:         Document class options.
                                                            (line   721)
* options de paquetage:                  Class and package commands.
                                                            (line   974)
* options globales:                      Document class options.
                                                            (line   721)
* options globales <1>:                  Additional packages.
                                                            (line   822)
* options passée à la ligne de commande: Command line options.
                                                            (line 12476)
* options pour classe de document:       Class and package structure.
                                                            (line   857)
* options pour paquetage:                Class and package structure.
                                                            (line   857)
* options, classe de document:           Document class options.
                                                            (line   721)
* options, paquetage color:              Color package options.
                                                            (line  9692)
* options, paquetage graphics:           Graphics package options.
                                                            (line  9985)
* Ordinaux espagnols, féminin et masculin: Text symbols.    (line 10991)
* Ordinaux, féminin et masculin:         Text symbols.      (line 10991)
* oslash:                                Additional Latin letters.
                                                            (line 11187)
* ouvrant, , guillemet-apostrophe simple: Text symbols.     (line 10888)
* overwrite, option de filecontents:     filecontents.      (line  3603)
* page colorée:                          Colored pages.     (line  9921)
* page de flottants:                     Floats.            (line  2024)
* page styles:                           Page styles.       (line  8998)
* page, paramètres de mise en page:      Page layout parameters.
                                                            (line  1773)
* pages de titre, création:              titlepage.         (line  5956)
* pages, saut:                           Page breaking.     (line  6293)
* paquet de macro, LaTeX en tant que:    Overview.          (line   365)
* paquetage, disposition du fichier:     Class and package structure.
                                                            (line   857)
* paquetage, options:                    Class and package structure.
                                                            (line   857)
* paquetage, options <1>:                Class and package commands.
                                                            (line   974)
* paquetages, le chargement:             Additional packages.
                                                            (line   814)
* paragraph:                             Sectioning.        (line  2126)
* paragraph <1>:                         \subsubsection & \paragraph & \subparagraph.
                                                            (line  2542)
* paragraphe:                            Sectioning.        (line  2126)
* paragraphe, dans une boîte:            \parbox.           (line  9442)
* paragraphe, mode:                      \parbox.           (line  9442)
* paragraphe, mode <1>:                  \parbox.           (line  9449)
* paragraphe, symbole:                   Text symbols.      (line 10892)
* paragraphes:                           Making paragraphs. (line  7568)
* paragraphes, renfoncement au sein d’une minipage: minipage.
                                                            (line  4381)
* paramètre positionnel:                 \newcommand & \renewcommand.
                                                            (line  6614)
* paramètre positionnel <1>:             \newenvironment & \renewenvironment.
                                                            (line  6919)
* paramètres, la mise en page:           Page layout parameters.
                                                            (line  1773)
* paramètres, pour notes en bas de page: Footnote parameters.
                                                            (line  6550)
* part:                                  Sectioning.        (line  2126)
* part <1>:                              \part.             (line  2222)
* partie:                                Sectioning.        (line  2126)
* partitionner le fichier d’entrée:      Splitting the input.
                                                            (line 11248)
* parution, candidats:                   TeX engines.       (line   550)
* pas, registre de, TeX de base:         \newlength.        (line  6842)
* patron (simple), article:              article template.  (line 12807)
* patron book:                           Larger book template.
                                                            (line 12854)
* patron de document:                    Document templates.
                                                            (line 12769)
* patron, beamer:                        beamer template.   (line 12776)
* patron, book:                          book template.     (line 12830)
* PDF, fichiers graphiques:              Graphics package configuration.
                                                            (line 10062)
* PDF, fichiers graphiques <1>:          \includegraphics.  (line 10276)
* pdfTeX:                                Output files.      (line   434)
* pdfTeX, moteur:                        TeX engines.       (line   490)
* pica:                                  Units of length.   (line  7449)
* pict2e, paquetage:                     \line.             (line  4715)
* Pied-de-mouche:                        Text symbols.      (line 10892)
* pièces jointes, liste:                 \encl.             (line 11857)
* pièces postliminaires d’un livre:      \frontmatter & \mainmatter & \backmatter.
                                                            (line  2654)
* pièces principales d’un livre:         \frontmatter & \mainmatter & \backmatter.
                                                            (line  2654)
* pièces préliminaires d’un livre:       \frontmatter & \mainmatter & \backmatter.
                                                            (line  2654)
* placement des flottants:               Floats.            (line  1995)
* PNG, fichiers:                         Graphics package configuration.
                                                            (line 10062)
* PNG, fichiers <1>:                     \includegraphics.  (line 10276)
* Point:                                 Units of length.   (line  7445)
* point centré, dans le texte:           Text symbols.      (line 10994)
* point d’exclamation culbuté:           Text symbols.      (line 10978)
* point d’interrogation culbuté:         Text symbols.      (line 10997)
* point Didot:                           Units of length.   (line  7466)
* point en chef, diacritique:            Accents.           (line 11065)
* Point proportionné (Scaled point):     Units of length.   (line  7472)
* point suscrit, diacritique:            Accents.           (line 11065)
* points de suspension:                  Text symbols.      (line 10883)
* police de largeur fixe:                Font styles.       (line  1416)
* police inclinée:                       Font styles.       (line  1413)
* police machine à écrire:               Font styles.       (line  1416)
* police oblique:                        Font styles.       (line  1413)
* police petites capitales:              Font styles.       (line  1407)
* police romaine:                        Font styles.       (line  1404)
* police tapuscrit:                      Font styles.       (line  1416)
* police, symboles par leur numéro:      Symbols by font position.
                                                            (line 10835)
* polices de caractères:                 Fonts.             (line  1283)
* polices OpenType:                      TeX engines.       (line   479)
* polices TrueType:                      TeX engines.       (line   479)
* polices, catalogue:                    Low-level font commands.
                                                            (line  1496)
* polices, commandes pour déclarer de nouvelles: \newfont.  (line  7101)
* position dans picture:                 picture.           (line  4506)
* postscriptum, dans une lettre:         \ps.               (line 11948)
* poésie, un environnement pour la:      verse.             (line  6082)
* programmes informatiques, composer du: verbatim.          (line  5997)
* prononciation:                         Overview.          (line   380)
* préambule, définition:                 Starting and ending.
                                                            (line   403)
* prédéfinies, longueurs:                Predefined lengths.
                                                            (line  7548)
* puce, dans le texte:                   Text symbols.      (line 10939)
* quad:                                  Spacing in math mode.
                                                            (line  8817)
* racine, fichier:                       Splitting the input.
                                                            (line 11254)
* rapports d’anomalies:                  About this document.
                                                            (line   322)
* rapports de bogues:                    About this document.
                                                            (line   322)
* redefining environnements:             \newenvironment & \renewenvironment.
                                                            (line  6875)
* remarks in the marge:                  Marginal notes.    (line  7612)
* renfoncement des paragraphes dans du texte cité: quotation & quote.
                                                            (line  4882)
* renfoncement des paragraphes dans un texte cité, omettre: quotation & quote.
                                                            (line  4882)
* renfoncement des paragraphes, au sein d’une minipage: minipage.
                                                            (line  4381)
* renfoncement, forcer:                  \indent.           (line  7577)
* renfoncement, forcer <1>:              \indent.           (line  7578)
* renfoncement, supprimer:               \noindent.         (line  7589)
* renvoi avec numéro de page:            \pageref.          (line  2999)
* renvoi en aval, résolution:            Output files.      (line   449)
* renvoi, résolution:                    Output files.      (line   449)
* renvoi, symbolique:                    \ref.              (line  3021)
* renvois:                               Cross references.  (line  2899)
* resizing:                              \scalebox.         (line 10683)
* resizing <1>:                          \resizebox.        (line 10711)
* ressort, registre de, TeX de base:     \newlength.        (line  6842)
* restreint, accès interpréteur de commande du système d’exploitation: \write18.
                                                            (line 12400)
* restreint, accès shell:                \write18.          (line 12400)
* rigides, longueurs:                    Lengths.           (line  7338)
* robuste, commande:                     \protect.          (line  7140)
* rond en chef, diacritique:             Accents.           (line 11118)
* rond, grand symbole, dans le texte:    Text symbols.      (line 10930)
* rotating graphics:                     \rotatebox.        (line 10617)
* rotating text:                         \rotatebox.        (line 10617)
* rotation:                              \rotatebox.        (line 10617)
* rubricage, commandes:                  Sectioning.        (line  2126)
* rubricage, part:                       \part.             (line  2222)
* référence bibiliographique, clef:      \bibitem.          (line  5742)
* référence déclarée en aval:            Cross references.  (line  2925)
* réglage de compteurs:                  \setcounter.       (line  7293)
* répertoire de sortie pour tous les fichiers externes: Command line options.
                                                            (line 12519)
* répertoire, listage, du système:       \write18.          (line 12420)
* répertoires parents, impossible d’écrire vers: \write and security.
                                                            (line 12271)
* réservés, caractères:                  Reserved characters.
                                                            (line 10747)
* résumé:                                abstract.          (line  3054)
* s long:                                Additional Latin letters.
                                                            (line 11195)
* sans serif:                            Font styles.       (line  1410)
* saut de ligne:                         \newline.          (line  6157)
* saut de ligne, dans \write:            \write.            (line 12240)
* saut de ligne, forcer:                 \\.                (line  6114)
* saut de ligne, sortie semblable à l’entrée pour le: \obeycr & \restorecr.
                                                            (line  6148)
* saut de page:                          Page breaking.     (line  6293)
* saut de page, empécher:                \pagebreak & \nopagebreak.
                                                            (line  6366)
* saut de page, forcer:                  \pagebreak & \nopagebreak.
                                                            (line  6366)
* saut à la ligne:                       Line breaking.     (line  6101)
* sauter à la ligne:                     Line breaking.     (line  6101)
* sauts de ligne, empêcher:              \linebreak & \nolinebreak.
                                                            (line  6275)
* sauts de ligne, forcer:                \linebreak & \nolinebreak.
                                                            (line  6275)
* scaling:                               \scalebox.         (line 10683)
* scaling <1>:                           \resizebox.        (line 10711)
* scrollmode:                            Command line options.
                                                            (line 12495)
* section:                               Sectioning.        (line  2126)
* section <1>:                           \section.          (line  2383)
* section, redéfinir:                    \@startsection.    (line  2694)
* section, symbole:                      Text symbols.      (line 10906)
* securité et \write:                    \write and security.
                                                            (line 12256)
* shell escape:                          Command line options.
                                                            (line 12533)
* signes diacrtitiques:                  Accents.           (line 11042)
* simple droit, guillemet-apostrophe:    Text symbols.      (line 11012)
* simple, guillemet-apostrophe:          Text symbols.      (line 11009)
* simple, guillemet-apostrophe culbuté:  Text symbols.      (line 11006)
* simuler du texte tapuscrit:            verbatim.          (line  5997)
* skip TeX de base:                      Lengths.           (line  7338)
* sortie à deux colonnes:                \twocolumn.        (line  1642)
* sortie à une colonne:                  \onecolumn.        (line  1636)
* sortie, pour tous les fichiers externes, répertoire de: Command line options.
                                                            (line 12519)
* souligné, dans le texte:               Text symbols.      (line 11034)
* sources autonomes:                     filecontents.      (line  3615)
* sous-paragraphe:                       Sectioning.        (line  2126)
* sous-section:                          Sectioning.        (line  2126)
* sous-sous-section:                     Sectioning.        (line  2126)
* speciaux, caractères:                  Additional Latin letters.
                                                            (line 11146)
* spéciaux, caractères:                  Reserved characters.
                                                            (line 10747)
* spécificateur, placement de flottants: Floats.            (line  1995)
* stable, option du paquetage footmisc:  Footnotes in section headings.
                                                            (line  6531)
* sterling, symbole:                     Text symbols.      (line 10896)
* style de numérotation de page:         \pagenumbering.    (line  9007)
* styles de police:                      Font styles.       (line  1290)
* styles de texte:                       Font styles.       (line  1290)
* styles typographiques:                 Font styles.       (line  1290)
* styles, page:                          Page styles.       (line  8998)
* subparagraph:                          Sectioning.        (line  2126)
* subparagraph <1>:                      \subsubsection & \paragraph & \subparagraph.
                                                            (line  2542)
* subsection:                            Sectioning.        (line  2126)
* subsection <1>:                        \subsection.       (line  2470)
* subsubsection:                         Sectioning.        (line  2126)
* subsubsection <1>:                     \subsubsection & \paragraph & \subparagraph.
                                                            (line  2542)
* supérieur à, symbole dans le texte:    Text symbols.      (line 10981)
* suspension, points de:                 Text symbols.      (line 10883)
* symbole de multiplication, saut de ligne discretionnaire: Math miscellany.
                                                            (line  8835)
* symbole droit d’auteur:                Text symbols.      (line 10859)
* symbole marque de fabrique:            Text symbols.      (line 11028)
* symbole marque déposée:                Text symbols.      (line 11019)
* symbole puce:                          Math symbols.      (line  7849)
* symbole vecteur en math:               Math accents.      (line  8779)
* symboles d’une police, par leur numéro: Symbols by font position.
                                                            (line 10835)
* symboles mathématiques:                Math symbols.      (line  7738)
* symboles texte:                        Text symbols.      (line 10849)
* symbols, mathématiques:                Math symbols.      (line  7738)
* système, commandes exécutées depuis LaTeX: \write18.      (line 12347)
* système, information:                  \write18.          (line 12420)
* séries de polices:                     Low-level font commands.
                                                            (line  1524)
* table des matière, création:           Table of contents etc..
                                                            (line 11478)
* table des matières, ajouter manuellement un article: \addcontentsline.
                                                            (line 11581)
* table des matières, fichier:           Output files.      (line   461)
* table des matières, impression des numéros de rubrique: Sectioning.
                                                            (line  2209)
* table des matières, éviter les notes en bas de page: Footnotes in section headings.
                                                            (line  6527)
* tableaux mathématiques:                array.             (line  3102)
* tableaux, créer:                       table.             (line  5306)
* taille de conception, au sein d’une définition de police: \newfont.
                                                            (line  7120)
* tailles de police:                     Font sizes.        (line  1430)
* tailles de texte:                      Font sizes.        (line  1430)
* tailles des polices de caractères:     Font sizes.        (line  1430)
* taquet courant, tabbing:               tabbing.           (line  5006)
* taquet de début de ligne courant, tabbing: tabbing.       (line  5012)
* taquets de tabulation, utiliser:       tabbing.           (line  4920)
* terminal, écrire vers le:              \write.            (line 12167)
* TeX, format:                           TeX engines.       (line   479)
* TeX, logo:                             Text symbols.      (line 10909)
* text, resizing:                        \scalebox.         (line 10683)
* text, resizing <1>:                    \resizebox.        (line 10711)
* text, scaling:                         \scalebox.         (line 10683)
* text, scaling <1>:                     \resizebox.        (line 10711)
* texte cité avec renfoncement des paragraphes, affichage: quotation & quote.
                                                            (line  4882)
* texte cité sans renfoncement des paragraphes, affichage: quotation & quote.
                                                            (line  4882)
* texte drapeau droit:                   \raggedright.      (line  3676)
* texte drapeau droit, environnement pour: flushleft.       (line  3645)
* texte drapeau gauche:                  \raggedleft.       (line  3737)
* texte drapeau gauche, environnement pour: flushright.     (line  3714)
* texte en couleur:                      Colored text.      (line  9813)
* texte fer à gauche:                    \raggedright.      (line  3676)
* texte fer à gauche, environnement pour: flushleft.        (line  3645)
* texte ferré à gauche:                  \raggedright.      (line  3676)
* texte ferré à gauche, environnement pour: flushleft.      (line  3645)
* texte sur plusieurs colonnes:          \twocolumn.        (line  1642)
* texte tapuscrit, simulation de:        verbatim.          (line  5997)
* texte verbatim:                        verbatim.          (line  5997)
* texte verbatim, en-ligne:              \verb.             (line  6043)
* thickspace:                            Spacing in math mode.
                                                            (line  8800)
* thinspace:                             Spacing in math mode.
                                                            (line  8809)
* thorn, lettre islandaise:              Additional Latin letters.
                                                            (line 11199)
* théorème, environnement simili-:       \newtheorem.       (line  6986)
* théorèmes, composition des:            theorem.           (line  5926)
* théorèmes, définition:                 \newtheorem.       (line  6986)
* tilde ASCII, dans le texte:            Text symbols.      (line 10915)
* tilde, diacritique:                    Accents.           (line 11085)
* tirant suscrit, diacritique:           Accents.           (line 11124)
* tiret bas, dans le texte:              Text symbols.      (line 11034)
* trois-quarts, cadratin:                Text symbols.      (line 11025)
* tréma hongrois, accent:                Accents.           (line 11102)
* tréma hongrois, diacritique:           Accents.           (line 11102)
* TS1, codage:                           Text symbols.      (line 10849)
* unités, de longueur:                   Units of length.   (line  7441)
* UTF-8:                                 TeX engines.       (line   479)
* utilisation de BibTeX:                 Using BibTeX.      (line  5864)
* variables, a list of:                  Counters.          (line  7193)
* verticale infinie, dilatation:         \vfill.            (line  9260)
* verticale, barre dans le texte:        Text symbols.      (line 10924)
* verticale, espace:                     \vspace.           (line  9286)
* visible, symbole espace, dans le texte: Text symbols.     (line 11037)
* Voir et Voir aussi, article d’index:   Indexes.           (line 11684)
* wide hat accent, math:                 Math accents.      (line  8782)
* wide tilde accent, math:               Math accents.      (line  8785)
* Wright, Joseph:                        Upper and lower case.
                                                            (line 10823)
* x, hauteur d’un:                       Units of length.   (line  7474)
* XeTeX:                                 TeX engines.       (line   519)
* xindy, programle:                      Indexes.           (line 11692)
* écrire des lettres:                    Letters.           (line 11717)
* écrire un fichier externe:             filecontents.      (line  3578)
* élastiques, définir de nouvelles longueurs: \newlength.   (line  6842)
* élastiques, longueurs:                 Lengths.           (line  7338)
* élément extraordinaire:                \write.            (line 12206)
* équations, aligner:                    eqnarray.          (line  3461)
* équations, environnement pour:         equation.          (line  3500)
* étiquette:                             Cross references.  (line  2903)
* étiquette machine à écrire dans les listes: description.  (line  3287)
* étiquette tapuscrite dans les listes:  description.       (line  3287)
* étirement, omettre l’étirement vertical: \raggedbottom.   (line  1766)
* étoilée, forme des commandes de rubricage: Sectioning.    (line  2152)
* étoilées, variantes de commandes:      \@ifstar.          (line  6746)

Index des commandes
*******************

* Menu:

* $:                                     Math formulas.     (line  7684)
* $ en ligne, math:                      math.              (line  4268)
* $$...$$ displaymath, forme approchée en TeX de base: displaymath.
                                                            (line  3343)
* & pour cellules de tableau:            tabular.           (line  5396)
* --disable-write18 ligne de commande, option: Command line options.
                                                            (line 12533)
* --enable-write18 ligne de commande, option: Command line options.
                                                            (line 12533)
* --file-line-error ligne de commande, option: Command line options.
                                                            (line 12557)
* --halt-on-error ligne de commande, option: Command line options.
                                                            (line 12554)
* --help ligne de commande, option:      Command line options.
                                                            (line 12490)
* --interaction ligne de commande, option: Command line options.
                                                            (line 12494)
* --jobname ligne de commande, option:   Command line options.
                                                            (line 12514)
* --no-file-line-error ligne de commande, option: Command line options.
                                                            (line 12557)
* --no-shell-escape ligne de commande, option: Command line options.
                                                            (line 12533)
* --output-directory ligne de commande, option: Command line options.
                                                            (line 12519)
* --shell-escape ligne de commande, option: Command line options.
                                                            (line 12533)
* --version ligne de commande, option:   Command line options.
                                                            (line 12485)
* .aux fichier:                          Output files.      (line   449)
* .fd fichier:                           \newfont.          (line  7111)
* .fmt, fichier:                         TeX engines.       (line   479)
* .lof fichier:                          Output files.      (line   461)
* .lof fichier <1>:                      Table of contents etc..
                                                            (line 11478)
* .lot fichier:                          Output files.      (line   461)
* .lot fichier <1>:                      Table of contents etc..
                                                            (line 11478)
* .pdf fichier:                          Output files.      (line   434)
* .tex, extension par défaut:            Command line interface.
                                                            (line 12442)
* .toc fichier:                          Output files.      (line   461)
* .toc, fichier:                         Table of contents etc..
                                                            (line 11478)
* .xdv fichier:                          TeX engines.       (line   519)
* /bin/sh, utilisé par \write18:         \write18.          (line 12414)
* [...] pour les arguments optionnels:   LaTeX command syntax.
                                                            (line   573)
* \ caractère de début des commandes:    LaTeX command syntax.
                                                            (line   573)
* \!:                                    Spacing in math mode.
                                                            (line  8813)
* \" (accent tréma):                     Accents.           (line 11055)
* \#:                                    Reserved characters.
                                                            (line 10754)
* \$:                                    Reserved characters.
                                                            (line 10754)
* \%:                                    Reserved characters.
                                                            (line 10754)
* \&:                                    Reserved characters.
                                                            (line 10754)
* \' (acute accent):                     Accents.           (line 11060)
* \' (tabbing):                          tabbing.           (line  5171)
* \(:                                    Math formulas.     (line  7675)
* \(...\) en ligne, math:                math.              (line  4268)
* \):                                    Math formulas.     (line  7675)
* \*:                                    Math miscellany.   (line  8834)
* \+:                                    tabbing.           (line  5122)
* \,:                                    Spacing in math mode.
                                                            (line  8809)
* \-:                                    tabbing.           (line  5161)
* \- (césure):                           \- (hyphenation).  (line  6180)
* \. (dot-over accent):                  Accents.           (line 11065)
* \/:                                    \/.                (line  9159)
* \::                                    Spacing in math mode.
                                                            (line  8805)
* \;:                                    Spacing in math mode.
                                                            (line  8800)
* \<:                                    tabbing.           (line  5099)
* \= (macron accent):                    Accents.           (line 11069)
* \= (tabbing):                          tabbing.           (line  5075)
* \>:                                    tabbing.           (line  5094)
* \> <1>:                                Spacing in math mode.
                                                            (line  8805)
* \> (tabbing):                          tabbing.           (line  5093)
* \@auxout:                              \write.            (line 12183)
* \@beginparpenalty:                     list.              (line  4150)
* \@endparpenalty:                       list.              (line  4158)
* \@fnsymbol:                            \footnote.         (line  6421)
* \@ifstar:                              \@ifstar.          (line  6746)
* \@itempenalty:                         list.              (line  4154)
* \@mainaux:                             \write.            (line 12183)
* \@startsection:                        \@startsection.    (line  2694)
* \a (tabbing):                          tabbing.           (line  5195)
* \a' (aigu, accent dans tabbing):       tabbing.           (line  5196)
* \a= (macron, accent dans tabbing):     tabbing.           (line  5196)
* \aa (å):                               Additional Latin letters.
                                                            (line 11151)
* \AA (Å):                               Additional Latin letters.
                                                            (line 11151)
* \acute:                                Math accents.      (line  8742)
* \addcontentsline{EXT}{UNIT}{TEXTE}:    \addcontentsline.  (line 11581)
* \address:                              \address.          (line 11806)
* \addtocontents{EXT}{TEXTE}:            \addtocontents.    (line 11617)
* \addtocounter:                         \addtocounter.     (line  7303)
* \addtolength:                          \addtolength.      (line  7507)
* \addvspace:                            \addvspace.        (line  9211)
* \ae (æ):                               Additional Latin letters.
                                                            (line 11155)
* \AE (Æ):                               Additional Latin letters.
                                                            (line 11155)
* \aleph:                                Math symbols.      (line  7755)
* \alph:                                 \alph \Alph \arabic \roman \Roman \fnsymbol.
                                                            (line  7213)
* \Alph:                                 \alph \Alph \arabic \roman \Roman \fnsymbol.
                                                            (line  7217)
* \Alph example:                         enumerate.         (line  3444)
* \alpha:                                Math symbols.      (line  7758)
* \alsoname:                             Indexes.           (line 11688)
* \amalg:                                Math symbols.      (line  7761)
* \angle:                                Math symbols.      (line  7764)
* \appendix:                             \appendix.         (line  2618)
* \approx:                               Math symbols.      (line  7768)
* \arabic:                               \alph \Alph \arabic \roman \Roman \fnsymbol.
                                                            (line  7220)
* \arccos:                               Math functions.    (line  8633)
* \arcsin:                               Math functions.    (line  8636)
* \arctan:                               Math functions.    (line  8639)
* \arg:                                  Math functions.    (line  8642)
* \arraycolsep:                          array.             (line  3148)
* \arrayrulewidth:                       tabular.           (line  5531)
* \arraystretch:                         tabular.           (line  5537)
* \ast:                                  Math symbols.      (line  7771)
* \asymp:                                Math symbols.      (line  7779)
* \AtBeginDocument:                      \AtBeginDocument.  (line  3363)
* \AtBeginDvi:                           Class and package commands.
                                                            (line   912)
* \AtEndDocument:                        \AtEndDocument.    (line  3377)
* \AtEndOfClass:                         Class and package commands.
                                                            (line   920)
* \AtEndOfPackage:                       Class and package commands.
                                                            (line   920)
* \a` (grave, accent dans tabbing):      tabbing.           (line  5196)
* \b (accent barre-souscrite):           Accents.           (line 11089)
* \backmatter:                           \frontmatter & \mainmatter & \backmatter.
                                                            (line  2654)
* \backslash:                            Math symbols.      (line  7782)
* \bar:                                  Math accents.      (line  8745)
* \baselineskip:                         Low-level font commands.
                                                            (line  1581)
* \baselinestretch:                      Low-level font commands.
                                                            (line  1592)
* \begin:                                Environments.      (line  3044)
* \beta:                                 Math symbols.      (line  7787)
* \bf:                                   Font styles.       (line  1391)
* \bfseries:                             Font styles.       (line  1326)
* \bibitem:                              \bibitem.          (line  5732)
* \bibliography:                         Using BibTeX.      (line  5864)
* \bibliographystyle:                    Using BibTeX.      (line  5864)
* \bibname:                              thebibliography.   (line  5712)
* \bigcap:                               Math symbols.      (line  7790)
* \bigcirc:                              Math symbols.      (line  7794)
* \bigcup:                               Math symbols.      (line  7798)
* \bigodot:                              Math symbols.      (line  7802)
* \bigoplus:                             Math symbols.      (line  7806)
* \bigotimes:                            Math symbols.      (line  7810)
* \bigskip:                              \bigskip \medskip \smallskip.
                                                            (line  9239)
* \bigskipamount:                        \bigskip \medskip \smallskip.
                                                            (line  9240)
* \bigsqcup:                             Math symbols.      (line  7822)
* \bigtriangledown:                      Math symbols.      (line  7814)
* \bigtriangleup:                        Math symbols.      (line  7818)
* \biguplus:                             Math symbols.      (line  7825)
* \bigvee:                               Math symbols.      (line  7829)
* \bigwedge:                             Math symbols.      (line  7832)
* \bmod:                                 Math functions.    (line  8645)
* \boldmath:                             Math formulas.     (line  7689)
* \bot:                                  Math symbols.      (line  7835)
* \bottomfraction:                       Floats.            (line  2065)
* \bottomnumber:                         Floats.            (line  2102)
* \bowtie:                               Math symbols.      (line  7840)
* \Box:                                  Math symbols.      (line  7843)
* \breve:                                Math accents.      (line  8748)
* \bullet:                               Math symbols.      (line  7848)
* \c (cédille):                          Accents.           (line 11094)
* \cal:                                  Font styles.       (line  1394)
* \cap:                                  Math symbols.      (line  7851)
* \capitalacute:                         Accents.           (line 11060)
* \capitalbreve:                         Accents.           (line 11129)
* \capitalcaron:                         Accents.           (line 11141)
* \capitalcedilla:                       Accents.           (line 11094)
* \capitalcircumflex:                    Accents.           (line 11074)
* \capitaldieresis:                      Accents.           (line 11055)
* \capitaldotaccent:                     Accents.           (line 11098)
* \capitalgrave:                         Accents.           (line 11079)
* \capitalhungarumlaut:                  Accents.           (line 11102)
* \capitalmacron:                        Accents.           (line 11069)
* \capitalnewtie:                        Accents.           (line 11124)
* \capitalogonek:                        Accents.           (line 11113)
* \capitalring:                          Accents.           (line 11118)
* \capitaltie:                           Accents.           (line 11124)
* \capitaltilde:                         Accents.           (line 11085)
* \caption:                              figure.            (line  3559)
* \caption <1>:                          table.             (line  5344)
* \cc:                                   \cc.               (line 11828)
* \cdot:                                 Math symbols.      (line  7855)
* \cdots:                                Math miscellany.   (line  8856)
* \centering:                            \centering.        (line  3232)
* \chapter:                              Sectioning.        (line  2126)
* \chapter <1>:                          \chapter.          (line  2280)
* \check:                                Math accents.      (line  8751)
* \CheckCommand:                         Class and package commands.
                                                            (line   927)
* \CheckCommand*:                        Class and package commands.
                                                            (line   927)
* \chi:                                  Math symbols.      (line  7858)
* \circ:                                 Math symbols.      (line  7861)
* \circle:                               \circle.           (line  4666)
* \cite:                                 \cite.             (line  5796)
* \ClassError:                           Class and package commands.
                                                            (line   947)
* \ClassInfo:                            Class and package commands.
                                                            (line   947)
* \ClassInfoNoLine:                      Class and package commands.
                                                            (line   947)
* \ClassWarning:                         Class and package commands.
                                                            (line   947)
* \ClassWarningNoLine:                   Class and package commands.
                                                            (line   947)
* \cleardoublepage:                      \clearpage & \cleardoublepage.
                                                            (line  6301)
* \clearpage:                            \clearpage & \cleardoublepage.
                                                            (line  6301)
* \cline:                                \cline.            (line  5645)
* \closein:                              \openin & \openout.
                                                            (line 12006)
* \closeout:                             \openin & \openout.
                                                            (line 12006)
* \closing:                              \closing.          (line 11843)
* \clubsuit:                             Math symbols.      (line  7865)
* \columnsep:                            \twocolumn.        (line  1658)
* \columnsep <1>:                        Page layout parameters.
                                                            (line  1773)
* \columnsep <2>:                        Page layout parameters.
                                                            (line  1776)
* \columnseprule:                        \twocolumn.        (line  1664)
* \columnseprule <1>:                    Page layout parameters.
                                                            (line  1774)
* \columnseprule <2>:                    Page layout parameters.
                                                            (line  1776)
* \columnwidth:                          \twocolumn.        (line  1671)
* \columnwidth <1>:                      Page layout parameters.
                                                            (line  1775)
* \columnwidth <2>:                      Page layout parameters.
                                                            (line  1776)
* \complement:                           Math symbols.      (line  7868)
* \cong:                                 Math symbols.      (line  7874)
* \contentsline:                         \addcontentsline.  (line 11610)
* \coprod:                               Math symbols.      (line  7877)
* \copyright:                            Text symbols.      (line 10857)
* \cos:                                  Math functions.    (line  8648)
* \cosh:                                 Math functions.    (line  8651)
* \cot:                                  Math functions.    (line  8654)
* \coth:                                 Math functions.    (line  8657)
* \csc:                                  Math functions.    (line  8660)
* \cup:                                  Math symbols.      (line  7880)
* \CurrentOption:                        Class and package commands.
                                                            (line   968)
* \d (dot-under accent):                 Accents.           (line 11098)
* \dag:                                  Text symbols.      (line 10861)
* \dagger:                               Math symbols.      (line  7884)
* \dashbox:                              \dashbox.          (line  4867)
* \dashv:                                Math symbols.      (line  7887)
* \day:                                  \day \month \year. (line  7323)
* \dblfloatpagefraction:                 \twocolumn.        (line  1708)
* \dblfloatsep:                          \twocolumn.        (line  1714)
* \dbltextfloatsep:                      \twocolumn.        (line  1721)
* \dbltopfraction:                       \twocolumn.        (line  1684)
* \dbltopnumber:                         \twocolumn.        (line  1726)
* \ddag:                                 Text symbols.      (line 10864)
* \ddagger:                              Math symbols.      (line  7892)
* \ddot:                                 Math accents.      (line  8754)
* \ddots:                                Math miscellany.   (line  8859)
* \DeclareGraphicsExtensions:            \DeclareGraphicsExtensions.
                                                            (line 10144)
* \DeclareGraphicsRule:                  \DeclareGraphicsRule.
                                                            (line 10189)
* \DeclareOption:                        Class and package commands.
                                                            (line   974)
* \DeclareOption*:                       Class and package commands.
                                                            (line   974)
* \DeclareRobustCommand:                 Class and package commands.
                                                            (line  1006)
* \DeclareRobustCommand*:                Class and package commands.
                                                            (line  1006)
* \deg:                                  Math functions.    (line  8663)
* \Delta:                                Math symbols.      (line  7895)
* \delta:                                Math symbols.      (line  7899)
* \depth:                                Predefined lengths.
                                                            (line  7552)
* \det:                                  Math functions.    (line  8666)
* \dh (ð):                               Additional Latin letters.
                                                            (line 11159)
* \DH (Ð):                               Additional Latin letters.
                                                            (line 11159)
* \Diamond:                              Math symbols.      (line  7902)
* \diamond:                              Math symbols.      (line  7907)
* \diamondsuit:                          Math symbols.      (line  7911)
* \dim:                                  Math functions.    (line  8669)
* \displaystyle:                         Math formulas.     (line  7695)
* \div:                                  Math symbols.      (line  7914)
* \dj:                                   Additional Latin letters.
                                                            (line 11165)
* \DJ:                                   Additional Latin letters.
                                                            (line 11165)
* \documentclass:                        Document classes.  (line   679)
* \dot:                                  Math accents.      (line  8757)
* \doteq:                                Math symbols.      (line  7917)
* \dotfill:                              \hrulefill \dotfill.
                                                            (line  9187)
* \dots:                                 Text symbols.      (line 10881)
* \doublerulesep:                        tabular.           (line  5543)
* \downarrow:                            Math symbols.      (line  7921)
* \Downarrow:                            Math symbols.      (line  7925)
* \ell:                                  Math symbols.      (line  7929)
* \em:                                   Font styles.       (line  1397)
* \emph:                                 Font styles.       (line  1320)
* \emptyset:                             Math symbols.      (line  7932)
* \encl:                                 \encl.             (line 11857)
* \end:                                  Environments.      (line  3044)
* \endinput:                             \endinput.         (line 11294)
* \enlargethispage:                      \enlargethispage.  (line  6351)
* \enumi:                                enumerate.         (line  3432)
* \enumii:                               enumerate.         (line  3432)
* \enumiii:                              enumerate.         (line  3432)
* \enumiv:                               enumerate.         (line  3432)
* \epsilon:                              Math symbols.      (line  7936)
* \equiv:                                Math symbols.      (line  7942)
* \<espace>:                             \(SPACE) and \@.   (line  9082)
* \eta:                                  Math symbols.      (line  7945)
* \evensidemargin:                       Document class options.
                                                            (line   795)
* \evensidemargin <1>:                   Page layout parameters.
                                                            (line  1834)
* \evensidemargin <2>:                   Page layout parameters.
                                                            (line  1835)
* \ExecuteOptions:                       Class and package commands.
                                                            (line  1084)
* \exists:                               Math symbols.      (line  7948)
* \exp:                                  Math functions.    (line  8672)
* \extracolsep:                          tabular.           (line  5483)
* \fbox:                                 \fbox & \framebox. (line  9419)
* \fboxrule:                             \framebox (picture).
                                                            (line  4850)
* \fboxrule <1>:                         \fbox & \framebox. (line  9432)
* \fboxsep:                              \framebox (picture).
                                                            (line  4850)
* \fboxsep <1>:                          \fbox & \framebox. (line  9432)
* \fill:                                 \hfill.            (line  9075)
* \flat:                                 Math symbols.      (line  7951)
* \floatpagefraction:                    Floats.            (line  2068)
* \floatsep:                             Floats.            (line  2085)
* \flushbottom:                          \flushbottom.      (line  1755)
* \fnsymbol:                             \alph \Alph \arabic \roman \Roman \fnsymbol.
                                                            (line  7229)
* \fnsymbol, et note en bas de page:     \footnote.         (line  6421)
* \fontencoding:                         Low-level font commands.
                                                            (line  1485)
* \fontfamily:                           Low-level font commands.
                                                            (line  1496)
* \fontseries:                           Low-level font commands.
                                                            (line  1524)
* \fontshape:                            Low-level font commands.
                                                            (line  1567)
* \fontsize:                             Low-level font commands.
                                                            (line  1581)
* \footnote:                             \footnote.         (line  6403)
* \footnotemark:                         \footnotemark.     (line  6446)
* \footnoterule:                         Footnote parameters.
                                                            (line  6550)
* \footnotesep:                          Footnote parameters.
                                                            (line  6557)
* \footnotesize:                         Font sizes.        (line  1436)
* \footnotetext:                         \footnotetext.     (line  6465)
* \footskip:                             Page layout parameters.
                                                            (line  1792)
* \footskip <1>:                         Page layout parameters.
                                                            (line  1793)
* \forall:                               Math symbols.      (line  7954)
* \frac:                                 Math miscellany.   (line  8863)
* \frac{NUM}{DÉN}:                       Math miscellany.   (line  8862)
* \frame:                                \frame.            (line  4856)
* \framebox:                             \framebox (picture).
                                                            (line  4842)
* \framebox <1>:                         \fbox & \framebox. (line  9419)
* \frenchspacing:                        \frenchspacing.    (line  9138)
* \frontmatter:                          \frontmatter & \mainmatter & \backmatter.
                                                            (line  2654)
* \frown:                                Math symbols.      (line  7957)
* \fussy:                                \fussy.            (line  6239)
* \Gamma:                                Math symbols.      (line  7960)
* \gamma:                                Math symbols.      (line  7963)
* \gcd:                                  Math functions.    (line  8675)
* \ge:                                   Math symbols.      (line  7966)
* \geq:                                  Math symbols.      (line  7969)
* \gets:                                 Math symbols.      (line  7972)
* \gg:                                   Math symbols.      (line  7976)
* \glossary:                             Glossaries.        (line 11661)
* \glossaryentry:                        Glossaries.        (line 11664)
* \graphicspath:                         \graphicspath.     (line 10075)
* \graphpaper:                           \graphpaper.       (line  4641)
* \grave:                                Math accents.      (line  8760)
* \guillemotleft («):                    Text symbols.      (line 10873)
* \guillemotright (»):                   Text symbols.      (line 10874)
* \guilsinglleft (‹):                    Text symbols.      (line 10875)
* \guilsinglright (›):                   Text symbols.      (line 10876)
* \H (tréma hongrois):                   Accents.           (line 11102)
* \hat:                                  Math accents.      (line  8763)
* \hbar:                                 Math symbols.      (line  7980)
* \headheight:                           Page layout parameters.
                                                            (line  1781)
* \headheight <1>:                       Page layout parameters.
                                                            (line  1782)
* \headsep:                              Page layout parameters.
                                                            (line  1786)
* \headsep <1>:                          Page layout parameters.
                                                            (line  1787)
* \heartsuit:                            Math symbols.      (line  7983)
* \height:                               Predefined lengths.
                                                            (line  7550)
* \hfill:                                \hfill.            (line  9071)
* \hline:                                \hline.            (line  5656)
* \hom:                                  Math functions.    (line  8678)
* \hookleftarrow:                        Math symbols.      (line  7986)
* \hookrightarrow:                       Math symbols.      (line  7989)
* \hrulefill:                            \hrulefill \dotfill.
                                                            (line  9187)
* \hsize:                                Page layout parameters.
                                                            (line  1926)
* \hsize <1>:                            Page layout parameters.
                                                            (line  1927)
* \hspace:                               \hspace.           (line  9053)
* \huge:                                 Font sizes.        (line  1436)
* \Huge:                                 Font sizes.        (line  1436)
* \hyphenation:                          \hyphenation.      (line  6259)
* \i (i sans point):                     Accents.           (line 11106)
* \iff:                                  Math symbols.      (line  7992)
* \IfFileExists:                         Class and package commands.
                                                            (line  1042)
* \ij (ij):                              Additional Latin letters.
                                                            (line 11172)
* \IJ (IJ):                              Additional Latin letters.
                                                            (line 11172)
* \il:                                   Font styles.       (line  1400)
* \Im:                                   Math symbols.      (line  7996)
* \imath:                                Math accents.      (line  8766)
* \immediate\write:                      \write.            (line 12200)
* \in:                                   Math symbols.      (line  7999)
* \include:                              \include & \includeonly.
                                                            (line 11327)
* \includegraphics:                      \includegraphics.  (line 10276)
* \includeonly:                          \include & \includeonly.
                                                            (line 11327)
* \indent:                               \indent.           (line  7577)
* \index:                                Indexes.           (line 11677)
* \indexentry:                           Indexes.           (line 11680)
* \indexspace:                           Indexes.           (line 11702)
* \inf:                                  Math functions.    (line  8681)
* \infty:                                Math symbols.      (line  8004)
* \input:                                \input.            (line 11458)
* \InputIfFileExists:                    Class and package commands.
                                                            (line  1042)
* \int:                                  Math symbols.      (line  8007)
* \intextsep:                            Floats.            (line  2089)
* \iota:                                 Math symbols.      (line  8010)
* \item:                                 description.       (line  3264)
* \item <1>:                             description.       (line  3281)
* \item <2>:                             enumerate.         (line  3406)
* \item <3>:                             itemize.           (line  3768)
* \item <4>:                             itemize.           (line  3793)
* \itemindent:                           list.              (line  3956)
* \itemsep:                              list.              (line  3961)
* \itshape:                              Font styles.       (line  1317)
* \j (j sans point):                     Accents.           (line 11109)
* \jmath:                                Math accents.      (line  8769)
* \Join:                                 Math symbols.      (line  8013)
* \k (ogonek):                           Accents.           (line 11113)
* \kappa:                                Math symbols.      (line  8017)
* \ker:                                  Math functions.    (line  8684)
* \kill:                                 tabbing.           (line  5200)
* \l (ł):                                Additional Latin letters.
                                                            (line 11177)
* \L (Ł):                                Additional Latin letters.
                                                            (line 11177)
* \label:                                \label.            (line  2946)
* \labelenumi:                           enumerate.         (line  3437)
* \labelenumii:                          enumerate.         (line  3437)
* \labelenumiii:                         enumerate.         (line  3437)
* \labelenumiv:                          enumerate.         (line  3437)
* \labelitemi:                           itemize.           (line  3807)
* \labelitemii:                          itemize.           (line  3807)
* \labelitemiii:                         itemize.           (line  3807)
* \labelitemiv:                          itemize.           (line  3807)
* \labelsep:                             list.              (line  3973)
* \labelwidth:                           list.              (line  3978)
* \Lambda:                               Math symbols.      (line  8020)
* \lambda:                               Math symbols.      (line  8023)
* \land:                                 Math symbols.      (line  8026)
* \langle:                               Math symbols.      (line  8030)
* \large:                                Font sizes.        (line  1436)
* \Large:                                Font sizes.        (line  1436)
* \LARGE:                                Font sizes.        (line  1436)
* \LaTeX:                                Text symbols.      (line 10867)
* \LaTeXe:                               Text symbols.      (line 10870)
* \lbrace:                               Math symbols.      (line  8034)
* \lbrack:                               Math symbols.      (line  8038)
* \lceil:                                Math symbols.      (line  8042)
* \ldots:                                Text symbols.      (line 10880)
* \le:                                   Math symbols.      (line  8046)
* \leadsto:                              Math symbols.      (line  8049)
* \left DELIM1 ... \right DELIM2:        Math miscellany.   (line  8865)
* \Leftarrow:                            Math symbols.      (line  8054)
* \leftarrow:                            Math symbols.      (line  8059)
* \lefteqn:                              eqnarray.          (line  3493)
* \leftharpoondown:                      Math symbols.      (line  8064)
* \leftharpoonup:                        Math symbols.      (line  8068)
* \leftmargin:                           itemize.           (line  3829)
* \leftmargin <1>:                       list.              (line  4002)
* \leftmargini:                          itemize.           (line  3829)
* \leftmarginii:                         itemize.           (line  3829)
* \leftmarginiii:                        itemize.           (line  3829)
* \leftmarginiv:                         itemize.           (line  3829)
* \leftmarginv:                          itemize.           (line  3829)
* \leftmarginvi:                         itemize.           (line  3829)
* \Leftrightarrow:                       Math symbols.      (line  8072)
* \leftrightarrow:                       Math symbols.      (line  8076)
* \leq:                                  Math symbols.      (line  8080)
* \lfloor:                               Math symbols.      (line  8083)
* \lg:                                   Math functions.    (line  8687)
* \lhd:                                  Math symbols.      (line  8086)
* \lim:                                  Math functions.    (line  8690)
* \liminf:                               Math functions.    (line  8693)
* \limsup:                               Math functions.    (line  8696)
* \line:                                 \line.             (line  4684)
* \linebreak:                            \linebreak & \nolinebreak.
                                                            (line  6275)
* \linespread:                           Low-level font commands.
                                                            (line  1607)
* \linethickness:                        \linethickness.    (line  4732)
* \linewidth:                            Page layout parameters.
                                                            (line  1799)
* \linewidth <1>:                        Page layout parameters.
                                                            (line  1800)
* \listoffigures:                        Table of contents etc..
                                                            (line 11478)
* \listoftables:                         Table of contents etc..
                                                            (line 11478)
* \listparindent:                        list.              (line  4022)
* \ll:                                   Math symbols.      (line  8093)
* \ln:                                   Math functions.    (line  8699)
* \lnot:                                 Math symbols.      (line  8097)
* \LoadClass:                            Class and package commands.
                                                            (line  1061)
* \LoadClassWithOptions:                 Class and package commands.
                                                            (line  1061)
* \location:                             \location.         (line 11866)
* \log:                                  Math functions.    (line  8702)
* \long:                                 \newcommand & \renewcommand.
                                                            (line  6586)
* \longleftarrow:                        Math symbols.      (line  8100)
* \longleftrightarrow:                   Math symbols.      (line  8104)
* \longmapsto:                           Math symbols.      (line  8108)
* \longrightarrow:                       Math symbols.      (line  8112)
* \lor:                                  Math symbols.      (line  8117)
* \lq:                                   Text symbols.      (line 10887)
* \mainmatter:                           \frontmatter & \mainmatter & \backmatter.
                                                            (line  2654)
* \makebox:                              \mbox & \makebox.  (line  9326)
* \makebox (picture):                    \makebox (picture).
                                                            (line  4814)
* \makeglossary:                         Glossaries.        (line 11659)
* \makeindex:                            Indexes.           (line 11674)
* \makelabel:                            list.              (line  3929)
* \makelabels:                           \makelabels.       (line 11876)
* \mapsto:                               Math symbols.      (line  8121)
* \marginpar:                            Marginal notes.    (line  7612)
* \marginparpush:                        Page layout parameters.
                                                            (line  1806)
* \marginparpush <1>:                    Page layout parameters.
                                                            (line  1809)
* \marginparpush <2>:                    Marginal notes.    (line  7644)
* \marginparsep:                         Marginal notes.    (line  7648)
* \marginparwidth:                       Page layout parameters.
                                                            (line  1808)
* \marginparwidth <1>:                   Page layout parameters.
                                                            (line  1809)
* \marginparwidth <2>:                   Marginal notes.    (line  7652)
* \marginsep:                            Page layout parameters.
                                                            (line  1807)
* \marginsep <1>:                        Page layout parameters.
                                                            (line  1809)
* \mathbf:                               Font styles.       (line  1350)
* \mathcal:                              Font styles.       (line  1367)
* \mathdollar:                           Math miscellany.   (line  8872)
* \mathellipsis:                         Math miscellany.   (line  8875)
* \mathnormal:                           Font styles.       (line  1363)
* \mathparagraph:                        Math miscellany.   (line  8879)
* \mathring:                             Math accents.      (line  8772)
* \mathrm:                               Font styles.       (line  1347)
* \mathsection:                          Math miscellany.   (line  8882)
* \mathsf:                               Font styles.       (line  1353)
* \mathsterling:                         Math miscellany.   (line  8885)
* \mathtt:                               Font styles.       (line  1356)
* \mathunderscore:                       Math miscellany.   (line  8888)
* \mathversion:                          Font styles.       (line  1370)
* \max:                                  Math functions.    (line  8705)
* \mbox:                                 \mbox & \makebox.  (line  9326)
* \mdseries:                             Font styles.       (line  1323)
* \medskip:                              \bigskip \medskip \smallskip.
                                                            (line  9245)
* \medskipamount:                        \bigskip \medskip \smallskip.
                                                            (line  9246)
* \medspace:                             Spacing in math mode.
                                                            (line  8805)
* \message:                              \message.          (line 12280)
* \mho:                                  Math symbols.      (line  8125)
* \mid:                                  Math symbols.      (line  8130)
* \min:                                  Math functions.    (line  8708)
* \models:                               Math symbols.      (line  8142)
* \month:                                \day \month \year. (line  7323)
* \mp:                                   Math symbols.      (line  8146)
* \mu:                                   Math symbols.      (line  8149)
* \multicolumn:                          \multicolumn.      (line  5557)
* \multiput:                             \multiput.         (line  4590)
* \nabla:                                Math symbols.      (line  8152)
* \name:                                 \name.             (line 11927)
* \natural:                              Math symbols.      (line  8155)
* \ne:                                   Math symbols.      (line  8158)
* \nearrow:                              Math symbols.      (line  8161)
* \NeedsTeXFormat:                       Class and package commands.
                                                            (line  1096)
* \neg:                                  Math symbols.      (line  8164)
* \neq:                                  Math symbols.      (line  8168)
* \newcommand:                           \newcommand & \renewcommand.
                                                            (line  6573)
* \newcounter:                           \newcounter.       (line  6825)
* \newenvironment:                       \newenvironment & \renewenvironment.
                                                            (line  6875)
* \newfont:                              \newfont.          (line  7101)
* \newlength:                            \newlength.        (line  6842)
* \newline:                              \newline.          (line  6157)
* \newpage:                              \newpage.          (line  6315)
* \newsavebox:                           \newsavebox.       (line  6859)
* \newtheorem:                           \newtheorem.       (line  6986)
* \newtie:                               Accents.           (line 11124)
* \newwrite:                             \write.            (line 12160)
* \ng:                                   Additional Latin letters.
                                                            (line 11181)
* \NG:                                   Additional Latin letters.
                                                            (line 11181)
* \ni:                                   Math symbols.      (line  8171)
* \nocite:                               \nocite.           (line  5848)
* \nofiles:                              \nofiles.          (line 11633)
* \noindent:                             \noindent.         (line  7589)
* \nolinebreak:                          \linebreak & \nolinebreak.
                                                            (line  6275)
* \nonfrenchspacing:                     \frenchspacing.    (line  9138)
* \nonumber:                             eqnarray.          (line  3487)
* \nopagebreak:                          \pagebreak & \nopagebreak.
                                                            (line  6366)
* \normalfont:                           Font styles.       (line  1344)
* \normalmarginpar:                      Marginal notes.    (line  7630)
* \normalsize:                           Font sizes.        (line  1436)
* \not:                                  Math symbols.      (line  8176)
* \notin:                                Math symbols.      (line  8185)
* \nu:                                   Math symbols.      (line  8189)
* \nwarrow:                              Math symbols.      (line  8192)
* \o (ø):                                Additional Latin letters.
                                                            (line 11187)
* \O (Ø):                                Additional Latin letters.
                                                            (line 11187)
* \obeycr:                               \obeycr & \restorecr.
                                                            (line  6148)
* \oddsidemargin:                        Document class options.
                                                            (line   795)
* \oddsidemargin <1>:                    Page layout parameters.
                                                            (line  1833)
* \oddsidemargin <2>:                    Page layout parameters.
                                                            (line  1835)
* \odot:                                 Math symbols.      (line  8195)
* \oe (œ):                               Additional Latin letters.
                                                            (line 11191)
* \OE (Œ):                               Additional Latin letters.
                                                            (line 11191)
* \oint:                                 Math symbols.      (line  8199)
* \oldstylenums:                         Font styles.       (line  1374)
* \Omega:                                Math symbols.      (line  8203)
* \omega:                                Math symbols.      (line  8206)
* \ominus:                               Math symbols.      (line  8209)
* \onecolumn:                            \onecolumn.        (line  1636)
* \openin:                               \openin & \openout.
                                                            (line 12006)
* \opening:                              \opening.          (line 11935)
* \openout:                              \openin & \openout.
                                                            (line 12006)
* \oplus:                                Math symbols.      (line  8212)
* \OptionNotUsed:                        Class and package commands.
                                                            (line  1116)
* \oslash:                               Math symbols.      (line  8216)
* \otimes:                               Math symbols.      (line  8219)
* \oval:                                 \oval.             (line  4757)
* \overbrace{MATH}:                      Math miscellany.   (line  8891)
* \overline{TEXTE}:                      Math miscellany.   (line  8895)
* \owns:                                 Math symbols.      (line  8223)
* \P:                                    Text symbols.      (line 10890)
* \PackageError:                         Class and package commands.
                                                            (line   947)
* \PackageInfo:                          Class and package commands.
                                                            (line   947)
* \PackageInfoNoLine:                    Class and package commands.
                                                            (line   947)
* \PackageWarning:                       Class and package commands.
                                                            (line   947)
* \PackageWarningNoLine:                 Class and package commands.
                                                            (line   947)
* \pagebreak:                            \pagebreak & \nopagebreak.
                                                            (line  6366)
* \pagenumbering:                        \pagenumbering.    (line  9007)
* \pageref:                              \pageref.          (line  2999)
* \paperheight:                          Page layout parameters.
                                                            (line  1884)
* \paperwidth:                           Page layout parameters.
                                                            (line  1890)
* \paragraph:                            Sectioning.        (line  2126)
* \paragraph <1>:                        \subsubsection & \paragraph & \subparagraph.
                                                            (line  2542)
* \parallel:                             Math symbols.      (line  8227)
* \parbox:                               \parbox.           (line  9442)
* \parindent:                            minipage.          (line  4381)
* \parindent <1>:                        \indent.           (line  7577)
* \parsep:                               list.              (line  4028)
* \parskip:                              \parindent & \parskip.
                                                            (line  7605)
* \parskip exemple:                      itemize.           (line  3851)
* \part:                                 Sectioning.        (line  2126)
* \part <1>:                             \part.             (line  2222)
* \partial:                              Math symbols.      (line  8230)
* \partopsep:                            list.              (line  4038)
* \PassOptionsToClass:                   Class and package commands.
                                                            (line  1122)
* \PassOptionsToPackage:                 Class and package commands.
                                                            (line  1122)
* \pdfpageheight:                        Document class options.
                                                            (line   757)
* \pdfpagewidth:                         Document class options.
                                                            (line   757)
* \perp:                                 Math symbols.      (line  8233)
* \phi:                                  Math symbols.      (line  8238)
* \Pi:                                   Math symbols.      (line  8242)
* \pi:                                   Math symbols.      (line  8245)
* \pm:                                   Math symbols.      (line  8249)
* \pmod:                                 Math functions.    (line  8711)
* \poptabs:                              tabbing.           (line  5206)
* \poptabs <1>:                          tabbing.           (line  5207)
* \pounds:                               Text symbols.      (line 10894)
* \Pr:                                   Math functions.    (line  8714)
* \prec:                                 Math symbols.      (line  8252)
* \preceq:                               Math symbols.      (line  8255)
* \prime:                                Math symbols.      (line  8259)
* \printindex:                           Indexes.           (line 11698)
* \ProcessOptions:                       Class and package commands.
                                                            (line  1159)
* \ProcessOptions*:                      Class and package commands.
                                                            (line  1159)
* \prod:                                 Math symbols.      (line  8270)
* \propto:                               Math symbols.      (line  8273)
* \protect:                              \protect.          (line  7140)
* \protected@write:                      \write.            (line 12212)
* \providecommand:                       \providecommand.   (line  6678)
* \ProvidesClass:                        Class and package commands.
                                                            (line  1203)
* \ProvidesFile:                         Class and package commands.
                                                            (line  1239)
* \ProvidesPackage:                      Class and package commands.
                                                            (line  1203)
* \ps:                                   \ps.               (line 11948)
* \Psi:                                  Math symbols.      (line  8276)
* \psi:                                  Math symbols.      (line  8279)
* \pushtabs:                             tabbing.           (line  5210)
* \put:                                  \put.              (line  4582)
* \qbezier:                              \qbezier.          (line  4600)
* \qquad:                                Spacing in math mode.
                                                            (line  8823)
* \quad:                                 Spacing in math mode.
                                                            (line  8817)
* \quotedblbase („):                     Text symbols.      (line 10898)
* \quotesinglbase (‚):                   Text symbols.      (line 10899)
* \r (ring accent):                      Accents.           (line 11118)
* \raggedbottom:                         \raggedbottom.     (line  1766)
* \raggedleft:                           \raggedleft.       (line  3737)
* \raggedright:                          \raggedright.      (line  3676)
* \raisebox:                             \raisebox.         (line  9497)
* \rangle:                               Math symbols.      (line  8282)
* \rbrace:                               Math symbols.      (line  8286)
* \rbrack:                               Math symbols.      (line  8290)
* \rceil:                                Math symbols.      (line  8294)
* \Re:                                   Math symbols.      (line  8297)
* \read:                                 \read.             (line 12075)
* \ref:                                  \ref.              (line  3021)
* \reflectbox:                           \scalebox.         (line 10683)
* \refname:                              thebibliography.   (line  5712)
* \refstepcounter:                       \refstepcounter.   (line  7309)
* \renewenvironment:                     \newenvironment & \renewenvironment.
                                                            (line  6875)
* \RequirePackage:                       Class and package commands.
                                                            (line  1250)
* \RequirePackageWithOptions:            Class and package commands.
                                                            (line  1250)
* \resizebox:                            \resizebox.        (line 10711)
* \restorecr:                            \obeycr & \restorecr.
                                                            (line  6148)
* \restriction:                          Math symbols.      (line  8303)
* \revemptyset:                          Math symbols.      (line  8308)
* \reversemarginpar:                     Marginal notes.    (line  7630)
* \rfloor:                               Math symbols.      (line  8313)
* \rhd:                                  Math symbols.      (line  8317)
* \rho:                                  Math symbols.      (line  8325)
* \right:                                Math miscellany.   (line  8866)
* \Rightarrow:                           Math symbols.      (line  8329)
* \rightarrow:                           Math symbols.      (line  8333)
* \rightharpoondown:                     Math symbols.      (line  8338)
* \rightharpoonup:                       Math symbols.      (line  8341)
* \rightleftharpoons:                    Math symbols.      (line  8344)
* \rightmargin:                          list.              (line  4055)
* \rm:                                   Font styles.       (line  1403)
* \rmfamily:                             Font styles.       (line  1314)
* \roman:                                \alph \Alph \arabic \roman \Roman \fnsymbol.
                                                            (line  7223)
* \Roman:                                \alph \Alph \arabic \roman \Roman \fnsymbol.
                                                            (line  7226)
* \rotatebox:                            \rotatebox.        (line 10617)
* \rq:                                   Text symbols.      (line 10902)
* \rule:                                 \rule.             (line 11206)
* \S:                                    Text symbols.      (line 10905)
* \<sautdeligne>:                        \(SPACE) and \@.   (line  9082)
* \savebox:                              \sbox & \savebox.  (line  9546)
* \sbox:                                 \sbox & \savebox.  (line  9546)
* \sc:                                   Font styles.       (line  1406)
* \scalebox:                             \scalebox.         (line 10683)
* \scriptsize:                           Font sizes.        (line  1436)
* \scshape:                              Font styles.       (line  1338)
* \searrow:                              Math symbols.      (line  8348)
* \sec:                                  Math functions.    (line  8717)
* \section:                              Sectioning.        (line  2126)
* \section <1>:                          \section.          (line  2383)
* \seename:                              Indexes.           (line 11688)
* \selectfont:                           Low-level font commands.
                                                            (line  1613)
* \setcounter:                           \setcounter.       (line  7293)
* \setlength:                            \setlength.        (line  7495)
* \setminus:                             Math symbols.      (line  8351)
* \settodepth:                           \settodepth.       (line  7518)
* \settoheight:                          \settoheight.      (line  7528)
* \settowidth:                           \settowidth.       (line  7538)
* \sf:                                   Font styles.       (line  1409)
* \sffamily:                             Font styles.       (line  1335)
* \sharp:                                Math symbols.      (line  8357)
* \shipout et développement:             \write.            (line 12206)
* \shortstack:                           \shortstack.       (line  4784)
* \Sigma:                                Math symbols.      (line  8360)
* \sigma:                                Math symbols.      (line  8363)
* \signature:                            \signature.        (line 11958)
* \signature <1>:                        \signature.        (line 11963)
* \sim:                                  Math symbols.      (line  8367)
* \simeq:                                Math symbols.      (line  8370)
* \sin:                                  Math functions.    (line  8720)
* \sinh:                                 Math functions.    (line  8723)
* \sl:                                   Font styles.       (line  1412)
* \slshape:                              Font styles.       (line  1332)
* \small:                                Font sizes.        (line  1436)
* \smallint:                             Math symbols.      (line  8373)
* \smallskip:                            \bigskip \medskip \smallskip.
                                                            (line  9251)
* \smallskipamount:                      \bigskip \medskip \smallskip.
                                                            (line  9252)
* \smile:                                Math symbols.      (line  8377)
* \spadesuit:                            Math symbols.      (line  8380)
* \sqcap:                                Math symbols.      (line  8383)
* \sqcup:                                Math symbols.      (line  8387)
* \sqrt[NIÈME]{ARG}:                     Math miscellany.   (line  8899)
* \sqsubset:                             Math symbols.      (line  8391)
* \sqsubseteq:                           Math symbols.      (line  8396)
* \sqsupset:                             Math symbols.      (line  8400)
* \sqsupseteq:                           Math symbols.      (line  8405)
* \ss (ß):                               Additional Latin letters.
                                                            (line 11195)
* \SS (SS):                              Additional Latin letters.
                                                            (line 11195)
* \stackrel{TEXTE}{RELATION}:            Math miscellany.   (line  8904)
* \star:                                 Math symbols.      (line  8409)
* \stepcounter:                          \stepcounter.      (line  7317)
* \stop:                                 Recovering from errors.
                                                            (line 12747)
* \subparagraph:                         Sectioning.        (line  2126)
* \subparagraph <1>:                     \subsubsection & \paragraph & \subparagraph.
                                                            (line  2542)
* \subsection:                           Sectioning.        (line  2126)
* \subsection <1>:                       \subsection.       (line  2470)
* \subset:                               Math symbols.      (line  8417)
* \subseteq:                             Math symbols.      (line  8420)
* \subsubsection:                        Sectioning.        (line  2126)
* \subsubsection <1>:                    \subsubsection & \paragraph & \subparagraph.
                                                            (line  2542)
* \succ:                                 Math symbols.      (line  8423)
* \succeq:                               Math symbols.      (line  8426)
* \sum:                                  Math symbols.      (line  8430)
* \sup:                                  Math functions.    (line  8726)
* \suppressfloats:                       Floats.            (line  2057)
* \supset:                               Math symbols.      (line  8434)
* \supseteq:                             Math symbols.      (line  8437)
* \surd:                                 Math symbols.      (line  8440)
* \swarrow:                              Math symbols.      (line  8445)
* \symbol:                               Symbols by font position.
                                                            (line 10835)
* \t (tie-after accent):                 Accents.           (line 11124)
* \tabbingsep:                           tabbing.           (line  5221)
* \tabcolsep:                            tabular.           (line  5547)
* \tableofcontents:                      Table of contents etc..
                                                            (line 11478)
* \<tabulation>:                         \(SPACE) and \@.   (line  9082)
* \tan:                                  Math functions.    (line  8729)
* \tanh:                                 Math functions.    (line  8732)
* \tau:                                  Math symbols.      (line  8448)
* \telephone:                            \telephone.        (line 11991)
* \TeX:                                  Text symbols.      (line 10908)
* \textascendercompwordmark:             Text symbols.      (line 10946)
* \textasciicircum:                      Text symbols.      (line 10911)
* \textasciitilde:                       Text symbols.      (line 10914)
* \textasteriskcentered:                 Text symbols.      (line 10917)
* \textbackslash:                        Reserved characters.
                                                            (line 10760)
* \textbackslash <1>:                    Text symbols.      (line 10920)
* \textbar:                              Text symbols.      (line 10923)
* \textbardbl:                           Text symbols.      (line 10926)
* \textbf:                               Font styles.       (line  1326)
* \textbigcircle:                        Text symbols.      (line 10929)
* \textbraceleft:                        Text symbols.      (line 10932)
* \textbraceright:                       Text symbols.      (line 10935)
* \textbullet:                           Text symbols.      (line 10938)
* \textcapitalcompwordmark:              Text symbols.      (line 10945)
* \textcircled{LETTRE}:                  Text symbols.      (line 10941)
* \textcompwordmark:                     Text symbols.      (line 10944)
* \textcopyright:                        Text symbols.      (line 10858)
* \textdagger:                           Text symbols.      (line 10951)
* \textdaggerdbl:                        Text symbols.      (line 10954)
* \textdollar (ou \$):                   Text symbols.      (line 10957)
* \textellipsis:                         Text symbols.      (line 10882)
* \textemdash (ou ---):                  Text symbols.      (line 10960)
* \textendash (ou --):                   Text symbols.      (line 10966)
* \texteuro:                             Text symbols.      (line 10970)
* \textexclamdown (ou !`):               Text symbols.      (line 10977)
* \textfloatsep:                         Floats.            (line  2095)
* \textfraction:                         Floats.            (line  2072)
* \textgreater:                          Text symbols.      (line 10980)
* \textheight:                           Page layout parameters.
                                                            (line  1896)
* \textit:                               Font styles.       (line  1317)
* \textleftarrow:                        Text symbols.      (line 10986)
* \textless:                             Text symbols.      (line 10983)
* \textmd:                               Font styles.       (line  1323)
* \textnormal:                           Font styles.       (line  1344)
* \textordfeminine:                      Text symbols.      (line 10989)
* \textordmasculine:                     Text symbols.      (line 10990)
* \textparagraph:                        Text symbols.      (line 10891)
* \textperiodcentered:                   Text symbols.      (line 10993)
* \textquestiondown (ou ?`):             Text symbols.      (line 10996)
* \textquotedblleft (ou ``):             Text symbols.      (line 10999)
* \textquotedblright (ou ''):            Text symbols.      (line 11002)
* \textquoteleft (ou `):                 Text symbols.      (line 11005)
* \textquoteright (ou '):                Text symbols.      (line 11008)
* \textquotesingle:                      Text symbols.      (line 11011)
* \textquotestraightbase:                Text symbols.      (line 11014)
* \textquotestraightdblbase:             Text symbols.      (line 11015)
* \textregistered:                       Text symbols.      (line 11018)
* \textrightarrow:                       Text symbols.      (line 11021)
* \textrm:                               Font styles.       (line  1314)
* \textsc:                               Font styles.       (line  1338)
* \textsf:                               Font styles.       (line  1335)
* \textsl:                               Font styles.       (line  1332)
* \textsterling:                         Text symbols.      (line 10895)
* \textthreequartersemdash:              Text symbols.      (line 11024)
* \texttrademark:                        Text symbols.      (line 11027)
* \texttt:                               Font styles.       (line  1341)
* \texttwelveudash:                      Text symbols.      (line 11030)
* \textunderscore:                       Text symbols.      (line 11033)
* \textup:                               Font styles.       (line  1329)
* \textvisiblespace:                     Text symbols.      (line 11036)
* \textwidth:                            Page layout parameters.
                                                            (line  1905)
* \th (þ):                               Additional Latin letters.
                                                            (line 11199)
* \TH (Þ):                               Additional Latin letters.
                                                            (line 11199)
* \theta:                                Math symbols.      (line  8451)
* \thicklines:                           \thicklines.       (line  4743)
* \thickspace:                           Spacing in math mode.
                                                            (line  8800)
* \thinlines:                            \thinlines.        (line  4750)
* \thinspace:                            Spacing in math mode.
                                                            (line  8809)
* \thinspace <1>:                        \thinspace.        (line  9152)
* \thispagestyle:                        \thispagestyle.    (line  9036)
* \tilde:                                Math accents.      (line  8775)
* \times:                                Math symbols.      (line  8455)
* \tiny:                                 Font sizes.        (line  1436)
* \to:                                   Math symbols.      (line  8459)
* \today:                                \today.            (line 11225)
* \top:                                  Math symbols.      (line  8463)
* \topfraction:                          Floats.            (line  2078)
* \topmargin:                            Page layout parameters.
                                                            (line  1931)
* \topnumber:                            Floats.            (line  2106)
* \topsep:                               list.              (line  4062)
* \topskip:                              Page layout parameters.
                                                            (line  1957)
* \topskip <1>:                          Page layout parameters.
                                                            (line  1958)
* \totalheight:                          Predefined lengths.
                                                            (line  7554)
* \totalnumber:                          Floats.            (line  2110)
* \triangle:                             Math symbols.      (line  8467)
* \triangleleft:                         Math symbols.      (line  8470)
* \triangleright:                        Math symbols.      (line  8476)
* \tt:                                   Font styles.       (line  1415)
* \ttfamily:                             Font styles.       (line  1341)
* \twocolumn:                            \twocolumn.        (line  1642)
* \typein:                               \typein.           (line 12108)
* \typeout:                              \typeout.          (line 12123)
* \u (breve accent):                     Accents.           (line 11129)
* \unboldmath:                           Math formulas.     (line  7689)
* \underbar:                             Accents.           (line 11132)
* \underbrace{MATH}:                     Math miscellany.   (line  8908)
* \underline{TEXTE}:                     Math miscellany.   (line  8912)
* \unitlength:                           picture.           (line  4468)
* \unlhd:                                Math symbols.      (line  8482)
* \unrhd:                                Math symbols.      (line  8490)
* \Uparrow:                              Math symbols.      (line  8498)
* \uparrow:                              Math symbols.      (line  8502)
* \Updownarrow:                          Math symbols.      (line  8506)
* \updownarrow:                          Math symbols.      (line  8511)
* \upharpoonright:                       Math symbols.      (line  8515)
* \uplus:                                Math symbols.      (line  8520)
* \upshape:                              Font styles.       (line  1329)
* \Upsilon:                              Math symbols.      (line  8525)
* \upsilon:                              Math symbols.      (line  8528)
* \usebox:                               \usebox.           (line  9661)
* \usecounter:                           \usecounter.       (line  7252)
* \usefont:                              Low-level font commands.
                                                            (line  1622)
* \usepackage:                           Additional packages.
                                                            (line   814)
* \v (breve accent):                     Accents.           (line 11141)
* \value:                                \value.            (line  7263)
* \vanothing:                            Math symbols.      (line  8536)
* \varepsilon:                           Math symbols.      (line  8531)
* \varphi:                               Math symbols.      (line  8541)
* \varpi:                                Math symbols.      (line  8545)
* \varrho:                               Math symbols.      (line  8549)
* \varsigma:                             Math symbols.      (line  8553)
* \vartheta:                             Math symbols.      (line  8557)
* \vbox TeX de base:                     minipage.          (line  4332)
* \vdash ⊢ Taquet droit ; prouve, implique ;: Math symbols. (line  8561)
* \vdots:                                Math miscellany.   (line  8917)
* \vec:                                  Math accents.      (line  8778)
* \vector:                               \vector.           (line  4803)
* \vee:                                  Math symbols.      (line  8565)
* \verb:                                 \verb.             (line  6043)
* \Vert:                                 Math symbols.      (line  8570)
* \vert:                                 Math symbols.      (line  8587)
* \vfill:                                \vfill.            (line  9260)
* \vline:                                \vline.            (line  5664)
* \vspace:                               \vspace.           (line  9286)
* \vtop TeX de base:                     minipage.          (line  4328)
* \wedge:                                Math symbols.      (line  8607)
* \widehat:                              Math accents.      (line  8781)
* \widetilde:                            Math accents.      (line  8784)
* \width:                                Predefined lengths.
                                                            (line  7548)
* \wlog:                                 \wlog.             (line 12329)
* \wp:                                   Math symbols.      (line  8611)
* \wr:                                   Math symbols.      (line  8615)
* \write:                                \write.            (line 12141)
* \write18:                              \write18.          (line 12347)
* \Xi:                                   Math symbols.      (line  8618)
* \xi:                                   Math symbols.      (line  8621)
* \year:                                 \day \month \year. (line  7323)
* \zeta:                                 Math symbols.      (line  8624)
* \[:                                    Math formulas.     (line  7675)
* \[...\] displaymath:                   displaymath.       (line  3337)
* \\ (for eqnarray):                     eqnarray.          (line  3478)
* \\ (pour center):                      center.            (line  3193)
* \\ (pour flushright):                  flushright.        (line  3720)
* \\ (pour les objets \shortstack):      \shortstack.       (line  4798)
* \\ (tabbing):                          tabbing.           (line  5070)
* \\ for flushleft:                      flushleft.         (line  3653)
* \\ force un saut de ligne:             \\.                (line  6114)
* \\ pour les lettres:                   Letters.           (line 11766)
* \\ pour tabular:                       tabular.           (line  5397)
* \\ pour verse:                         verse.             (line  6093)
* \\* (pour eqnarray):                   eqnarray.          (line  3484)
* \]:                                    Math formulas.     (line  7675)
* \^:                                    Reserved characters.
                                                            (line 10760)
* \^ (accent circonflexe):               Accents.           (line 11074)
* \_:                                    Reserved characters.
                                                            (line 10754)
* \` (accent grave):                     Accents.           (line 11079)
* \` (tabbing):                          tabbing.           (line  5178)
* \{:                                    Reserved characters.
                                                            (line 10754)
* \|:                                    Math symbols.      (line  7752)
* \}:                                    Reserved characters.
                                                            (line 10754)
* \~:                                    Reserved characters.
                                                            (line 10760)
* \~ (accent tilde):                     Accents.           (line 11085)
* ^ indice supérieur:                    Subscripts & superscripts.
                                                            (line  7703)
* _ indice inférieur:                    Subscripts & superscripts.
                                                            (line  7703)
* {...} pour les arguments obligatoires: LaTeX command syntax.
                                                            (line   573)
* abstract, environnement:               abstract.          (line  3054)
* adjustbox, paquetage:                  Boxes.             (line  9320)
* algorithm2e, paquetage:                tabbing.           (line  4933)
* amsmath, paquetage:                    array.             (line  3152)
* amsmath, paquetage <1>:                displaymath.       (line  3332)
* amsmath, paquetage <2>:                equation.          (line  3514)
* amsmath, paquetage <3>:                theorem.           (line  5948)
* amsthm, paquetage:                     theorem.           (line  5948)
* answers, paquetage:                    \write.            (line 12247)
* appendix, paquetage:                   \appendix.         (line  2643)
* array, environnement:                  array.             (line  3102)
* Asymptote, paquetage:                  \line.             (line  4715)
* Asymptote, paquetage <1>:              \mbox & \makebox.  (line  9397)
* Asymptote, paquetage <2>:              \write18.          (line 12355)
* babel, paquetage:                      \chapter.          (line  2354)
* babel, paquetage <1>:                  thebibliography.   (line  5722)
* babel, paquetage <2>:                  Table of contents etc..
                                                            (line 11566)
* babel, paquetage <3>:                  Indexes.           (line 11688)
* beamer, paquetage:                     beamer template.   (line 12776)
* bp:                                    Units of length.   (line  7455)
* cc:                                    Units of length.   (line  7469)
* center, environnement:                 center.            (line  3183)
* classe article:                        Document classes.  (line   687)
* classe book:                           Document classes.  (line   687)
* classe letter:                         Document classes.  (line   687)
* classe report:                         Document classes.  (line   687)
* classe slides:                         Document classes.  (line   687)
* cleveref, paquetage:                   Cross references.  (line  2937)
* cm:                                    Units of length.   (line  7460)
* cmd.exe, utilisé par \write18:         \write18.          (line 12414)
* commande dvipdfmx:                     Output files.      (line   425)
* commande dvips:                        Output files.      (line   425)
* commande dvitype:                      Output files.      (line   425)
* commande latex:                        Output files.      (line   425)
* commande pdflatex:                     Output files.      (line   434)
* commande xdvi:                         Output files.      (line   425)
* cprotect, paquetage:                   verbatim.          (line  6018)
* cprotect, paquetage <1>:               \verb.             (line  6069)
* datatool, paquetage:                   \read.             (line 12101)
* datetime, paquetage:                   \today.            (line 11242)
* dd:                                    Units of length.   (line  7466)
* description, environnement:            description.       (line  3256)
* displaymath, environnement:            displaymath.       (line  3316)
* displaymath, environnement <1>:        Math formulas.     (line  7665)
* document, environnement:               document.          (line  3360)
* dvilualatex-dev:                       TeX engines.       (line   543)
* em:                                    Units of length.   (line  7474)
* enumerate, environnement:              enumerate.         (line  3394)
* enumitem, paquetage:                   itemize.           (line  3838)
* enumitem, paquetage <1>:               list.              (line  4162)
* environnement abstract:                abstract.          (line  3054)
* environnement array:                   array.             (line  3102)
* environnement center:                  center.            (line  3183)
* environnement description:             description.       (line  3256)
* environnement displaymath:             displaymath.       (line  3316)
* environnement displaymath <1>:         Math formulas.     (line  7665)
* environnement document:                document.          (line  3360)
* environnement enumerate:               enumerate.         (line  3394)
* environnement eqnarray:                eqnarray.          (line  3461)
* environnement equation:                equation.          (line  3500)
* environnement equation <1>:            Math formulas.     (line  7665)
* environnement figure:                  figure.            (line  3520)
* environnement filecontents:            filecontents.      (line  3578)
* environnement filecontents*:           filecontents.      (line  3578)
* environnement flushleft:               flushleft.         (line  3645)
* environnement flushright:              flushright.        (line  3714)
* environnement itemize:                 itemize.           (line  3768)
* environnement letter:                  letter.            (line  3868)
* environnement list:                    list.              (line  3873)
* environnement math:                    math.              (line  4262)
* environnement math <1>:                Math formulas.     (line  7665)
* environnement minipage:                minipage.          (line  4275)
* environnement picture:                 picture.           (line  4444)
* environnement quotation:               quotation & quote. (line  4882)
* environnement quote:                   quotation & quote. (line  4882)
* environnement tabbing:                 tabbing.           (line  4920)
* environnement table:                   table.             (line  5306)
* environnement tabular:                 tabular.           (line  5368)
* environnement thebibliography:         thebibliography.   (line  5673)
* environnement theorem:                 theorem.           (line  5926)
* environnement titlepage:               titlepage.         (line  5956)
* environnement verbatim:                verbatim.          (line  5997)
* environnement verse:                   verse.             (line  6082)
* eqnarray, environnement:               eqnarray.          (line  3461)
* equation, environnement:               equation.          (line  3500)
* equation, environnement <1>:           Math formulas.     (line  7665)
* etex, commande:                        TeX engines.       (line   490)
* etoolbox, paquetage:                   Class and package commands.
                                                            (line  1022)
* eurosym, paquetage:                    Text symbols.      (line 10971)
* ex:                                    Units of length.   (line  7474)
* expl3, paquetage:                      Upper and lower case.
                                                            (line 10823)
* fancyvrb, paquetage:                   tabbing.           (line  4933)
* fancyvrb, paquetage <1>:               verbatim.          (line  6034)
* fichier .dvi:                          Output files.      (line   425)
* fichier .log:                          Output files.      (line   443)
* figure, environnement:                 figure.            (line  3520)
* filecontents*, environnement:          filecontents.      (line  3578)
* filecontents, environnement:           filecontents.      (line  3578)
* first-latex-doc document:              About this document.
                                                            (line   336)
* flafter, paquetage:                    Floats.            (line  2051)
* float, paquetage:                      Floats.            (line  2018)
* flushleft, environnement:              flushleft.         (line  3645)
* flushright, environnement:             flushright.        (line  3714)
* footmisc, paquetage:                   Footnotes in section headings.
                                                            (line  6531)
* geometry, paquetage:                   Document class options.
                                                            (line   757)
* geometry, paquetage <1>:               Document class options.
                                                            (line   762)
* graphpap, paquetage:                   \graphpaper.       (line  4646)
* grfext, paquetage:                     \DeclareGraphicsExtensions.
                                                            (line 10180)
* <https://latexref.xyz> page d’accueil: About this document.
                                                            (line   305)
* hyperref, paquetage:                   Command line input.
                                                            (line 12571)
* in:                                    Units of length.   (line  7452)
* indentfirst, paquetage:                \part.             (line  2270)
* indentfirst, paquetage <1>:            \chapter.          (line  2336)
* indentfirst, paquetage <2>:            \section.          (line  2441)
* indentfirst, paquetage <3>:            \subsection.       (line  2514)
* indentfirst, paquetage <4>:            \subsubsection & \paragraph & \subparagraph.
                                                            (line  2599)
* itemize, environnement:                itemize.           (line  3768)
* latex:                                 TeX engines.       (line   488)
* latex-dev:                             TeX engines.       (line   544)
* latex-doc-ptr document:                About this document.
                                                            (line   333)
* <latexrefman@tug.org> adresse mél.:    About this document.
                                                            (line   318)
* letter, environnement:                 letter.            (line  3868)
* list, environnement:                   list.              (line  3873)
* listings, paquetage:                   tabbing.           (line  4933)
* listings, paquetage <1>:               verbatim.          (line  6028)
* listings, paquetage <2>:               \verb.             (line  6066)
* longtable, paquetage:                  tabbing.           (line  4933)
* lR box:                                picture.           (line  4541)
* lrbox:                                 lrbox.             (line  9631)
* lshort document:                       About this document.
                                                            (line   346)
* lualatex:                              TeX engines.       (line   508)
* lualatex commande:                     TeX engines.       (line   509)
* lualatex-dev:                          TeX engines.       (line   545)
* macros2e, paquetage:                   \makeatletter & \makeatother.
                                                            (line  6731)
* makeidx, paquetage:                    Indexes.           (line 11698)
* math, environnement:                   math.              (line  4262)
* math, environnement <1>:               Math formulas.     (line  7665)
* MetaPost, paquetage:                   \line.             (line  4715)
* mfirstuc, paquetage:                   Upper and lower case.
                                                            (line 10820)
* minipage, environnement:               minipage.          (line  4275)
* minted, paquetage:                     tabbing.           (line  4933)
* minted, paquetage <1>:                 verbatim.          (line  6028)
* minted, paquetage <2>:                 \verb.             (line  6066)
* mm:                                    Units of length.   (line  7463)
* mu:                                    Units of length.   (line  7487)
* multind, paquetage:                    Indexes.           (line 11710)
* option 10pt:                           Document class options.
                                                            (line   730)
* option 11pt:                           Document class options.
                                                            (line   730)
* option 12pt:                           Document class options.
                                                            (line   730)
* option a4paper:                        Document class options.
                                                            (line   736)
* option a5paper:                        Document class options.
                                                            (line   736)
* option b5paper:                        Document class options.
                                                            (line   736)
* option draft:                          Document class options.
                                                            (line   767)
* option executivepaper:                 Document class options.
                                                            (line   736)
* option final:                          Document class options.
                                                            (line   767)
* option fleqn:                          Document class options.
                                                            (line   767)
* option landscape:                      Document class options.
                                                            (line   767)
* option legalpaper:                     Document class options.
                                                            (line   736)
* option leqno:                          Document class options.
                                                            (line   767)
* option letterpaper:                    Document class options.
                                                            (line   736)
* option notitlepage:                    Document class options.
                                                            (line   767)
* option onecolumn:                      Document class options.
                                                            (line   789)
* option oneside:                        Document class options.
                                                            (line   789)
* option openany:                        Document class options.
                                                            (line   789)
* option openbib:                        Document class options.
                                                            (line   767)
* option openright:                      Document class options.
                                                            (line   789)
* option titlepage:                      Document class options.
                                                            (line   767)
* option twocolumn:                      Document class options.
                                                            (line   789)
* option twoside:                        Document class options.
                                                            (line   789)
* paquetage adjustbox:                   Boxes.             (line  9320)
* paquetage algorithm2e:                 tabbing.           (line  4933)
* paquetage amsmath:                     array.             (line  3152)
* paquetage amsmath <1>:                 displaymath.       (line  3332)
* paquetage amsmath <2>:                 equation.          (line  3514)
* paquetage amsmath <3>:                 theorem.           (line  5948)
* paquetage amsthm:                      theorem.           (line  5948)
* paquetage answers:                     \write.            (line 12247)
* paquetage appendix:                    \appendix.         (line  2643)
* paquetage Asymptote:                   \line.             (line  4715)
* paquetage Asymptote <1>:               \mbox & \makebox.  (line  9397)
* paquetage Asymptote <2>:               \write18.          (line 12355)
* paquetage babel:                       \chapter.          (line  2354)
* paquetage babel <1>:                   thebibliography.   (line  5722)
* paquetage babel <2>:                   Table of contents etc..
                                                            (line 11566)
* paquetage babel <3>:                   Indexes.           (line 11688)
* paquetage beamer:                      beamer template.   (line 12776)
* paquetage cleveref:                    Cross references.  (line  2937)
* paquetage cprotect:                    verbatim.          (line  6018)
* paquetage cprotect <1>:                \verb.             (line  6069)
* paquetage datatool:                    \read.             (line 12101)
* paquetage datetime:                    \today.            (line 11242)
* paquetage enumitem:                    itemize.           (line  3838)
* paquetage enumitem <1>:                list.              (line  4162)
* paquetage etoolbox:                    Class and package commands.
                                                            (line  1022)
* paquetage eurosym:                     Text symbols.      (line 10971)
* paquetage expl3:                       Upper and lower case.
                                                            (line 10823)
* paquetage fancyvrb:                    tabbing.           (line  4933)
* paquetage fancyvrb <1>:                verbatim.          (line  6034)
* paquetage flafter:                     Floats.            (line  2051)
* paquetage float:                       Floats.            (line  2018)
* paquetage footmisc:                    Footnotes in section headings.
                                                            (line  6531)
* paquetage geometry:                    Document class options.
                                                            (line   757)
* paquetage geometry <1>:                Document class options.
                                                            (line   762)
* paquetage graphpap:                    \graphpaper.       (line  4646)
* paquetage grfext:                      \DeclareGraphicsExtensions.
                                                            (line 10180)
* paquetage hyperref:                    Command line input.
                                                            (line 12571)
* paquetage indentfirst:                 \part.             (line  2270)
* paquetage indentfirst <1>:             \chapter.          (line  2336)
* paquetage indentfirst <2>:             \section.          (line  2441)
* paquetage indentfirst <3>:             \subsection.       (line  2514)
* paquetage indentfirst <4>:             \subsubsection & \paragraph & \subparagraph.
                                                            (line  2599)
* paquetage listings:                    tabbing.           (line  4933)
* paquetage listings <1>:                verbatim.          (line  6028)
* paquetage listings <2>:                \verb.             (line  6066)
* paquetage longtable:                   tabbing.           (line  4933)
* paquetage macros2e:                    \makeatletter & \makeatother.
                                                            (line  6731)
* paquetage makeidx:                     Indexes.           (line 11698)
* paquetage MetaPost:                    \line.             (line  4715)
* paquetage mfirstuc:                    Upper and lower case.
                                                            (line 10820)
* paquetage minted:                      tabbing.           (line  4933)
* paquetage minted <1>:                  verbatim.          (line  6028)
* paquetage minted <2>:                  \verb.             (line  6066)
* paquetage multind:                     Indexes.           (line 11710)
* paquetage pict2e:                      \line.             (line  4715)
* paquetage polyglossia:                 Table of contents etc..
                                                            (line 11567)
* paquetage polyglossia <1>:             Indexes.           (line 11688)
* paquetage PSTricks:                    \line.             (line  4715)
* paquetage setspace:                    Low-level font commands.
                                                            (line  1599)
* paquetage showidx:                     Indexes.           (line 11706)
* paquetage siunitx:                     minipage.          (line  4418)
* paquetage soul:                        tabbing.           (line  5275)
* paquetage suffix:                      \@ifstar.          (line  6811)
* paquetage texosquery:                  \write18.          (line 12420)
* paquetage textcase:                    Upper and lower case.
                                                            (line 10817)
* paquetage textcomp:                    Font styles.       (line  1374)
* paquetage TikZ:                        \line.             (line  4715)
* paquetage TikZ <1>:                    \mbox & \makebox.  (line  9396)
* paquetage titlesec:                    Sectioning.        (line  2183)
* paquetage titlesec <1>:                \part.             (line  2274)
* paquetage titlesec <2>:                \chapter.          (line  2363)
* paquetage titlesec <3>:                \section.          (line  2450)
* paquetage titlesec <4>:                \subsection.       (line  2523)
* paquetage titlesec <5>:                \subsubsection & \paragraph & \subparagraph.
                                                            (line  2609)
* paquetage tocbibbind:                  Table of contents etc..
                                                            (line 11571)
* paquetage tocloft:                     Table of contents etc..
                                                            (line 11571)
* paquetage url:                         \verb.             (line  6062)
* paquetage verbatimbox:                 verbatim.          (line  6034)
* paquetage xparse:                      \@ifstar.          (line  6811)
* paquetage xspace:                      \(SPACE) after control sequence.
                                                            (line  9132)
* pc:                                    Units of length.   (line  7449)
* pdflatex:                              TeX engines.       (line   489)
* pdflatex-dev:                          TeX engines.       (line   546)
* pict2e, paquetage:                     \line.             (line  4715)
* picture, environnement:                picture.           (line  4444)
* platex:                                TeX engines.       (line   533)
* platex-dev:                            TeX engines.       (line   547)
* polyglossia, paquetage:                Table of contents etc..
                                                            (line 11567)
* polyglossia, paquetage <1>:            Indexes.           (line 11688)
* pouce (inch):                          Units of length.   (line  7452)
* PSTricks, paquetage:                   \line.             (line  4715)
* pt:                                    Units of length.   (line  7445)
* quotation, environnement:              quotation & quote. (line  4882)
* quote, environnement:                  quotation & quote. (line  4882)
* secnumdepth:                           Sectioning.        (line  2194)
* secnumdepth compteur:                  Sectioning.        (line  2195)
* setspace, paquetage:                   Low-level font commands.
                                                            (line  1599)
* sh, utilisé par \write18:              \write18.          (line 12414)
* SHELL, environnement, variables de:    \write18.          (line 12414)
* SHELL, variables d’environnement:      \write18.          (line 12414)
* showidx, paquetage:                    Indexes.           (line 11706)
* siunitx, paquetage:                    minipage.          (line  4418)
* soul, paquetage:                       tabbing.           (line  5275)
* sp:                                    Units of length.   (line  7472)
* suffix, paquetage:                     \@ifstar.          (line  6811)
* tabbing, environnement:                tabbing.           (line  4920)
* table, environnement:                  table.             (line  5306)
* tabular, environnement:                tabular.           (line  5368)
* texosquery, paquetage:                 \write18.          (line 12420)
* textcase, paquetage:                   Upper and lower case.
                                                            (line 10817)
* textcomp, paquetage:                   Font styles.       (line  1374)
* textcomp, paquetage <1>:               Text symbols.      (line 10849)
* thebibliography, environnement:        thebibliography.   (line  5673)
* theorem, environnement:                theorem.           (line  5926)
* TikZ, paquetage:                       \line.             (line  4715)
* TikZ, paquetage <1>:                   \mbox & \makebox.  (line  9396)
* titlepage, environnement:              titlepage.         (line  5956)
* titlesec, paquetage:                   Sectioning.        (line  2183)
* titlesec, paquetage <1>:               \part.             (line  2274)
* titlesec, paquetage <2>:               \chapter.          (line  2363)
* titlesec, paquetage <3>:               \section.          (line  2450)
* titlesec, paquetage <4>:               \subsection.       (line  2523)
* titlesec, paquetage <5>:               \subsubsection & \paragraph & \subparagraph.
                                                            (line  2609)
* tocbibbind, paquetage:                 Table of contents etc..
                                                            (line 11571)
* tocdepth:                              Sectioning.        (line  2208)
* tocdepth counter:                      Sectioning.        (line  2209)
* tocloft, paquetage:                    Table of contents etc..
                                                            (line 11571)
* topmargin:                             Page layout parameters.
                                                            (line  1932)
* uplatex:                               TeX engines.       (line   534)
* uplatex-dev:                           TeX engines.       (line   548)
* url, paquetage:                        \verb.             (line  6062)
* usrguide documentation officielle:     About this document.
                                                            (line   340)
* verbatim, environnement:               verbatim.          (line  5997)
* verbatimbox, paquetage:                verbatim.          (line  6034)
* verse, environnement:                  verse.             (line  6082)
* xdvipdfmx:                             TeX engines.       (line   519)
* xelatex:                               TeX engines.       (line   518)
* xelatex commande:                      TeX engines.       (line   519)
* xelatex-dev:                           TeX engines.       (line   549)
* xparse, paquetage:                     \@ifstar.          (line  6811)
* xspace, paquetage:                     \(SPACE) after control sequence.
                                                            (line  9132)

